{"version":3,"file":"ece2a3dd.js","sources":["../../../client/src/screens/SignIn.tsx"],"sourcesContent":["import React, { useLayoutEffect, useState, useRef } from 'react';\n\nimport { useForm } from 'react-hook-form';\n\nimport { Link } from '@react-navigation/native';\n\nimport { StyleSheet, mergeStyleSheetMany } from '../primitives';\n\nimport Input from '../components/Input';\n\nimport {\n  Platform,\n  Text,\n  View,\n  useColorScheme,\n  Pressable,\n  TextInput,\n  Keyboard,\n  useWindowDimensions,\n  ViewStyle,\n} from 'react-native';\nimport Bg from '../components/Background';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport { addHomeRouteIfNeeded } from '../components/AppBar';\n\nimport Toast from '../components/Toast';\nimport Screen from '../components/Screen';\n\nimport { Center, VStack, HStack } from '../primitives';\n\nimport { useReactNavigation } from '../utils';\n\nimport { Routes } from '../Routes';\n\nimport { dark as formDarkTheme } from './forms-theme';\nimport { light as formLightTheme } from './forms-theme';\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { signInFormSchema } from '../yup-schemas';\n\nimport { toastAtom } from '../components/Toast';\n\nimport { useSetRecoilState } from 'recoil';\n\nimport { signIn as signInAtom, session as sessionAtom } from './atoms';\n\nimport { singInApi } from '../api';\n\nimport Card from '../components/Card';\n\nimport { SignUp } from '../components/AppBar/RightSide';\nimport { IP_ADDRESS } from '../constants';\n\nlet signInBaseTheme = StyleSheet.create({\n  paddingElement: {\n    height: Platform.OS === 'android' ? 50 : 36,\n    width: 1,\n  },\n  submitButtonContainer: {\n    // marginTop: 36,\n  },\n});\n\nlet signInDarkTheme = mergeStyleSheetMany(formDarkTheme, signInBaseTheme);\n\nlet signInLightTheme = mergeStyleSheetMany(formLightTheme, signInBaseTheme);\n\nexport type UserSignIn = {\n  email: string;\n  password: string;\n};\n\nimport { computeFormHeight } from './forms-theme';\n\n// import Toast from '../components/Toast';\n\nexport default React.memo(function Form(): JSX.Element {\n  let inserts = useSafeAreaInsets();\n\n  let OSTheme = useColorScheme();\n\n  let setSignInAtom = useSetRecoilState(signInAtom);\n  let setSessionAtom = useSetRecoilState(sessionAtom);\n  let setToastAttom = useSetRecoilState(toastAtom);\n\n  let formTheme = OSTheme === 'dark' ? signInDarkTheme : signInLightTheme;\n\n  // let [isSignIn, setIsSignIn] = useRecoilState(signInEmail);\n  // let [userSingUpError, setUserSignUpError] = useState<string | null>(null);\n\n  let { height } = useWindowDimensions();\n\n  let formHeight = computeFormHeight(formDarkTheme.raw.formContent);\n  let bottomHeight = (height - formHeight) / 2;\n\n  let nav = useReactNavigation<Routes>();\n\n  // let toatsTop = [\n  //   formTheme.errorToastContainer,\n  //   {\n  //     top: height - bottomHeight,\n  //     width: formDarkTheme.raw.formContent.width * 0.9,\n  //     borderWidth: 0,\n  //   },\n  // ] as ViewStyle;\n\n  const {\n    control,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    mode: 'onBlur',\n    resolver: yupResolver(signInFormSchema),\n  });\n\n  let onSubmit = async (data: UserSignIn) => {\n    Keyboard.dismiss();\n\n    let url = Platform.OS === 'web' ? '' : `http://${IP_ADDRESS}:8000`;\n\n    try {\n      let serverMsg = await singInApi(`${url}/sign-in`, {\n        method: 'POST',\n        // important because is creating a new user on the same browser\n        // should have 2 diferent cookies.\n        // credentials: 'omit',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n\n      // let serverMsg: SignInServerResponse = await res.json();\n\n      // console.log(serverMsg);\n      let toatsTop = {\n        top: height - bottomHeight,\n        width: formDarkTheme.raw.formContent.width * 0.9,\n        borderWidth: 0,\n      } as ViewStyle;\n\n      if (serverMsg.errors) {\n        console.log(serverMsg);\n\n        setToastAttom({\n          display: true,\n          type: 'error',\n          message: serverMsg.errors,\n          // timer: 1000 * 5, // 5 sec\n          containerStyle: toatsTop,\n          onPress: () => {\n            // setUserSignUpError(null);\n            console.log('pressed toast');\n          },\n          onClose: () => {\n            setToastAttom({\n              display: false,\n              type: 'success',\n              message: '',\n            });\n          },\n        });\n        // if (serverMsg.errors.email) {\n        //   setUserSignUpError(serverMsg.errors.email);\n        // }\n      } else {\n        if (serverMsg.success) {\n          setSignInAtom(serverMsg);\n          setSessionAtom(serverMsg?.data || null);\n          nav.navigate('Dashboard');\n\n          console.log('toast green');\n          setToastAttom({\n            display: true,\n            type: 'success',\n            message: serverMsg.success || '',\n            timer: 1000 * 5, // 5 sec\n            containerStyle: toatsTop,\n            onPress: () => {\n              // setUserSignUpError(null);\n              console.log('pressed toast');\n            },\n            onClose: () => {\n              setToastAttom({\n                display: false,\n                type: 'success',\n                message: '',\n              });\n            },\n          });\n        }\n      }\n\n      // console.clear();\n\n      // console.log('WWWWW', ;\n    } catch (e) {\n      // console.log('EEE', e);\n    }\n  };\n\n  useLayoutEffect(() => {\n    addHomeRouteIfNeeded(nav);\n  }, [nav]);\n\n  if (Platform.OS === 'web') {\n    window.scrollTo({ top: -1, left: -1, behavior: 'smooth' });\n  }\n\n  let emailInput = useRef<TextInput>(null);\n  let passwordInput = useRef<TextInput>(null);\n\n  let buttonHandler = handleSubmit(onSubmit);\n\n  // console.log(formTheme.raw.formContent);\n  return (\n    <Screen>\n      <Center style={[inserts, formTheme.formContainer]}>\n        <Card containerStyle={{}} contentStyle={formTheme.formContent}>\n          <Text style={formTheme.formTitle}>Welcome</Text>\n          <Text style={formTheme.formSubTitle}>Sign in to continue!</Text>\n\n          <VStack style={formTheme.inputsContainer}>\n            <Input\n              ref={emailInput}\n              name=\"email\"\n              rules={{ required: true }}\n              errors={errors}\n              control={control}\n              titleText=\"Email\"\n              titleStyle={formTheme.inputTitle}\n              inputStyle={formTheme.inputContent}\n              inputErrorMsg={formTheme.inputErrorMsg}\n              inputFocusError={formTheme.inputFocusError}\n              onSubmitEditing={e => {\n                passwordInput.current?.focus();\n              }}\n            />\n\n            <Input\n              ref={passwordInput}\n              name=\"password\"\n              rules={{ required: true }}\n              errors={errors}\n              control={control}\n              titleText=\"Password\"\n              textContentType=\"oneTimeCode\"\n              titleStyle={formTheme.passwordInput}\n              inputStyle={formTheme.inputContent}\n              inputErrorMsg={formTheme.inputErrorMsg}\n              inputFocusError={formTheme.inputFocusError}\n              secureTextEntry={true}\n              onSubmitEditing={e => {\n                // console.log('*');\n                e.persist();\n\n                // this timeout is to give time to react-hook-form to detect the error\n                setTimeout(() => {\n                  if (Object.keys(errors).length > 0) {\n                    if (Platform.OS === 'web') {\n                      buttonHandler(e);\n                      // Keyboard.dismiss();\n\n                      passwordInput.current?.focus();\n                    }\n                    // setFocus('confirmPassword');\n                    return;\n                  } else {\n                    buttonHandler(e);\n                  }\n                }, 100);\n              }}\n            />\n            <Text style={formTheme.forgotPassword}>Forgot Password?</Text>\n            <View style={formTheme.paddingElement} />\n            <Pressable onPress={buttonHandler}>\n              <View style={formTheme.submitButtonContainer}>\n                <Center>\n                  <Text style={formTheme.submitButtonContent}>Sign in</Text>\n                </Center>\n              </View>\n            </Pressable>\n\n            <HStack style={formTheme.signUpContainer}>\n              <Text style={formTheme.signUpSubText}>{\"I'm a new user. \"}</Text>\n              <View style={formTheme.signUpMainText}>\n                <SignUp />\n              </View>\n            </HStack>\n          </VStack>\n        </Card>\n      </Center>\n    </Screen>\n  );\n});\n\n// <Center\n// style={[\n//   viewWrapStyle,\n//   {\n//     position:\n//       Platform.OS === 'web' ? ('fixed' as 'absolute') : 'absolute',\n//   },\n// ]}>\n// <VStack>\n//   <Center>\n//     <FormControl isRequired isInvalid>\n//       <View\n//         style={[\n//           {\n//             margin: 10,\n//             padding: 30,\n//             backgroundColor: 'rgba(0, 0, 0, 0.5)',\n//             borderRadius: 10,\n//           },\n//           cardTheme.cardContent,\n//         ]}>\n//         <FormControl.Label\n//           _text={{\n//             color: 'gray.500',\n//             bold: true,\n//           }}>\n//           At vero eos et accusamus\n//         </FormControl.Label>\n//         <Input p={2} placeholder=\"et iusto odio dignissimos\" />\n//         <FormControl.HelperText>\n//           ducimus qui blanditiis praesentium voluptatum\n//         </FormControl.HelperText>\n//         <FormControl.ErrorMessage>\n//           deleniti atque corrupti quos dolores\n//         </FormControl.ErrorMessage>\n//       </View>\n//     </FormControl>\n//   </Center>\n\n//   <Center>\n//     <FormControl>\n//       <View\n//         style={[\n//           {\n//             margin: 10,\n//             padding: 30,\n//             backgroundColor: 'rgba(0, 0, 0, 0.5)',\n//             borderRadius: 10,\n//           },\n//           cardTheme.cardContent,\n//         ]}>\n//         <FormControl.Label\n//           _text={{\n//             color: 'gray.500',\n//           }}>\n//           At vero eos et accusamus\n//         </FormControl.Label>\n//         <Input p={2} placeholder=\"et iusto odio dignissimos\" />\n//         <FormControl.HelperText>\n//           ducimus qui blanditiis praesentium voluptatum\n//         </FormControl.HelperText>\n//         <FormControl.ErrorMessage>\n//           deleniti atque corrupti quos dolores\n//         </FormControl.ErrorMessage>\n//       </View>\n//     </FormControl>\n//   </Center>\n// </VStack>\n// </Center>\n"],"names":["Platform","formDarkTheme","formLightTheme","useSetRecoilState","signInAtom","sessionAtom","yupResolver","useRef"],"mappings":"+UAsDA,GAAI,GAAkB,EAAW,OAAO,CACtC,eAAgB,CACd,OAAQA,EAAS,KAAO,UAAY,GAAK,GACzC,MAAO,GAET,sBAAuB,KAKrB,GAAkB,EAAoBC,EAAe,GAErD,GAAmB,EAAoBC,EAAgB,GAW3D,OAAe,EAAM,KAAK,UAA6B,IACjD,GAAU,IAEV,EAAU,IAEV,EAAgBC,EAAkBC,GAClC,EAAiBD,EAAkBE,GACnC,EAAgBF,EAAkB,GAElC,EAAY,IAAY,OAAS,GAAkB,GAKnD,CAAE,UAAW,IAEb,EAAa,EAAkBF,EAAc,IAAI,aACjD,KAAyB,GAAc,EAEvC,EAAM,SAWJ,CACJ,UACA,eACA,UAAW,CAAE,WACX,EAAQ,CACV,KAAM,SACN,SAAUK,EAAY,QAGpB,GAAW,KAAO,IAAqB,GAChC,aAEL,GAAMN,EAAS,KAAO,MAAQ,GAAK,UAAU,YAE7C,IACE,GAAY,KAAM,IAAU,GAAG,YAAe,CAChD,OAAQ,OAIR,QAAS,CACP,eAAgB,oBAElB,KAAM,KAAK,UAAU,KAMnB,EAAW,CACb,IAAK,EAAS,EACd,MAAOC,EAAc,IAAI,YAAY,MAAQ,GAC7C,YAAa,GAGX,EAAU,gBACJ,IAAI,KAEE,CACZ,QAAS,GACT,KAAM,QACN,QAAS,EAAU,OAEnB,eAAgB,EAChB,QAAS,IAAM,SAEL,IAAI,kBAEd,QAAS,IAAM,GACC,CACZ,QAAS,GACT,KAAM,UACN,QAAS,SAQX,EAAU,YACE,KACC,kBAAW,OAAQ,QAC9B,SAAS,qBAEL,IAAI,iBACE,CACZ,QAAS,GACT,KAAM,UACN,QAAS,EAAU,SAAW,GAC9B,MAAO,IAAO,EACd,eAAgB,EAChB,QAAS,IAAM,SAEL,IAAI,kBAEd,QAAS,IAAM,GACC,CACZ,QAAS,GACT,KAAM,UACN,QAAS,4CAeP,IAAM,GACC,IACpB,CAAC,IAEAD,EAAS,KAAO,cACX,SAAS,CAAE,IAAK,GAAI,KAAM,GAAI,SAAU,cAG7C,GAAaO,iBAAkB,MAC/B,EAAgBA,iBAAkB,MAElC,EAAgB,EAAa,0BAI9B,EAAD,qBACG,EAAD,CAAQ,MAAO,CAAC,EAAS,EAAU,gCAChC,EAAD,CAAM,eAAgB,GAAI,aAAc,EAAU,6BAC/C,EAAD,CAAM,MAAO,EAAU,WAAW,2BACjC,EAAD,CAAM,MAAO,EAAU,cAAc,wCAEpC,EAAD,CAAQ,MAAO,EAAU,iCACtB,EAAD,CACE,IAAK,EACL,KAAK,QACL,MAAO,CAAE,SAAU,IACnB,SACA,UACA,UAAU,QACV,WAAY,EAAU,WACtB,WAAY,EAAU,aACtB,cAAe,EAAU,cACzB,gBAAiB,EAAU,gBAC3B,gBAAiB,GAAK,YACN,kBAAS,2BAI1B,EAAD,CACE,IAAK,EACL,KAAK,WACL,MAAO,CAAE,SAAU,IACnB,SACA,UACA,UAAU,WACV,gBAAgB,cAChB,WAAY,EAAU,cACtB,WAAY,EAAU,aACtB,cAAe,EAAU,cACzB,gBAAiB,EAAU,gBAC3B,gBAAiB,GACjB,gBAAiB,GAAK,GAElB,qBAGS,IAAM,UACX,OAAO,KAAK,GAAQ,OAAS,EAAG,CAC9BP,EAAS,KAAO,UACJ,QAGA,kBAAS,uBAKX,IAEf,wBAGN,EAAD,CAAM,MAAO,EAAU,gBAAgB,oCACtC,EAAD,CAAM,MAAO,EAAU,iCACtB,EAAD,CAAW,QAAS,mBACjB,EAAD,CAAM,MAAO,EAAU,uCACpB,EAAD,qBACG,EAAD,CAAM,MAAO,EAAU,qBAAqB,8BAKjD,EAAD,CAAQ,MAAO,EAAU,iCACtB,EAAD,CAAM,MAAO,EAAU,eAAgB,oCACtC,EAAD,CAAM,MAAO,EAAU,gCACpB,EAAD"}