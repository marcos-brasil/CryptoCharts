{"version":3,"file":"4fd5d5b2.js","sources":["../../../client/src/screens/SignUp.tsx"],"sourcesContent":["import React, { useLayoutEffect, useEffect, useRef, useState } from 'react';\nimport type { MutableRefObject } from 'react';\nimport { Keyboard, useWindowDimensions, ViewStyle } from 'react-native';\nimport { useForm } from 'react-hook-form';\n\nimport { CloseCircle } from '../primitives/Icons';\n\nimport { CommonActions } from '@react-navigation/native';\n\nimport { StyleSheet, mergeStyleSheetMany } from '../primitives';\n\nimport Input from '../components/Input';\n\nimport {\n  Platform,\n  Text,\n  View,\n  useColorScheme,\n  Pressable,\n  TextInput,\n  // useWindowDimensions\n} from 'react-native';\nimport Bg from '../components/Background';\n\nimport Screen from '../components/Screen';\n\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport AppBar, { addHomeRouteIfNeeded } from '../components/AppBar';\n\nimport { Center, VStack, HStack } from '../primitives';\n\nimport { dark as formDarkTheme } from './forms-theme';\nimport { light as formLightTheme } from './forms-theme';\n\n// import { signInDarkTheme, signInLightTheme } from './SignIn';\n\n// import * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nimport { useReactNavigation } from '../utils';\n\nimport { Routes } from '../Routes';\nimport { singUpFormSchema } from '../yup-schemas';\n\nimport { toastAtom } from '../components/Toast';\n\nimport { useSetRecoilState } from 'recoil';\n\nimport { signIn as signInAtom, session as sessionAtom } from './atoms';\nimport { singInApi } from '../api';\n\nexport type UserSignUp = {\n  email: string;\n  password: string;\n  confirmPassword: string;\n};\n\nimport { IP_ADDRESS } from '../constants';\nimport Card from '../components/Card';\n\nlet signUpBaseTheme = StyleSheet.create({\n  submitButtonContainer: {\n    marginTop: 18,\n  },\n});\n\nlet signUpDarkTheme = mergeStyleSheetMany(formDarkTheme, signUpBaseTheme);\n\nlet signUpLightTheme = mergeStyleSheetMany(formLightTheme, signUpBaseTheme);\n\n// let computeFormHeight = ({\n//   height,\n//   padding,\n// }: {\n//   height: number;\n//   padding: number;\n// }): number => {\n//   return height + 2 * padding;\n// };\n\nimport { computeFormHeight } from './forms-theme';\n\nexport default React.memo(function Form(): JSX.Element {\n  let inserts = useSafeAreaInsets();\n\n  let { height } = useWindowDimensions();\n\n  let setSignInAtom = useSetRecoilState(signInAtom);\n  let setSessionAtom = useSetRecoilState(sessionAtom);\n  let setToastAttom = useSetRecoilState(toastAtom);\n\n  let formHeight = computeFormHeight(formDarkTheme.raw.formContent);\n\n  let OSTheme = useColorScheme();\n  let formTheme = OSTheme === 'dark' ? signUpDarkTheme : signUpLightTheme;\n\n  let [userSingUpError, setUserSignUpError] = useState<string | null>(null);\n\n  let bottomHeight = (height - formHeight) / 2;\n\n  let nav = useReactNavigation<Routes>();\n  const {\n    control,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    mode: 'onBlur',\n    resolver: yupResolver(singUpFormSchema),\n  });\n\n  // type ServerRes = {\n  //   success?: string;\n  //   errors?: Record<string, string>;\n  // };\n  //   | Record<'success', string>\n  //   | Record<'errors', Record<string, string>>;\n\n  const onSubmit = async (data: UserSignUp) => {\n    Keyboard.dismiss();\n\n    let url = Platform.OS === 'web' ? '' : `http://${IP_ADDRESS}:8000`;\n\n    try {\n      let serverMsg = await singInApi(`${url}/sign-up`, {\n        method: 'POST',\n        // important because is creating a new user on the same browser\n        // should have 2 diferent cookies.\n        // credentials: 'omit',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n\n      // let serverMsg: SignInServerResponse = await res.json();\n\n      // console.log(serverMsg);\n\n      // let toatsTop = {\n      //   top: height - bottomHeight,\n      //   width: formDarkTheme.raw.formContent.width * 0.9,\n      //   borderWidth: 0,\n      // } as ViewStyle;\n\n      if (serverMsg.errors) {\n        // setUserSignUpError(serverMsg.errors);\n\n        setToastAttom({\n          display: true,\n          type: 'error',\n          message: serverMsg.errors,\n          onPress: () => {\n            // setUserSignUpError(null);\n            console.log('pressed toast');\n          },\n          onClose: () => {\n            setToastAttom({\n              display: false,\n              type: 'success',\n              message: '',\n            });\n          },\n        });\n      } else {\n        if (serverMsg.success) {\n          setSignInAtom(serverMsg);\n          setSessionAtom(serverMsg?.data || null);\n          setToastAttom({\n            display: true,\n            type: 'success',\n            message: serverMsg.success,\n            timer: 1000 * 5, // 5 sec\n            // containerStyle: toatsTop,\n            onPress: () => {\n              // setUserSignUpError(null);\n              console.log('pressed toast');\n            },\n            onClose: () => {\n              setToastAttom({\n                display: false,\n                type: 'success',\n                message: '',\n              });\n            },\n          });\n          nav.navigate('Dashboard');\n        }\n      }\n\n      // console.clear();\n\n      // console.log('WWWWW', ;\n    } catch (e) {\n      // console.log('EEE', e);\n    }\n  };\n  // useEffect(() => {\n  //   let keyboardWillShow = Keyboard.addListener('keyboardWillShow', e => {\n  //     console.log(e);\n  //   });\n\n  //   return () => {\n  //     // rm()\n  //     Keyboard?.removeSubscription &&\n  //       Keyboard?.removeSubscription(keyboardWillShow);\n  //   };\n  // }, []);\n\n  useLayoutEffect(() => {\n    addHomeRouteIfNeeded(nav);\n  }, [nav]);\n\n  if (Platform.OS === 'web') {\n    window.scrollTo({ top: -1, left: -1, behavior: 'smooth' });\n  }\n\n  let emailInput = useRef<TextInput>(null);\n  let passwordInput = useRef<TextInput>(null);\n  let confirmPasswordInput = useRef<TextInput>(null);\n\n  let buttonHandler = handleSubmit(onSubmit);\n\n  useEffect(() => {\n    if (userSingUpError) {\n      let toatsTop = {\n        top: height - bottomHeight,\n        width: formDarkTheme.raw.formContent.width * 0.9,\n        borderWidth: 0,\n      } as ViewStyle;\n\n      setToastAttom({\n        display: true,\n        type: 'error',\n        message: userSingUpError,\n        containerStyle: toatsTop,\n        onPress: () => {\n          // setUserSignUpError(null);\n          console.log('pressed toast');\n        },\n        onClose: () => {\n          setUserSignUpError(null);\n        },\n      });\n    } else {\n      setToastAttom({\n        display: false,\n        type: 'success',\n        message: '',\n      });\n    }\n  }, [bottomHeight, height, setToastAttom, userSingUpError]);\n\n  return (\n    <Screen>\n      <Center style={[inserts, formTheme.formContainer]}>\n        <Card containerStyle={{}} contentStyle={formTheme.formContent}>\n          <Text style={formTheme.formTitle}>Welcome</Text>\n          <Text style={formTheme.formSubTitle}>Sign in to continue!</Text>\n\n          <VStack style={formTheme.inputsContainer}>\n            <Input\n              ref={emailInput}\n              name=\"email\"\n              rules={{ required: true }}\n              errors={errors}\n              control={control}\n              titleText=\"Email\"\n              titleStyle={formTheme.inputTitle}\n              inputStyle={formTheme.inputContent}\n              inputErrorMsg={formTheme.inputErrorMsg}\n              inputFocusError={formTheme.inputFocusError}\n              onSubmitEditing={e => {\n                passwordInput.current?.focus();\n              }}\n            />\n\n            <Input\n              ref={passwordInput}\n              name=\"password\"\n              rules={{ required: true }}\n              errors={errors}\n              control={control}\n              titleText=\"Password\"\n              textContentType=\"oneTimeCode\"\n              titleStyle={formTheme.passwordInput}\n              inputStyle={formTheme.inputContent}\n              inputErrorMsg={formTheme.inputErrorMsg}\n              inputFocusError={formTheme.inputFocusError}\n              secureTextEntry={true}\n              onSubmitEditing={e => {\n                passwordInput.current?.blur();\n                confirmPasswordInput.current?.focus();\n              }}\n            />\n\n            <Input\n              ref={confirmPasswordInput}\n              name=\"confirmPassword\"\n              rules={{ required: true }}\n              errors={errors}\n              control={control}\n              titleText=\"Confirm Password\"\n              titleStyle={formTheme.passwordInput}\n              inputStyle={formTheme.inputContent}\n              inputErrorMsg={formTheme.inputErrorMsg}\n              inputFocusError={formTheme.inputFocusError}\n              secureTextEntry={true}\n              blurOnInvalid={false}\n              textContentType=\"oneTimeCode\"\n              blurOnSubmit={false}\n              onSubmitEditing={e => {\n                e.persist();\n\n                // this timeout is to give time to react-hook-form to detect the error\n                setTimeout(() => {\n                  if (Object.keys(errors).length > 0) {\n                    if (Platform.OS === 'web') {\n                      buttonHandler(e);\n                      // Keyboard.dismiss();\n\n                      confirmPasswordInput.current?.focus();\n                    }\n                    // setFocus('confirmPassword');\n                    return;\n                  } else {\n                    buttonHandler(e);\n                  }\n                }, 100);\n              }}\n            />\n\n            <Pressable onPress={buttonHandler}>\n              <View style={formTheme.submitButtonContainer}>\n                <Center>\n                  <Text style={formTheme.submitButtonContent}>Sign up</Text>\n                </Center>\n              </View>\n            </Pressable>\n          </VStack>\n        </Card>\n      </Center>\n    </Screen>\n  );\n});\n"],"names":["formDarkTheme","formLightTheme","useSetRecoilState","signInAtom","sessionAtom","useState","yupResolver","Platform","useRef"],"mappings":"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"}