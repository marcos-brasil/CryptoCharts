{"version":3,"file":"3c6c2d64.js","sources":["../../../client/vite/modulepreload-polyfill","../../../client/src/components/theme.tsx","../../../client/src/components/Background.tsx","../../../client/src/screens/atoms.tsx","../../../client/src/components/AppBar/atoms.tsx","../../../client/src/utils/use-react-navigation.tsx","../../../shared/utils/emitter.tsx","../../../shared/utils/index.tsx","../../../client/src/utils/event-state-machine.tsx","../../../client/src/utils/lifo.tsx","../../../client/src/utils/stop-warn.tsx","../../../client/src/primitives/Canvas.tsx","../../../client/src/primitives/StyleSheet.tsx","../../../client/src/primitives/index.tsx","../../../client/src/components/Card.tsx","../../../client/src/components/AppBar/theme.tsx","../../../client/src/components/SparklineCard/constants.tsx","../../../client/src/components/AppBar/hooks.tsx","../../../client/src/components/AppBar/Bar.tsx","../../../client/src/themes/dark.tsx","../../../client/src/themes/light.tsx","../../../client/src/components/fix-web-svg.ts","../../../client/src/themes/base.tsx","../../../client/src/components/AppBar/LeftSide.tsx","../../../client/src/components/AppBar/RightSide.tsx","../../../client/src/components/AppBar/etc.tsx","../../../client/src/components/AppBar/index.tsx","../../../client/src/components/SparklineCard/utils.tsx","../../../client/src/components/SparklineCard/theme/base.tsx","../../../client/src/components/SparklineCard/theme/dark.tsx","../../../client/src/components/SparklineCard/theme/light.tsx","../../../client/src/constants.tsx","../../../client/src/events.tsx","../../../client/src/components/Toast/base-theme.tsx","../../../client/src/components/Toast/dark-theme.tsx","../../../client/src/components/Toast/light-theme.tsx","../../../client/src/components/Toast/index.tsx","../../../client/src/components/SparklineCard/Card.tsx","../../../client/src/components/SparklineCard/Sparkline.tsx","../../../client/src/components/SparklineCard/index.tsx","../../../client/src/components/Screen.tsx","../../../client/src/components/SimpleFlatlist/RenderItems.tsx","../../../client/src/components/SimpleFlatlist/SimpleFlatlist.tsx","../../../client/src/screens/Dashboard.tsx","../../../client/vite/preload-helper","../../../client/src/Lazy.tsx","../../../client/src/screens/forms-theme.tsx","../../../client/src/screens/UnderConstruction.tsx","../../../client/src/screens/NoMatch.tsx","../../../client/src/App.tsx","../../../client/index.ts"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","export let red75 = 'hsl(338, 65%, 75%)';\nexport let red65 = 'hsl(338, 65%, 65%)';\nexport let red50 = 'hsl(338, 65%, 50%)';\nexport let red35 = 'hsl(338, 65%, 35%)';\nexport let red20 = 'hsl(338, 65%, 20%)';\n\nexport let green70 = 'hsl(100, 65%, 70%)';\nexport let green25 = 'hsl(100, 95%, 25%)';\n\nexport let gray90 = 'hsl(0, 0%, 80%)';\nexport let gray10 = 'hsl(0, 0%, 10%)';\nexport let gray15 = 'hsl(0, 0%, 15%)';\nexport let gray45 = 'hsl(0, 0%, 45%)';\n\nexport let black05 = 'hsl(220, 92%, 5%)';\nexport let black07 = 'hsl(220, 50%, 7%)';\nexport let black12 = 'hsl(220, 33%, 12%)';\nexport let black20 = 'hsl(220, 21%, 20%)';\n// export let black20 = 'hsl(220, 21%, 20%)';\n\n// export let white\n\nexport let yellow95 = 'hsl(70, 95%, 95%)';\nexport let yellow25 = 'hsl(70, 96%, 25%)';\nexport let yellow100 = 'hsl(70, 100%, 98%)';\nexport let yellow65 = 'hsl(70, 35%, 65%)';\n\nexport let green45 = 'hsl(105, 25%, 40%)';\n\n// export let white95 = 'hsl(85, 45%, 95%)';\nexport let white95 = 'hsl(255, 100%, 100%)';\nexport let white30 = 'hsl(255, 8%, 30%)';\n\nexport let blue85 = 'hsl(245, 91%, 85%)';\nexport let blue15 = 'hsl(245, 16%, 15%)';\nexport let blue30 = 'hsl(245, 7%, 30%)';\nexport let blue45 = 'hsl(245, 37%, 45%)';\n\nexport let orange95 = 'hsl(40, 50%, 95%)';\n","import React from 'react';\nimport {\n  // FlatList,\n  // ImageBackground,\n  // Platform,\n  // StatusBar,\n  View,\n  // useWindowDimensions,\n} from 'react-native';\n\n// @ts-ignore\n// import img from './assets/background-img.jpg';\n\n// console.log('sSSSs', img);\n// import { DefaultTheme, NavigationContainer } from '@react-navigation/native';\n// document.body.style.backgroundImage = `url(${img})`;\n// document.body.style.backgroundRepeat = 'no-repeat';\n// document.body.style.backgroundAttachment = 'fixed';\n// document.body.style.backgroundSize = 'cover';\n\nlet isDark = window?.matchMedia('(prefers-color-scheme: dark)')?.matches;\n\n// let darkBackgroundcolor = 'rgb(14, 15, 28)';\nimport { black07, yellow95 } from './theme';\n\n// let darkBackgroundcolor = 'rgb(14, 15, 28)';\nlet darkBackgroundcolor = black07;\n// let lightBackgroundcolor = 'rgb(233, 237, 217)';\nlet lightBackgroundcolor = yellow95;\n\ndocument.body.style.backgroundColor = isDark\n  ? darkBackgroundcolor\n  : lightBackgroundcolor;\n\n// TODO: create a detection of theme changed\n// darkreader doenst extention respect sites theme\n// should display a toaster every page load to deactivate\n// darkreader or other equivalent extentions\n\n// this algo workins with noir and darkreader\n\n// setTimeout(() => {\n//   Object.entries(document.body.style).map(([key, value]) => {\n//     if (value.match(/^--/)) {\n//       console.log(value.replace('--', '').split('-')[0]);\n//     }\n//   });\n// }, 100);\n\nwindow\n  ?.matchMedia('(prefers-color-scheme: dark)')\n  ?.addEventListener('change', event => {\n    if (event.matches) {\n      document.body.style.backgroundColor = darkBackgroundcolor;\n    } else {\n      document.body.style.backgroundColor = lightBackgroundcolor;\n    }\n  });\n\nexport default function (): JSX.Element {\n  // console.log(DefaultTheme);\n  return (\n    <View />\n    // <ImageBackground\n    //   source={{ uri: img }}\n    //   resizeMode=\"cover\"\n    //   style={{ position: 'absolute', width: '100%', height: '100%' }}\n    // />\n  );\n}\n","import { Platform } from 'react-native';\nimport { atom, selector } from 'recoil';\n\nimport { SignInServerResponse } from '../types';\n\n// import { Routes } from '../../routes';\n\nlet sessionObj: SessionAtom = null;\nif (Platform.OS === 'web') {\n  try {\n    let sessionStr = window.atob(\n      document.body.getAttribute('data-session') || ''\n    );\n\n    let session = JSON.parse(sessionStr || '');\n\n    setTimeout(() => {\n      console.log('session', session);\n    }, 1000);\n\n    sessionObj = typeof session.email === 'string' ? session : null;\n  } catch (e) {}\n  // console.log(session);\n}\n\ntype SessionAtom = null | {\n  email: string;\n  theme: string;\n  favorities: string;\n};\n\nexport const session = atom<SessionAtom>({\n  key: 'session',\n  default: sessionObj,\n});\n\ntype SignInAtom = null | SignInServerResponse;\n\nexport const signIn = atom<SignInAtom>({\n  key: 'signIn',\n  default: null,\n});\n\nexport const signUp = atom<SignInAtom>({\n  key: 'signUp',\n  default: null,\n});\n\n// type SignUpAtom = null | {\n//   success?: string;\n//   errors?: Record<string, string>;\n// };\n\n// export const signUp = atom<SignUpAtom>({\n//   key: 'signUp',\n//   default: null,\n// });\n","import { atom } from 'recoil';\n\nimport { Routes } from '../../routes';\n\nexport const routeStateAtom = atom<Routes | null>({\n  key: 'routeState',\n  default: null,\n});\n\nexport * from '../../atoms';\n","// TS definitions for react-navigate is not realy good.\n// Here the `navigator.navigate` expect a route name as string\n// but it request a object `{key: typeof Routes}`\n\n// this file fix the type issue\n\nimport { NavigationProp, useNavigation } from '@react-navigation/native';\nimport { CreateTracingOptions } from 'trace_events';\nimport { Routes } from '../routes';\n// import type { NavigationRoute } from '@react-navigation/routers';\n\ntype NavigationParams<R> = Record<keyof R, R[keyof R]>;\n\ntype NavigatorHook<R extends NavigationParams<R>> =\n  NavigationProp<ReactNavigation.RootParamList>;\n\nexport type RoutesOpts = {\n  key: string;\n  name: CreateTracingOptions;\n  params: Record<string, string>;\n  path: string | undefined;\n};\n\nexport type RouteState = Readonly<{\n  key: string;\n  index: number;\n  routeNames: Routes[];\n  history?: unknown[] | undefined;\n  routes: RoutesOpts[];\n  type: string;\n  stale: false;\n}>;\n\ntype FixedNavigate<R> = {\n  navigate: (routeName: R, opt?: Record<string, string>) => void;\n  getState: () => RouteState;\n};\n\nexport type ReactNavigatorHook<R> = Omit<\n  Omit<NavigatorHook<R>, 'navigate'>,\n  'getState'\n> &\n  // Omit<NavigatorHook<R>, 'getState'> &\n  FixedNavigate<R>;\n\nexport function useReactNavigation<R>(): ReactNavigatorHook<R> {\n  let nav = useNavigation();\n\n  return {\n    ...nav,\n    getState: (): RouteState => {\n      return nav.getState() as unknown as RouteState;\n    },\n    navigate: (routeName: R, opts?: Record<string, string>): void => {\n      // @ts-ignore\n      nav.navigate(routeName, opts);\n    },\n  };\n}\n\n// type Routes = {\n//   Home: undefined;\n//   Form: undefined;\n// };\n\n// // eslint-disable-next-line react-hooks/rules-of-hooks\n// let nac = useReactNavigation<Routes>();\n// nac.navigate('Home');\n","export class Emitter<T> {\n  emitters = {} as Record<keyof T, Array<(e: T[keyof T]) => void>>;\n\n  on<K extends keyof T>(key: K, listener: (val: T[K]) => void): () => void {\n    this.emitters[key] = this.emitters[key] || [];\n\n    let removeListener = () => this.off(key, listener);\n\n    this.emitters[key].push(listener as (e: T[keyof T]) => void);\n\n    return removeListener;\n  }\n\n  off<K extends keyof T>(key: K, listener?: (val: T[K]) => void): void {\n    if (listener != null) {\n      this.emitters[key] = this.emitters[key].filter(l => l !== listener);\n      return;\n    }\n\n    let emitters = {} as typeof this.emitters;\n\n    let keys = Object.keys(this.emitters) as K[];\n\n    // Recreating `this.emitters` and skiping the key to be removed\n    //    the goal is to not leak memory by leaving a event which\n    //    has been fully removed.\n    //\n    // Also avoid using the workd delete for perf purpose.\n    //    Since this can be a hot path\n\n    for (let k of keys) {\n      if (k === key) {\n        continue;\n      }\n\n      emitters[k] = this.emitters[k];\n    }\n\n    this.emitters = emitters;\n  }\n\n  once<K extends keyof T>(key: K, cb: (val: T[K]) => void): void {\n    let listener = (v: T[K]) => {\n      this.off(key, listener);\n      cb(v);\n    };\n\n    this.on(key, listener);\n  }\n\n  emit<K extends keyof T>(key: K, val: T[K]): void {\n    let emitters = this.emitters[key];\n\n    // no listener defined\n    if (emitters == null || emitters.length === 0) {\n      return;\n    }\n\n    for (let idx = 0; idx < emitters.length; idx++) {\n      emitters[idx](val);\n    }\n  }\n\n  clean() {\n    this.emitters = {} as Record<keyof T, Array<(e: T[keyof T]) => void>>;\n  }\n}\n","export let delay = (ms: number): Promise<null> => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve(null);\n    }, ms);\n  });\n};\n\nexport { lens } from './lens';\nexport type { Immutable, Mutable } from './immutable';\n\nexport { Emitter } from './emitter';\n\nexport { default as lazyList } from './lazy-list';\n\nexport function getLast<T>(a: T[]): T {\n  return a[a.length - 1];\n}\n\n// https://decipher.dev/30-seconds-of-typescript/docs/debounce/\nexport const debounce = (\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  FuncOrClass: Function,\n  ms: number\n): ((...args: unknown[]) => void) => {\n  let timeoutId: ReturnType<typeof setTimeout>;\n\n  // detect is is class or function.\n  // based on solution from Nate :)\n  // https://stackoverflow.com/questions/526559/testing-if-something-is-a-class-in-javascript\n  const propertyNames = Object.getOwnPropertyNames(FuncOrClass);\n  const isFunc =\n    !propertyNames.includes('prototype') || propertyNames.includes('arguments');\n\n  return (...args: unknown[]) => {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => {\n      if (isFunc) {\n        FuncOrClass(...args);\n      } else {\n        // @ts-ignore\n        // eslint-disable-next-line no-new\n        new FuncOrClass(...args);\n      }\n    }, ms);\n  };\n};\n\nexport function debounce1<S>(fn: (s: S) => void, ms: number): (s: S) => void {\n  let timeoutId: ReturnType<typeof setTimeout>;\n  return (s: S) => {\n    if (timeoutId != null) {\n      clearTimeout(timeoutId);\n    }\n\n    timeoutId = setTimeout(() => {\n      fn(s);\n    }, ms);\n  };\n}\n\nexport function debounce2<R, S>(\n  fn: (r: R, s: S) => void,\n  ms: number\n): (r: R, s: S) => void {\n  let timeoutId: ReturnType<typeof setTimeout>;\n  return (r: R, s: S) => {\n    if (timeoutId != null) {\n      clearTimeout(timeoutId);\n    }\n\n    timeoutId = setTimeout(() => {\n      fn(r, s);\n    }, ms);\n  };\n}\n\n// based on debounce\nexport const throttle = (\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  FuncOrClass: Function,\n  ms: number\n): ((...args: unknown[]) => void) => {\n  // let timeoutId: ReturnType<typeof setTimeout>;\n\n  // detect is is class or function.\n  // based on solution from Nate :)\n  // https://stackoverflow.com/questions/526559/testing-if-something-is-a-class-in-javascript\n  const propertyNames = Object.getOwnPropertyNames(FuncOrClass);\n  const isFunc =\n    !propertyNames.includes('prototype') || propertyNames.includes('arguments');\n\n  let hasBeingCalled = false;\n  return (...args: unknown[]) => {\n    if (hasBeingCalled) {\n      return;\n    }\n\n    hasBeingCalled = true;\n\n    setTimeout(() => {\n      if (isFunc) {\n        FuncOrClass(...args);\n        hasBeingCalled = false;\n      } else {\n        // @ts-ignore\n        // eslint-disable-next-line no-new\n        new FuncOrClass(...args);\n        hasBeingCalled = false;\n      }\n    }, ms);\n  };\n};\n\nexport function throttle1<S>(fn: (s: S) => void, ms: number): (s: S) => void {\n  let hasBeenCalled = false;\n  return (s: S) => {\n    if (hasBeenCalled) {\n      return;\n    }\n\n    hasBeenCalled = true;\n\n    setTimeout(() => {\n      fn(s);\n      hasBeenCalled = false;\n    }, ms);\n  };\n}\n\nexport function throttle2<R, S>(\n  fn: (r: R, s: S) => void,\n  ms: number\n): (r: R, s: S) => void {\n  let hasBeenCalled = false;\n\n  return (r: R, s: S) => {\n    if (hasBeenCalled) {\n      return;\n    }\n    hasBeenCalled = true;\n\n    setTimeout(() => {\n      fn(r, s);\n      hasBeenCalled = false;\n    }, ms);\n  };\n}\n\nexport const isProd = (): boolean => process.env.NODE_ENV === 'production';\nexport const isDev = (): boolean => process.env.NODE_ENV === 'development';\nexport const isTest = (): boolean => process.env.NODE_ENV === 'test';\n\n// https://en.wikipedia.org/wiki/Normalization_(statistics)\nexport const rescale =\n  (boundaryUp: number, boundaryLower: number) =>\n  (min: number, max: number) =>\n  (valueToRescale: number): number =>\n    boundaryUp +\n    ((valueToRescale - min) * (boundaryLower - boundaryUp)) / (max - min);\n","export type AsyncMsg<M> = Promise<undefined | null | M | M[]>;\n\nexport type Cmd<M> = null | M | Array<Cmd<M>> | AsyncMsg<M>;\n\nexport type Act = string | number;\nexport type Dispatcher<M> = (msg: M) => void;\nexport type Update<S, M> = (s: S, m: M) => [S, Cmd<M>];\n\nexport type StateRef<R> = { ref: R };\n\nfunction ref<R>(r: R): StateRef<R> {\n  return { ref: r };\n}\n\nfunction getRef<R>(r: StateRef<R>): R {\n  return r.ref;\n}\n\nfunction setRef<R>(r: StateRef<R>, newRef: R): StateRef<R> {\n  r.ref = newRef;\n  return r;\n}\n\nconst runAsyncCmd = <M extends [Act, unknown]>(\n  dispatch: Dispatcher<M>,\n  cmd: AsyncMsg<M>\n) => {\n  cmd.then(msg => {\n    if (msg == null) {\n      return;\n    }\n\n    if (Array.isArray(msg[0])) {\n      for (let idx = 0; idx < msg.length; idx++) {\n        dispatch(msg[idx] as M);\n      }\n    } else {\n      dispatch(msg as M);\n    }\n  });\n};\n\nexport function createStateMachine<S, M extends [Act, unknown]>(\n  update: Update<S, M>,\n  init: () => S\n): [StateRef<S>, Dispatcher<M>] {\n  let machineState = ref(init());\n\n  let reducer = (state: S, msg: M): S => {\n    let [s1, cmd] = update(state, msg);\n\n    if (cmd == null) {\n      setRef(machineState, s1);\n      return s1;\n    }\n\n    if (cmd instanceof Promise) {\n      runAsyncCmd(dispatch, cmd);\n      setRef(machineState, s1);\n      return s1;\n    }\n\n    if (Array.isArray(cmd[0])) {\n      for (let idx = 0; idx < cmd.length; idx++) {\n        const cmd2 = cmd[idx];\n\n        if (cmd2 instanceof Promise) {\n          runAsyncCmd(dispatch, cmd2);\n        } else {\n          s1 = reducer(s1, cmd[idx] as M);\n        }\n      }\n\n      setRef(machineState, s1);\n      return s1;\n    }\n\n    s1 = reducer(s1, cmd as M);\n    setRef(machineState, s1);\n\n    return s1;\n  };\n\n  let dispatch: Dispatcher<M> = msg => {\n    reducer(getRef(machineState), msg);\n  };\n\n  return [machineState, dispatch];\n  //\n}\n\nimport { Immutable } from '../../../shared/utils';\n{\n  // tests\n\n  const Log = 0;\n  const Inc = 1;\n  const IncNested = 2;\n  const Dec = 3;\n  const DecNested = 4;\n\n  type Log = [typeof Log, string];\n  type Inc = [typeof Inc, number];\n  type Dec = [typeof Dec, number];\n  type IncNested = [typeof IncNested, number];\n  type DecNested = [typeof DecNested, number];\n\n  type Msg = Log | Inc | Dec | IncNested | DecNested;\n\n  type State = Immutable<{ counter: number }>;\n\n  type Transition<S> = {\n    [Log]: (s: S, p: string) => [S, null];\n    [Inc]: (s: S, n: number) => [S, null];\n    [Dec]: (s: S, n: number) => [S, null];\n    [IncNested]: (s: S, n: number) => [S, Inc];\n    [DecNested]: (s: S, n: number) => [S, Dec];\n  };\n\n  let transitions: Transition<State> = {\n    [Log]: (s, p) => {\n      console.log(p, s);\n      return [s, null];\n    },\n    [Inc]: (s, n) => {\n      return [{ ...s, count: s.counter + n }, null];\n    },\n    [Dec]: (s, n) => {\n      return [{ ...s, counter: s.counter - n }, null];\n    },\n    [IncNested]: (s, n) => {\n      return [{ ...s, counter: s.counter + n }, [Inc, n]];\n    },\n    [DecNested]: (s, n) => {\n      return [{ ...s, counter: s.counter - n }, [Dec, n]];\n    },\n  };\n\n  let update: Update<State, Msg> = (s, m) => {\n    switch (m[0]) {\n      case Log:\n        return transitions[m[0]](s, m[1]);\n      case Inc:\n        return transitions[m[0]](s, m[1]);\n      case Dec:\n        return transitions[m[0]](s, m[1]);\n      case IncNested:\n        return transitions[m[0]](s, m[1]);\n      case DecNested:\n        return transitions[m[0]](s, m[1]);\n    }\n  };\n\n  let init = (): State => ({ counter: 0 });\n\n  let [stateRef, dispatcher] = createStateMachine(update, init);\n\n  // setTimeout(() => {\n  //   console.log('machine test:');\n\n  //   dispatcher([Inc, 1]);\n  //   dispatcher([Log, 'test']);\n  // }, 1000);\n}\n","export default class Lifo {\n  queue: (null | (() => void))[] = [];\n\n  private timeoutId: ReturnType<typeof setTimeout> = setTimeout(() => null);\n\n  add(task: () => void): () => void {\n    let idx = this.queue.length;\n    this.queue.push(task);\n\n    return () => {\n      this.queue[idx] = null;\n    };\n  }\n\n  isDone(): boolean {\n    return this.queue.length === 0;\n  }\n\n  run(times: number): void {\n    if (this.queue.length === 0) {\n      return;\n    }\n\n    // running the queue backward\n    for (let idx = this.queue.length + 1; idx >= 0; idx--) {\n      if (times < 0) {\n        break;\n      }\n\n      let task = this.queue.pop();\n      if (task == null) {\n        continue;\n      }\n      times--;\n\n      task();\n    }\n\n    clearTimeout(this.timeoutId);\n\n    // try to reset queue when idle\n    // safari doesnt support requestIdleCallback\n    // implementing it using setTimeout\n\n    this.timeoutId = setTimeout(() => {\n      if (this.queue.length === 0) {\n        return;\n      }\n\n      for (let idx = 0; idx < this.queue.length; idx++) {\n        if (this.queue[idx] != null) {\n          return;\n        }\n      }\n\n      this.queue = [];\n    }, 100);\n  }\n}\n\n// let fifo = new Fifo();\n\n// let rm1 = fifo.add(() => {\n//   console.log('lifo', 1);\n// });\n// let rm2 = fifo.add(() => {\n//   console.log('lifo', 2);\n// });\n// let rm3 = fifo.add(() => {\n//   console.log('lifo', 3);\n// });\n// let rm4 = fifo.add(() => {\n//   console.log('lifo', 4);\n// });\n// let rm5 = fifo.add(() => {\n//   console.log('lifo', 5);\n// });\n// let rm6 = fifo.add(() => {\n//   console.log('lifo', 6);\n// });\n// let rm7 = fifo.add(() => {\n//   console.log('lifo', 7);\n// });\n// let rm8 = fifo.add(() => {\n//   console.log('lifo', 8);\n// });\n// let rm9 = fifo.add(() => {\n//   console.log('lifo', 9);\n// });\n// let rm10 = fifo.add(() => {\n//   console.log('lifo', 10);\n// });\n// let rm11 = fifo.add(() => {\n//   console.log('lifo', 11);\n// });\n\n// setTimeout(() => {\n//   fifo.run(3);\n//   console.log('----');\n//   fifo.run(2);\n//   rm5();\n//   rm6();\n//   rm7();\n//   console.log('----');\n//   fifo.run(4);\n// }, 2000);\n\n// export class Lifo<T> {\n//   emitters = {} as Record<keyof T, Array<null | ((e: T[keyof T]) => void)>>;\n\n//   on<K extends keyof T>(key: K, listener: (val: T[K]) => void): () => void {\n//     this.emitters[key] = this.emitters[key] || [];\n\n//     let idx = this.emitters[key].length;\n//     let removeListener = () => {\n//       this.emitters[key][idx] = null;\n//     };\n\n//     this.emitters[key].push(listener as (e: T[keyof T]) => void);\n\n//     return removeListener;\n//   }\n\n//   off<K extends keyof T>(key: K, listener?: (val: T[K]) => void): void {\n//     if (listener != null) {\n//       this.emitters[key] = this.emitters[key].filter(l => l !== listener);\n//       return;\n//     }\n\n//     let emitters = {} as typeof this.emitters;\n\n//     let keys = Object.keys(this.emitters) as K[];\n\n//     // Recreating `this.emitters` and skiping the key to be removed\n//     //    the goal is to not leak memory by leaving a event which\n//     //    has been fully removed.\n//     //\n//     // Also avoid using the workd delete for perf purpose.\n//     //    Since this can be a hot path\n\n//     for (let k of keys) {\n//       if (k === key) {\n//         continue;\n//       }\n\n//       emitters[k] = this.emitters[k];\n//     }\n\n//     this.emitters = emitters;\n//   }\n\n//   once<K extends keyof T>(key: K, cb: (val: T[K]) => void): void {\n//     let listener = (v: T[K]) => {\n//       this.off(key, listener);\n//       cb(v);\n//     };\n\n//     this.on(key, listener);\n//   }\n\n//   emit<K extends keyof T>(key: K, val: T[K]): void {\n//     let emitters = this.emitters[key];\n\n//     // no listener defined\n//     if (emitters == null || emitters.length === 0) {\n//       return;\n//     }\n\n//     for (let idx = 0; idx < emitters.length; idx++) {\n\n//       emitters[idx](val);\n//     }\n//   }\n// }\n","import { LogBox } from 'react-native';\n\n// let reg = new RegExp('`flexWrap: `wrap``');\n// let regs = [\n//   /flexWrap/,\n//   /startLoadWithResult/,\n//   /shouldStartLoad/,\n//   /react-native-canvas/,\n// ];\n\nlet reg =\n  /startLoadWithResult|shouldStartLoad|react-native-canvas|Duplicate atom key/;\n\nLogBox.ignoreLogs([reg]);\n\nlet _warn = console.warn.bind(console);\nconsole.warn = (...msg) => {\n  // console.log(msg[0].match('flexWrap'), msg[0]);\n  if (msg[0].match(reg)) {\n    // console.log('skipping warp warn');\n    return;\n  }\n\n  _warn(...msg);\n};\n\nlet _error = console.error.bind(console);\nconsole.error = (...msg) => {\n  console.log(msg);\n  _error(...msg);\n};\n","import React, { forwardRef } from 'react';\n\nexport default forwardRef(\n  (\n    props: React.HTMLAttributes<unknown>,\n    ref: React.ForwardedRef<HTMLCanvasElement>\n  ) => {\n    return <canvas {...props} ref={ref} />;\n  }\n);\n","import React from 'react';\n\nimport { StyleSheet as StyleSheetRN, View } from 'react-native';\nimport type { ViewProps, ViewStyle } from 'react-native';\n\nexport { default as Canvas } from './Canvas';\n\nexport type Style = Record<string, Record<string, unknown>> & {\n  raw: Record<string, Record<string, unknown>>;\n};\n\nexport let StyleSheet = {\n  ...StyleSheetRN,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  create<T extends StyleSheetRN.NamedStyles<T> | StyleSheetRN.NamedStyles<any>>(\n    style: T\n  ): T & { raw: T } {\n    let obj = StyleSheetRN.create(style);\n\n    Object.defineProperty(obj, 'raw', {\n      value: style,\n      enumerable: false,\n    });\n\n    return obj;\n  },\n};\n\nexport function mergeStyleSheetMany<A, B>(\n  ...list: [A & { raw: A }, B & { raw: B }]\n): A & B & { raw: A & B };\n\nexport function mergeStyleSheetMany<A, B, C>(\n  ...list: [A & { raw: A }, B & { raw: B }, C & { raw: C }]\n): A & B & C & { raw: A & B & C };\n\nexport function mergeStyleSheetMany<A, B, C, D>(\n  ...list: [A & { raw: A }, B & { raw: B }, C & { raw: C }, D & { raw: D }]\n): A & B & C & D & { raw: A & B & C & D };\n\nexport function mergeStyleSheetMany<A, B, C, D, E>(\n  ...list: [\n    A & { raw: A },\n    B & { raw: B },\n    C & { raw: C },\n    D & { raw: D },\n    E & { raw: E }\n  ]\n): A & B & C & D & E & { raw: A & B & C & D & E };\n\nexport function mergeStyleSheetMany<A, B, C, D, E>(\n  ...list:\n    | [A & { raw: A }, B & { raw: B }]\n    | [A & { raw: A }, B & { raw: B }, C & { raw: C }]\n    | [A & { raw: A }, B & { raw: B }, C & { raw: C }, D & { raw: D }]\n    | [\n        A & { raw: A },\n        B & { raw: B },\n        C & { raw: C },\n        D & { raw: D },\n        E & { raw: E }\n      ]\n):\n  | (A & B & { raw: A & B })\n  | (A & B & C & { raw: A & B & C })\n  | (A & B & C & D & { raw: A & B & C & D })\n  | (A & B & C & D & E & { raw: A & B & C & D & E }) {\n  let [a, b, c, d, e] = list;\n\n  if (list.length === 4 && c != null && d != null && e != null) {\n    return mergeStyleSheet(\n      mergeStyleSheet(mergeStyleSheet(mergeStyleSheet(a, b), c), d),\n      e\n    );\n  }\n\n  if (list.length === 4 && c != null && d != null) {\n    return mergeStyleSheet(mergeStyleSheet(mergeStyleSheet(a, b), c), d);\n  }\n\n  if (list.length === 3 && c != null) {\n    return mergeStyleSheet(mergeStyleSheet(a, b), c);\n  }\n\n  return mergeStyleSheet(a, b);\n}\n\ntype MergedStyles<A, B> = A & B & { raw: A & B };\n\nexport function mergeStyleSheet<A, B>(\n  a: A & { raw: A },\n  b: B & { raw: B }\n): MergedStyles<A, B> {\n  let keys = [...Object.keys(a), ...Object.keys(b)] as (keyof A & keyof B)[];\n\n  let style = {} as MergedStyles<A, B>;\n\n  for (let key of keys) {\n    if (a.raw[key] == null) {\n      // @ts-ignore\n      style[key] = b.raw[key];\n      continue;\n    }\n\n    if (b.raw[key] == null) {\n      // @ts-ignore\n      style[key] = a.raw[key];\n      continue;\n    }\n\n    // @ts-ignore\n    style[key] = { ...a.raw[key], ...b.raw[key] };\n  }\n\n  // Object.defineProperty(style, 'raw', {\n  //   value: style,\n  //   enumerable: false,\n  // });\n\n  return StyleSheet.create(style);\n}\n","import React from 'react';\n\nimport { StyleSheet as StyleSheetRN, View } from 'react-native';\nimport type { ViewProps, ViewStyle } from 'react-native';\n\nexport { default as Canvas } from './Canvas';\n\nexport * from './StyleSheet';\n\nexport let primitiveStyles = StyleSheetRN.create({\n  box: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    // justifyContent: 'center',\n    alignItems: 'center',\n    alignContent: 'center',\n    // overflow: 'hidden',\n  },\n  center: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignContent: 'center',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    // overflow: 'hidden',\n  },\n  hstack: {\n    display: 'flex',\n    flexDirection: 'row',\n    // height: '100%',\n    // width: '100%',\n  },\n  vstack: {\n    display: 'flex',\n    flexDirection: 'column',\n    // height: '100%',\n    // width: '100%',\n  },\n\n  dividerHorizontal: {\n    borderBottomWidth: 1,\n  },\n  dividerVerticle: {\n    borderRightWidth: 1,\n  },\n});\n\nexport type PrimitiveProps = ViewProps & {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  children?: JSX.Element | JSX.Element[] | string | any;\n};\n\nexport function DividerHorizontal(props: PrimitiveProps): JSX.Element {\n  return (\n    <View style={[primitiveStyles.dividerHorizontal, props.style as ViewStyle]}>\n      {props.children}\n    </View>\n  );\n}\n\nexport function DividerVerticle(props: PrimitiveProps): JSX.Element {\n  return (\n    <View style={[primitiveStyles.dividerVerticle, props.style as ViewStyle]}>\n      {props.children}\n    </View>\n  );\n}\n\nexport function Box(props: PrimitiveProps): JSX.Element {\n  return (\n    <View style={[primitiveStyles.box, props.style as ViewStyle]}>\n      {props.children}\n    </View>\n  );\n}\n\nexport function Center(props: PrimitiveProps): JSX.Element {\n  return (\n    <View style={[primitiveStyles.center, props.style as ViewStyle]}>\n      {props.children}\n    </View>\n  );\n}\n\nexport function HStack(props: PrimitiveProps): JSX.Element {\n  return (\n    <View style={[primitiveStyles.hstack, props.style as ViewStyle]}>\n      {props.children}\n    </View>\n  );\n}\n\nexport function VStack(props: PrimitiveProps): JSX.Element {\n  return (\n    <View style={[primitiveStyles.vstack, props.style as ViewStyle]}>\n      {props.children}\n    </View>\n  );\n}\n","import React from 'react';\n\nimport { View, useColorScheme, Platform } from 'react-native';\nimport type { ViewStyle } from 'react-native';\nimport { StyleSheet } from '../primitives';\n\nimport { black05, black20, yellow100, yellow65, white95 } from './theme';\n\ntype Props = {\n  containerStyle: ViewStyle;\n  contentStyle: ViewStyle;\n  children?: JSX.Element | JSX.Element[];\n};\n\nexport let baseTheme = StyleSheet.create({\n  content: {\n    borderRadius: 10,\n    borderWidth: 1,\n    overflow: 'hidden',\n  },\n});\n\nexport let darkTheme = StyleSheet.create({\n  content: {\n    backgroundColor: black05,\n    borderColor: black20,\n  },\n});\n\nexport let lightTheme = StyleSheet.create({\n  content: {\n    backgroundColor: white95,\n    borderColor: yellow65,\n  },\n});\n\nexport default function Card(props: Props): JSX.Element {\n  let OSTheme = useColorScheme();\n\n  let theme = OSTheme === 'dark' ? darkTheme : lightTheme;\n\n  return (\n    <View style={props.containerStyle}>\n      <View style={[baseTheme.content, theme.content, props.contentStyle]}>\n        {props.children ? props.children : <></>}\n      </View>\n    </View>\n  );\n}\n","import { Platform } from 'react-native';\n\nimport { StyleSheet, mergeStyleSheetMany } from '../../primitives';\n\nimport { black07, gray45, yellow95 } from '../theme';\n\nexport let baseTheme = StyleSheet.create({\n  container: {\n    // zIndex: 200,\n    // marginTop: Platform.OS === 'web' ? 13 : 6,\n    // little TS hack.\n    // react-native style doesnt accept fixed position.\n    //  but it is need on web\n    position: Platform.OS === 'web' ? ('fixed' as 'absolute') : 'absolute',\n    height: 10,\n    width: '100%',\n    minWidth: Platform.OS === 'web' ? '380px' : '100%',\n  },\n  content: {\n    zIndex: 100,\n    width: '100%',\n    borderRadius: 0,\n    borderWidth: 0,\n    // borderBottomWidth: Platform.OS === 'web' ? 0 : 0,\n    height: Platform.OS === 'web' ? 66 : 50,\n    paddingRight: 4,\n    paddingLeft: 4,\n    paddingTop: 24,\n    marginTop: Platform.OS === 'android' ? 6 : -1,\n  },\n  dividerVertical: {\n    height: '70%',\n  },\n  buttonsContent: {\n    marginTop: Platform.OS === 'web' ? -10 : 0,\n    padding: 6,\n    paddingLeft: 12,\n    paddingRight: 12,\n    // paddingTop: -4,\n    position: 'absolute',\n  },\n});\n\nexport let darkTheme = mergeStyleSheetMany(\n  baseTheme,\n  StyleSheet.create({\n    content: {\n      // borderColor: 'rgba(255, 255, 255, 0.2)',\n      backgroundColor: black07,\n      // Platform.OS === 'web' ? 'rgb(14, 15, 28)' : 'rgb(14, 15, 28)',\n    },\n    dividerVertical: {\n      borderColor: gray45,\n    },\n  })\n);\n\nexport let lightTheme = mergeStyleSheetMany(\n  baseTheme,\n  StyleSheet.create({\n    content: {\n      // borderColor: 'rgba(0, 0, 0, 0.1)',\n      // backgroundColor: 'rgba(242, 234, 217, 1)',\n      backgroundColor: yellow95,\n      // Platform.OS === 'web' ? 'rgb(233, 237, 217)' : 'rgba(229, 225, 206, 1)',\n      // Platform.OS === 'web' ? 'hsl(72, 95.7%, 95%)' : 'hsl(72, 95.7%, 95%)',\n    },\n    dividerVertical: {\n      borderColor: gray45,\n    },\n  })\n);\n","export let CARD_WIDTH = 360;\nexport let CARD_HEIGHT = 185;\nexport let CARD_PADDING = 8;\n","import React, { useEffect, useLayoutEffect, useMemo, useState } from 'react';\nimport {\n  Platform,\n  Pressable,\n  Text,\n  View,\n  ViewStyle,\n  useColorScheme,\n  GestureResponderEvent,\n  useWindowDimensions,\n} from 'react-native';\n\nimport {\n  Center,\n  DividerVerticle,\n  HStack,\n  StyleSheet,\n  VStack,\n  mergeStyleSheetMany,\n} from '../../primitives';\n\nimport type { Style } from '../../primitives';\nimport { darkTheme, lightTheme } from './theme';\nimport { EdgeInsets, useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport { CARD_PADDING, CARD_WIDTH } from '../SparklineCard/constants';\n\nlet CARD_TOTAL_WIDTH = CARD_WIDTH + 2 * CARD_PADDING;\n\nexport function useAppBarStyle(): Style {\n  let inserts = useSafeAreaInsets();\n  // console.log(inserts);\n  const { width } = useWindowDimensions();\n\n  let OSTheme = useColorScheme();\n\n  let theme = OSTheme === 'dark' ? darkTheme : lightTheme;\n\n  let [appBarPositionStyle, setAppBarPositionStyle] = useState(\n    mergeStyleSheetMany(\n      theme,\n      StyleSheet.create({\n        container: {\n          ...(inserts as ViewStyle),\n          top: inserts.top,\n          width: width,\n        },\n        content: theme.content,\n      })\n    )\n  );\n\n  useEffect(() => {\n    setAppBarPositionStyle(\n      mergeStyleSheetMany(\n        theme,\n        StyleSheet.create({\n          container: {\n            ...(inserts as ViewStyle),\n            top: inserts.top,\n            width: width,\n          },\n          content: theme.content,\n        })\n      )\n    );\n  }, [theme, inserts, width]);\n\n  return appBarPositionStyle;\n}\n\nexport function usePadding(): number {\n  // console.log(inserts);\n  const { width } = useWindowDimensions();\n\n  let paddingPageLarge = (width - 3 * CARD_TOTAL_WIDTH) / 2;\n  let paddingPageMedium = (width - 2 * CARD_TOTAL_WIDTH) / 2;\n  let paddingPageShort = (width - 1 * CARD_TOTAL_WIDTH) / 2;\n\n  let basePosition = 10;\n\n  let position = paddingPageShort < 0 ? basePosition : paddingPageShort;\n  position = paddingPageMedium < 0 ? position : paddingPageMedium;\n  position = paddingPageLarge < 0 ? position : paddingPageLarge;\n\n  position = position < basePosition ? basePosition : position;\n\n  return position;\n}\n","import React from 'react';\n\nimport BaseCard from '../Card';\n\nimport { useAppBarStyle } from './hooks';\n\ntype Props = {\n  leftSide: () => JSX.Element;\n  rightSide: () => JSX.Element;\n};\n\nexport default function AppBar(props: Props) {\n  let appBarStyle = useAppBarStyle();\n\n  let LeftSide = props.leftSide;\n  let RightSide = props.rightSide;\n\n  return (\n    <BaseCard\n      containerStyle={appBarStyle.container}\n      contentStyle={appBarStyle.content}>\n      <LeftSide />\n      <RightSide />\n    </BaseCard>\n  );\n}\n","import { StyleSheet } from '../primitives';\nimport { Platform } from 'react-native';\n\nimport {\n  red65,\n  gray90,\n  gray45,\n  green70,\n  black05,\n  black20,\n  blue30,\n  blue15,\n} from '../components/theme';\n// export let gray45 = '#737373';\n// export let gray90 = gray90;\n\n// theme.colors.trueGray[300];\n\n// export let red65 = '#f87171';\n\n//  (theme.colors.error as Record<number, string>)[400];\n// export let green25 = '#4ade80';\n\nexport default StyleSheet.create({\n  cardContent: {\n    // backgroundColor: black05,\n    // borderColor: black20,\n    // 'rgba(100, 100, 100, 0.3)',\n  },\n  buttonsContent: {\n    borderColor: blue30,\n    backgroundColor: blue15,\n  },\n  button: {\n    color: gray90,\n  },\n  headingLarge: {\n    color: gray90,\n  },\n  // inputFocus: {\n  //   borderColor: gray45,\n  //   color: gray90,\n  // },\n  // inputFocusError: {\n  //   borderColor: red65,\n  //   color: gray90,\n  // },\n  errorToastContainer: {\n    backgroundColor: 'rgba(139, 57, 66, 1)',\n  },\n  errorToastContent: {\n    fontSize: 14,\n    color: gray90,\n  },\n});\n","import { Platform } from 'react-native';\nimport { StyleSheet } from '../primitives';\n\nexport let midGray = '#737373';\n// export let gray = gray45;\n// gray;\nexport let red = '#991b1b';\n// (theme.colors.error as Record<number, string>)[800];\nexport let green = '#15803d';\n\nimport {\n  yellow100,\n  gray10,\n  gray15,\n  gray45,\n  yellow65,\n  white95,\n} from '../components/theme';\n\nexport default StyleSheet.create({\n  cardContent: {\n    // backgroundColor: yellow100,\n    // borderColor: yellow65,\n  },\n  buttonsContent: {\n    borderColor: yellow65,\n    // backgroundColor: 'rgba(242, 234, 217, 1)',\n    backgroundColor: white95,\n    // Platform.OS === 'web' ? 'rgba(242, 247, 234, 1)' : '#f2f0e6',\n  },\n  button: {\n    color: gray10,\n  },\n  headingLarge: {\n    color: gray15,\n  },\n  // inputFocus: {\n  //   borderColor: gray45,\n  //   color: gray10,\n  // },\n  // inputFocusError: {\n  //   borderColor: red,\n  // },\n  errorToastContainer: {\n    backgroundColor: 'rgb(249, 167, 149)',\n  },\n  errorToastContent: {\n    fontSize: 14,\n    color: gray15,\n  },\n});\n\n// concurrently --kill-others\n","import { Platform } from 'react-native';\n\nexport const fixWebSvg =\n  Platform.OS === 'web'\n    ? {\n        display: 'inline-flex',\n        alignSelf: 'center',\n        top: '.125em',\n        position: 'relative',\n        height: '1.3em',\n        width: '1.3em',\n      }\n    : {};\n","import { Platform } from 'react-native';\nimport type { ViewStyle } from 'react-native';\nimport { StyleSheet } from '../primitives';\nimport { fixWebSvg } from '../components/fix-web-svg';\n\nexport let webIconSize =\n  Platform.OS === 'web'\n    ? {\n        height: '1.5em',\n        width: '1.5em',\n        // paddingTop: 2,\n      }\n    : {\n        paddingTop: 5,\n      };\n\nexport default StyleSheet.create({\n  // cardContent: {\n  //   borderRadius: 10,\n  //   borderWidth: 1,\n  //   overflow: 'hidden',\n  // },\n  buttonsContainer: {},\n\n  buttonsContent: {\n    borderRadius: 20,\n    borderWidth: 1,\n  },\n  button: {\n    ...(fixWebSvg as ViewStyle),\n    ...(webIconSize as ViewStyle),\n    padding: 2,\n    paddingLeft: 10,\n    paddingRight: 10,\n  },\n  errorToastContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    // top: height - bottomHeight,\n    position: Platform.OS === 'web' ? ('fixed' as 'absolute') : 'absolute',\n    // borderWidth: 1,\n    height: 50,\n    borderRadius: 5,\n    // width: formDarkTheme.raw.formContent.width,\n  },\n  errorToastContent: {\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  // inputFocus: {\n  //   borderWidth: 1,\n  // },\n});\n","import React, { useEffect, useLayoutEffect, useMemo, useState } from 'react';\nimport {\n  Platform,\n  Pressable,\n  Text,\n  View,\n  ViewStyle,\n  useColorScheme,\n  GestureResponderEvent,\n  useWindowDimensions,\n} from 'react-native';\n\nimport {\n  Center,\n  DividerVerticle,\n  HStack,\n  StyleSheet,\n  VStack,\n  mergeStyleSheetMany,\n} from '../../primitives';\n\nimport type { IconsProps } from '../../primitives/Icons';\n\nimport darkAppTheme from '../../themes/dark';\nimport lightAppTheme from '../../themes/light';\nimport baseAppTheme from '../../themes/base';\n\nimport { darkTheme, lightTheme } from './theme';\n\nexport type Props = {\n  firstIcon: (props: IconsProps) => JSX.Element;\n  firstText: string;\n  firstIconOnPress?: (event: GestureResponderEvent) => void;\n  secondIcon?: (props: IconsProps) => JSX.Element;\n  secondText?: string;\n  secondIconOnPress?: (event: GestureResponderEvent) => void;\n};\n\nimport { usePadding } from './hooks';\n\nexport default function LeftSide(props: Props) {\n  // console.log(inserts);\n  let OSTheme = useColorScheme();\n\n  let FirstIcon = props.firstIcon;\n  let firstText = props.firstText;\n  // let leftText = props.le\n  let SecondIcon = props.secondIcon;\n  let secondText = props.secondText;\n\n  let position = usePadding();\n\n  let theme = OSTheme === 'dark' ? darkTheme : lightTheme;\n  let appTheme = OSTheme === 'dark' ? darkAppTheme : lightAppTheme;\n\n  let fontSize = Platform.OS === 'web' ? 14 : 14;\n\n  let leftIconStyle = useMemo(() => {\n    return StyleSheet.create({\n      icon: {\n        ...appTheme.raw.button,\n        paddingTop: Platform.OS === 'web' ? 2 : 0,\n      },\n      text: {\n        fontSize,\n        paddingTop: Platform.OS === 'web' ? 4 : 4,\n        paddingLeft: 4,\n        paddingRight: 4,\n        color: appTheme.raw.button.color,\n      },\n    });\n  }, [appTheme, fontSize]);\n\n  let rightIconStyle = useMemo(() => {\n    return StyleSheet.create({\n      padding: { paddingLeft: 8 },\n      dividerPadding: { paddingLeft: 6 },\n      icon: {\n        ...appTheme.raw.button,\n        paddingTop: Platform.OS === 'web' ? 2 : 0,\n      },\n      text: {\n        fontSize,\n        paddingTop: 4,\n        paddingLeft: 4,\n        color: appTheme.raw.button.color,\n      },\n    });\n  }, [appTheme, fontSize]);\n\n  let iconWrapper = useMemo(() => {\n    return StyleSheet.create({\n      buttonContent: { left: position },\n    });\n  }, [position]);\n\n  let First = (\n    <Pressable onPress={props.firstIconOnPress}>\n      <HStack>\n        <FirstIcon\n          style={leftIconStyle.raw.icon}\n          color={leftIconStyle.raw.icon.color}\n        />\n        <Text style={leftIconStyle.text}>{firstText}</Text>\n      </HStack>\n    </Pressable>\n  );\n\n  let Second = (\n    <>\n      <Center>\n        {SecondIcon && (\n          <DividerVerticle\n            style={[theme.dividerVertical, rightIconStyle.dividerPadding]}\n          />\n        )}\n      </Center>\n      <Pressable onPress={props.secondIconOnPress}>\n        <HStack style={rightIconStyle.padding}>\n          {SecondIcon && (\n            <SecondIcon\n              style={rightIconStyle.raw.icon}\n              color={rightIconStyle.raw.icon.color}\n            />\n          )}\n          {secondText && <Text style={rightIconStyle.text}>{secondText}</Text>}\n        </HStack>\n      </Pressable>\n    </>\n  );\n\n  return (\n    <HStack\n      style={[\n        baseAppTheme.buttonsContent,\n        appTheme.buttonsContent,\n        theme.buttonsContent,\n        iconWrapper.buttonContent,\n      ]}>\n      {First}\n      {Second}\n    </HStack>\n\n    // </View>\n  );\n}\n","import React, { useEffect, useLayoutEffect, useMemo, useState } from 'react';\nimport {\n  Platform,\n  Pressable,\n  Text,\n  View,\n  ViewStyle,\n  useColorScheme,\n  GestureResponderEvent,\n  useWindowDimensions,\n} from 'react-native';\n\nimport {\n  Center,\n  HStack,\n  StyleSheet,\n  VStack,\n  mergeStyleSheetMany,\n} from '../../primitives';\n\nimport { Person } from '../../primitives/Icons';\nimport { Routes } from '../../routes';\n\nimport darkAppTheme from '../../themes/dark';\nimport lightAppTheme from '../../themes/light';\nimport { useReactNavigation } from '../../utils';\nimport { usePadding } from './hooks';\n\nimport { blue85, green45 } from '../theme';\n\nexport function Account({\n  position,\n  fontSize,\n}: {\n  position: number;\n  fontSize: number;\n}): JSX.Element {\n  let nav = useReactNavigation<Routes>();\n\n  let OSTheme = useColorScheme();\n  let appTheme = OSTheme === 'dark' ? darkAppTheme : lightAppTheme;\n\n  let styles = useMemo(() => {\n    return StyleSheet.create({\n      container: {\n        zIndex: 100,\n        position: 'absolute',\n        right: position,\n        top: Platform.OS === 'web' ? 0 : -24,\n      },\n      text: {\n        fontSize,\n        paddingTop: Platform.OS === 'web' ? 2 : 10,\n        paddingLeft: 4,\n        color: appTheme.raw.button.color,\n      },\n      icon: {\n        ...appTheme.raw.button,\n        paddingTop: Platform.OS === 'web' ? 0 : 6,\n      },\n    });\n  }, [appTheme.raw.button, fontSize, position]);\n\n  return (\n    <Pressable\n      onPress={() => {\n        console.log('account');\n        nav.navigate('Account');\n      }}>\n      <View style={styles.container}>\n        <HStack>\n          <Person style={styles.raw.icon} color={styles.raw.icon.color} />\n          <Text style={styles.text}>Account</Text>\n        </HStack>\n      </View>\n    </Pressable>\n  );\n}\n\nexport type Props = {\n  shouldDisplayAccount: boolean;\n};\n\nexport function SignIn() {\n  // console.log(inserts);\n  let nav = useReactNavigation<Routes>();\n  let OSTheme = useColorScheme();\n\n  // This is the Call to Action Color\n  let signInColor = OSTheme === 'dark' ? blue85 : green45;\n\n  let fontSize = Platform.OS === 'web' ? 14 : 14;\n\n  let rightActions = useMemo(() => {\n    return StyleSheet.create({\n      logInText: {\n        fontSize,\n        paddingTop: 2,\n        paddingLeft: 2,\n        paddingRight: 2,\n        paddingBottom: 1,\n        marginRight: 10,\n        fontWeight: '800',\n        color: signInColor,\n      },\n    });\n  }, [fontSize, signInColor]);\n\n  return (\n    <Pressable\n      onPress={() => {\n        console.log('log in');\n        nav.navigate('SignIn');\n      }}>\n      <Text style={rightActions.logInText}>Log In</Text>\n    </Pressable>\n  );\n}\n\nexport function SignUp() {\n  // console.log(inserts);\n  let nav = useReactNavigation<Routes>();\n  let OSTheme = useColorScheme();\n\n  let appTheme = OSTheme === 'dark' ? darkAppTheme : lightAppTheme;\n\n  // This is the Call to Action Color\n\n  let rightActions = useMemo(() => {\n    return StyleSheet.create({\n      signUpContainer: {\n        borderBottomColor: appTheme.raw.button.color,\n        borderBottomWidth: 1,\n        marginRight: 10,\n      },\n      signUpText: {\n        paddingTop: 2,\n        paddingLeft: 2,\n        paddingRight: 2,\n        paddingBottom: 0,\n        fontWeight: '600',\n        color: appTheme.raw.button.color,\n      },\n    });\n  }, [appTheme.raw.button.color]);\n\n  return (\n    <Pressable\n      onPress={() => {\n        console.log('sign up');\n        nav.navigate('SignUp');\n      }}>\n      <Center style={rightActions.signUpContainer}>\n        <Text style={rightActions.signUpText}>Sign Up</Text>\n      </Center>\n    </Pressable>\n  );\n  // </View>\n}\n\nimport { session as sessionAtom } from './atoms';\nimport { useRecoilValue } from 'recoil';\n\nexport default function RightSide(props: Props) {\n  // console.log(inserts);\n  let position = usePadding();\n\n  let session = useRecoilValue(sessionAtom);\n\n  console.log('111 session', session);\n\n  let shouldDisplayAccount = session?.email ? true : false;\n\n  let fontSize = Platform.OS === 'web' ? 14 : 14;\n\n  let rightActions = useMemo(() => {\n    return StyleSheet.create({\n      container: {\n        paddingTop: Platform.OS === 'web' ? 0 : 9,\n        marginTop: Platform.OS === 'web' ? -2 : 0,\n        position: 'absolute',\n        right: position,\n      },\n    });\n  }, [position]);\n\n  return shouldDisplayAccount ? (\n    <Account position={position} fontSize={fontSize} />\n  ) : (\n    <HStack style={rightActions.container}>\n      <SignIn />\n      <SignUp />\n    </HStack>\n  );\n}\n","import { ReactNavigatorHook } from '../../utils';\nimport { CommonActions } from '@react-navigation/native';\n\nexport const HIDE_APPBAR = 0;\nexport const SHOW_APPBAR = 1;\n\nimport { Emitter } from '../../utils';\nimport type { NativeScrollEvent, NativeSyntheticEvent } from 'react-native';\nimport { Routes } from '../../routes';\n\ntype Events = {\n  [HIDE_APPBAR]: number;\n  [SHOW_APPBAR]: string;\n};\n\nexport const emitter = new Emitter<Events>();\n\nexport function addHomeRouteIfNeeded(nav: ReactNavigatorHook<Routes>): void {\n  const state = nav.getState();\n  if (state && state.routes && state.routes.length === 1) {\n    nav.dispatch(_state => {\n      if (_state.routes.length === 1) {\n        return CommonActions.reset({\n          ..._state,\n          index: 1,\n          routes: [\n            {\n              name: 'Dashboard',\n            },\n            ..._state.routes,\n          ],\n        });\n      }\n\n      return _state;\n    });\n  }\n}\n\nlet prevY = 0;\nexport function handleAppBarDisplay(\n  a: NativeSyntheticEvent<NativeScrollEvent>\n): void {\n  let { y } = a.nativeEvent.contentOffset;\n\n  let diff = y - prevY;\n\n  // console.log(y);\n  prevY = y;\n  if (Math.abs(diff) < 10) {\n    return;\n  }\n\n  // scroll is bouncing. ios\n  if (y < 0 || y === 0) {\n    emitter.emit(SHOW_APPBAR, String(y));\n    return;\n  }\n\n  if (diff > 0) {\n    emitter.emit(HIDE_APPBAR, y);\n  } else {\n    emitter.emit(SHOW_APPBAR, String(y));\n  }\n\n  // console.log('scroll', x, y);\n}\n","import React, {\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  Platform,\n  Pressable,\n  Text,\n  View,\n  ViewStyle,\n  useColorScheme,\n  GestureResponderEvent,\n  useWindowDimensions,\n} from 'react-native';\n\nimport {\n  Center,\n  DividerVerticle,\n  HStack,\n  StyleSheet,\n  VStack,\n  mergeStyleSheetMany,\n} from '../../primitives';\n\nimport type { Style } from '../../primitives';\n\nimport BaseCard from '../Card';\n\nimport { EdgeInsets, useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport {\n  ChevronBack,\n  Exit,\n  HeartOutline,\n  PersonOutline,\n  Person,\n  SearchOutline,\n} from '../../primitives/Icons';\n\nimport { routeStateAtom } from './atoms';\nimport { useReactNavigation } from '../../utils';\nimport { Routes } from '../../routes';\nimport { getLast } from '../../utils';\n\nlet hasAddedListener = false;\n\nimport AppBar from './Bar';\n\nexport { darkTheme, lightTheme } from './theme';\nimport LeftSide from './LeftSide';\nimport RightSide from './RightSide';\n\nimport { useRecoilValue, useRecoilState, useSetRecoilState } from 'recoil';\n\nimport { signIn as signInAtom, session as sessionAtom } from './atoms';\nimport { singOut } from '../../api';\n\nexport * from './etc';\n\nfunction LeftSideDashboard() {\n  let nav = useReactNavigation<Routes>();\n  return (\n    <LeftSide\n      firstIcon={HeartOutline}\n      firstText=\"Favorites\"\n      firstIconOnPress={() => {\n        console.log('Favorites');\n        nav.navigate('Favorites');\n      }}\n      secondIcon={SearchOutline}\n      secondText=\"Search\"\n      secondIconOnPress={() => {\n        console.log('Search');\n        nav.navigate('Search');\n      }}\n    />\n  );\n}\n\nfunction LeftBackDashboard() {\n  let nav = useReactNavigation<Routes>();\n\n  return (\n    <LeftSide\n      firstIcon={ChevronBack}\n      firstText=\"Dashboard\"\n      firstIconOnPress={() => {\n        console.log('Dashboard');\n        nav.navigate('Dashboard');\n      }}\n      // secondIcon={SearchOutline}\n      // secondText=\"Search\"\n      // secondIconOnPress={() => {\n      //   console.log('Search');\n      // }}\n    />\n  );\n}\n\nfunction RightSideSignIn() {\n  return <RightSide shouldDisplayAccount={false} />;\n}\n\nexport default function AppBarRouter() {\n  let nav = useReactNavigation<Routes>();\n  let [routeName, setRouteName] = useRecoilState(routeStateAtom);\n\n  // let [signInMsg, setSignInMsg] = useRecoilState(signInAtom);\n  // // let setToastAttom = useSetRecoilState(toastAtom);\n  // let [sessionData, setSessionData] = useRecoilState(sessionAtom);\n\n  // let isSignOut = useRef(false);\n\n  let rm = () => {\n    // null;\n  };\n\n  if (hasAddedListener === false) {\n    rm = nav.addListener('state', s => {\n      // console.log('sssss', s.data.state.routes);\n      // setCurrentRoute(getLast(nav.getState().routes).name);\n      setRouteName(getLast(s.data.state.routes).name);\n    });\n  }\n\n  useLayoutEffect(() => {\n    // let rmHideAppBarListener = evt.emitter.on(evt.HIDE_APPBAR, _n => {\n    //   // console.log(n);\n    //   setShowAppBar(false);\n    // });\n\n    // let rmShowAppBarListener = evt.emitter.on(evt.SHOW_APPBAR, _s => {\n    //   // console.log(s);\n    //   setShowAppBar(true);\n    // });\n\n    return () => {\n      rm();\n      // rmHideAppBarListener();\n      // rmShowAppBarListener();\n    };\n  }, []);\n\n  hasAddedListener = true;\n\n  console.log('route:', routeName);\n\n  if (routeName !== 'Dashboard') {\n    return <AppBar leftSide={LeftBackDashboard} rightSide={RightSideSignIn} />;\n  }\n\n  return <AppBar leftSide={LeftSideDashboard} rightSide={RightSideSignIn} />;\n}\n","import { useColorScheme } from 'react-native';\n\nimport { red35, gray10, green25, red65, gray90, green70 } from '../theme';\n\nimport type { CardProps, CoinMetadata } from './types';\n\nexport function getNumberColor(\n  n: number,\n  osTheme: ReturnType<typeof useColorScheme>\n): string {\n  let gray = osTheme === 'dark' ? gray90 : gray10;\n  let red = osTheme === 'dark' ? red65 : red35;\n  let green = osTheme === 'dark' ? green70 : green25;\n\n  let color =\n    (n > 0 && n < 0.1) || (n < 0 && n > -0.1) ? gray : n < 0 ? red : green;\n\n  return color;\n}\n\nexport function fixNumber(n: number): string {\n  n = parseFloat(n as unknown as string);\n  if (Number.isNaN(n) || n == null) {\n    return '-';\n  }\n\n  let numExp = n\n    .toExponential()\n    .split('e')\n    .map(s => parseFloat(s));\n\n  let [base, exp] = numExp;\n  let baseStr = base.toFixed(3);\n\n  if (exp >= 15) {\n    let num = ((base * Math.pow(10, exp)) / Math.pow(10, 15)).toFixed(2);\n    baseStr = `${num} Q`;\n  } else if (exp >= 12) {\n    let num = ((base * Math.pow(10, exp)) / Math.pow(10, 12)).toFixed(2);\n    baseStr = `${num} T`;\n  } else if (exp >= 9) {\n    let num = ((base * Math.pow(10, exp)) / Math.pow(10, 9)).toFixed(2);\n    baseStr = `${num} B`;\n  } else if (exp >= 6) {\n    let num = ((base * Math.pow(10, exp)) / Math.pow(10, 6)).toFixed(2);\n    baseStr = `${num} M`;\n  } else if (exp >= 3) {\n    let num = ((base * Math.pow(10, exp)) / Math.pow(10, 3)).toFixed(3);\n    baseStr = `${num} K`;\n  } else if (exp === 2) {\n    let num = parseFloat(baseStr);\n    baseStr = Number.isNaN(num) ? '-' : `${(num * 100).toFixed(2)}`;\n  } else if (exp === 1) {\n    let num = parseFloat(baseStr);\n    baseStr = Number.isNaN(num) ? '-' : `${(num * 10).toFixed(3)}`;\n  } else if (exp <= -3) {\n    baseStr = `${baseStr} E${exp}`;\n  }\n\n  return baseStr.replace('.00 ', ' ');\n}\n\nexport function computeAvailableSupply(props: CardProps): string {\n  let { circulating_supply, max_supply } = props.item;\n\n  let avlSupplay = 100 * (1 - circulating_supply / max_supply);\n\n  let avlSupplayStr =\n    avlSupplay === -Infinity ? '-' : avlSupplay.toFixed(2) + '%';\n  // console.log('AAA', market_cap.toLocaleString());\n\n  avlSupplayStr = avlSupplayStr === '0.000%' ? '0%' : avlSupplayStr;\n  avlSupplayStr = avlSupplayStr === '0.00%' ? '0%' : avlSupplayStr;\n  avlSupplayStr = avlSupplayStr === '0.0%' ? '0%' : avlSupplayStr;\n  avlSupplayStr = avlSupplayStr === '100.00%' ? '100%' : avlSupplayStr;\n\n  return avlSupplayStr;\n}\n\nexport function sanatizeProps(props: CardProps): CoinMetadata {\n  let {\n    symbol,\n    name,\n    market_cap,\n    market_cap_rank,\n    price_change_percentage_1h_in_currency,\n    price_change_percentage_24h_in_currency,\n    price_change_percentage_7d_in_currency,\n    circulating_supply,\n    max_supply,\n    sparkline_in_7d,\n    // height,\n  } = props.item;\n\n  symbol = symbol == null ? '-' : symbol;\n\n  market_cap = market_cap == null ? 0 : market_cap;\n\n  market_cap_rank = market_cap_rank == null ? 0 : market_cap_rank;\n\n  price_change_percentage_1h_in_currency =\n    price_change_percentage_1h_in_currency == null\n      ? 0\n      : price_change_percentage_1h_in_currency;\n\n  price_change_percentage_24h_in_currency =\n    price_change_percentage_24h_in_currency == null\n      ? 0\n      : price_change_percentage_24h_in_currency;\n\n  price_change_percentage_7d_in_currency =\n    price_change_percentage_7d_in_currency == null\n      ? 0\n      : price_change_percentage_7d_in_currency;\n\n  circulating_supply = circulating_supply == null ? 0 : circulating_supply;\n  // max_supply = max_supply == null ? null : max_supply;\n\n  return {\n    ...props.item,\n    symbol,\n    name,\n    market_cap,\n    market_cap_rank,\n    price_change_percentage_1h_in_currency,\n    price_change_percentage_24h_in_currency,\n    price_change_percentage_7d_in_currency,\n    circulating_supply,\n    max_supply,\n    sparkline_in_7d,\n  };\n}\n","import { Platform, ViewStyle } from 'react-native';\n\nimport { StyleSheet, mergeStyleSheet } from '../../../primitives';\n// import { fixWebSvg } from '../../fix-web-svg';\n\nimport { CARD_HEIGHT, CARD_PADDING, CARD_WIDTH } from '../constants';\n\nimport base from '../../../themes/base';\n\n// export let gray = theme.colors.trueGray[700];\n// export let red = (theme.colors.error as Record<number, string>)[800];\n// export let green = (theme.colors.success as Record<number, string>)[700];\n\n// console.log(gray, red, green);\n\nlet paddingFix = 26;\nlet leftBoxWidth = CARD_WIDTH / 3 + paddingFix;\nlet rightBoxWidth = CARD_WIDTH - leftBoxWidth;\n\nexport default mergeStyleSheet(\n  base,\n  StyleSheet.create({\n    cardContainer: {\n      padding: CARD_PADDING,\n      height: CARD_HEIGHT + CARD_PADDING * 2,\n      width: CARD_WIDTH + CARD_PADDING * 2,\n    },\n    cardContent: {\n      height: CARD_HEIGHT,\n      width: CARD_WIDTH,\n    },\n    leftContent: {\n      width: leftBoxWidth,\n      paddingLeft: 10,\n      paddingRight: 4,\n    },\n    coinCodeText: {\n      paddingTop: Platform.OS === 'web' ? 10 : 14,\n      lineHeight: 6,\n      fontWeight: '400',\n      marginBottom: 4,\n    },\n\n    coinCurrentPrice: {\n      paddingTop: Platform.OS === 'web' ? 10 : 14,\n      position: 'absolute',\n      right: 1,\n      fontSize: 14,\n      lineHeight: 6,\n      fontWeight: '400',\n    },\n\n    coinCurrentPriceEven: {\n      paddingTop: Platform.OS === 'web' ? 10 : 14,\n      position: 'absolute',\n      right: 1,\n      fontSize: 14,\n      lineHeight: 6,\n      fontWeight: '400',\n    },\n\n    coinCurrentPriceLoss: {\n      paddingTop: Platform.OS === 'web' ? 10 : 14,\n      position: 'absolute',\n      right: 1,\n      fontSize: 14,\n      lineHeight: 6,\n      fontWeight: '400',\n    },\n\n    coinCurrentPriceGain: {\n      paddingTop: Platform.OS === 'web' ? 10 : 14,\n      position: 'absolute',\n      right: 1,\n      fontSize: 14,\n      lineHeight: 6,\n      fontWeight: '400',\n    },\n\n    coinGainContainer: {\n      paddingTop: Platform.OS === 'web' ? 4 : 6,\n    },\n    coinGainTitle: {\n      paddingTop: 5,\n      paddingLeft: 5,\n      paddingRight: 5,\n      fontSize: 11.5,\n      lineHeight: 7,\n      fontWeight: Platform.OS === 'web' ? '300' : '400',\n    },\n    coinGainValue: {\n      fontWeight: '600',\n      fontSize: 11,\n    },\n    coinStatsTitle: {\n      paddingTop: 10,\n      fontSize: 11.5,\n      // ml:{2},\n      lineHeight: 6,\n      fontWeight: Platform.OS === 'web' ? '300' : '400',\n      // color: theme.colors.trueGray[700],\n    },\n    coinStatsValue: {\n      fontSize: 11,\n      // ml:{2},\n      lineHeight: 6,\n      fontWeight: '600',\n    },\n    dividerHorizontal: {\n      marginTop: 10,\n      width: '95%',\n    },\n    dividerVertical: {\n      height: '50%',\n    },\n    buttonsContainer: {\n      marginTop: Platform.OS === 'web' ? 12 : 9,\n    },\n    canvas: {\n      padding: 2,\n      paddingLeft: 4,\n      width: rightBoxWidth,\n      height: '90%',\n    },\n    heartButtom: {\n      ...(base.raw.button as ViewStyle),\n      paddingTop: 2,\n    },\n    statsButtom: {\n      ...(base.raw.button as ViewStyle),\n      ...((Platform.OS === 'web'\n        ? {\n            height: '1.4em',\n            width: '1.4em',\n            paddingRight: 12,\n          }\n        : {}) as ViewStyle),\n    },\n  })\n);\n","import { StyleSheet, mergeStyleSheetMany } from '../../../primitives';\n\nimport cardBaseTheme from './base';\nimport appDarkTheme from '../../../themes/dark';\n\nimport { red65, gray90, gray45, green70 } from '../../theme';\n\nexport default mergeStyleSheetMany(\n  cardBaseTheme,\n  appDarkTheme,\n  StyleSheet.create({\n    cardContainer: {},\n    cardContent: {},\n    leftContent: {},\n    coinCodeText: {\n      color: gray90,\n    },\n    coinCurrentPrice: {\n      color: gray90,\n    },\n    coinCurrentPriceEven: {\n      color: gray90,\n    },\n    coinCurrentPriceLoss: {\n      color: red65,\n    },\n    coinCurrentPriceGain: {\n      color: green70,\n    },\n    coinStatsTitle: {\n      color: gray90,\n    },\n    coinStatsValue: {\n      color: gray90,\n    },\n    dividerHorizontal: {\n      borderColor: gray45,\n    },\n    dividerVertical: {\n      borderColor: gray45,\n    },\n    buttonsContent: {},\n    button: {},\n\n    heartButtom: {\n      color: appDarkTheme.raw.button.color,\n    },\n    statsButtom: {\n      color: appDarkTheme.raw.button.color,\n    },\n  })\n);\n","import { StyleSheet, mergeStyleSheetMany } from '../../../primitives';\n\nimport { red35, gray10, gray45, green25 } from '../../theme';\n\nimport cardBaseTheme from './base';\n\nimport appLightTheme from '../../../themes/light';\n\nexport default mergeStyleSheetMany(\n  cardBaseTheme,\n  appLightTheme,\n  StyleSheet.create({\n    cardContainer: {},\n    cardContent: {},\n    leftContent: {},\n\n    coinCodeText: {\n      color: gray10,\n    },\n    coinCurrentPrice: {\n      color: gray10,\n    },\n\n    coinCurrentPriceEven: {\n      color: gray10,\n    },\n    coinCurrentPriceLoss: {\n      color: red35,\n    },\n    coinCurrentPriceGain: {\n      color: green25,\n    },\n\n    coinStatsTitle: {\n      color: gray10,\n    },\n    coinStatsValue: {\n      color: gray10,\n    },\n\n    dividerHorizontal: {\n      borderColor: gray45,\n    },\n    dividerVertical: {\n      borderColor: gray45,\n    },\n\n    // buttonsContent: {\n    //   borderColor: 'rgba(0, 0, 0, 0.2)',\n    //   backgroundColor: 'rgba(255, 255, 255, 0.4)',\n    // },\n    button: {},\n\n    heartButtom: {\n      color: appLightTheme.raw.button.color,\n    },\n    statsButtom: {\n      color: appLightTheme.raw.button.color,\n    },\n\n    canvas: {},\n  })\n);\n","import { Platform } from 'react-native';\n\n// let hostUrl = Platform.OS === 'web' ? '' : 'http://localhost:8000';\n\n// // TODO: replace with proper domain on prod\n// if (process.env.NODE_ENV === 'production') {\n//   hostUrl = Platform.OS === 'web' ? '' : 'http://localhost:8000';\n// }\n\n// export let apiURL = `${hostUrl}/api`;\n\nexport * from '../../shared/constants';\n\nimport { IP_ADDRESS } from '../../shared/constants';\n\nexport let protocol =\n  Platform.OS === 'web'\n    ? process.env.NODE_ENV === 'production'\n    // ? 'wss'\n    ? 'ws'\n    : 'ws'\n    : 'ws';\n\n// protocol = process.env.NODE_ENV === 'production' ? 'wss' : protocol;\n\nexport const WS_PORT = protocol === 'ws' ? 3081 : 3082;\nexport const WS_HOST = `${IP_ADDRESS}:${WS_PORT}`;\nexport const WSS_URL = `${protocol}://${WS_HOST}/api/v1/market`;\n","import { delay, Emitter } from './utils';\n\nimport { WSS_URL } from './constants';\nimport { CoinMetadata } from './types';\n\nexport type InboundWssMsg =\n  | { action: 'metadataEnd'; data: boolean }\n  | { action: 'metadata'; data: CoinMetadata[] }\n  | { action: 'sparkline'; data: [string, number[]] }\n  | { action: 'currentPrice'; data: [string, number] };\n\n// {\n//   action: 'metadata' | 'sparkline' | 'currentPrice';\n//   data: {\n//     metadata: string;\n//     sparkline: string;\n//     currentPrice: string;\n//   };\n// };\n\nexport type outboundWssMsg =\n  | { action: 'metadata'; data: [number, number] }\n  | { action: 'sparkline'; data: string }\n  | { action: 'currentPrice'; data: string };\n\nexport type OutboundEvt = {\n  metadata: [number, number];\n  sparkline: string;\n  currentPrice: string;\n};\n// {\n//   // mounted: boolean;\n//   metadata: [number, number];\n//   sparkline: string;\n//   currentPrice: string;\n// };\n\nexport type InboundEvt = {\n  // mounted: boolean;\n  metadataEnd: boolean;\n  metadata: CoinMetadata[];\n  sparkline: [string, number[]];\n  currentPrice: [string, number];\n};\n\nexport let inboundEvt = new Emitter<InboundEvt>();\n// export let outboundEvt = new Emitter<\n//   Record<OutboundEvt['action'], OutboundEvt['data']>\n// >();\n\nexport let outboundEvt = new Emitter<OutboundEvt>();\n\nexport let wss = new WebSocket(WSS_URL);\n\noutboundEvt.on('metadata', async data => {\n  await wssIsOpen();\n  wss.send(\n    JSON.stringify({\n      action: 'metadata',\n      data,\n    })\n  );\n});\n\noutboundEvt.on('sparkline', async data => {\n  await wssIsOpen();\n  wss.send(\n    JSON.stringify({\n      action: 'sparkline',\n      data,\n    })\n  );\n});\n\noutboundEvt.on('currentPrice', async data => {\n  await wssIsOpen();\n  wss.send(\n    JSON.stringify({\n      action: 'currentPrice',\n      data,\n    })\n  );\n});\n\nwss.addEventListener('message', (msg: MessageEvent<string>) => {\n  let payload = {} as InboundWssMsg;\n\n  try {\n    payload = JSON.parse(msg.data);\n    // console.log('___', payload);\n  } catch (e) {}\n\n  switch (payload.action) {\n    case 'metadataEnd': {\n      inboundEvt.emit(payload.action, payload.data);\n      break;\n    }\n    case 'metadata': {\n      inboundEvt.emit(payload.action, payload.data);\n      break;\n    }\n    case 'sparkline': {\n      inboundEvt.emit(payload.action, payload.data);\n      // console.log(payload);\n      break;\n    }\n\n    case 'currentPrice': {\n      inboundEvt.emit(payload.action, payload.data);\n      break;\n    }\n  }\n});\n\n// export\n\nexport async function wssIsOpen(): Promise<boolean> {\n  while (true) {\n    if (wss.readyState !== wss.OPEN) {\n      await delay(20);\n      continue;\n    }\n\n    return true;\n  }\n}\n","import { Platform } from 'react-native';\n\nimport { StyleSheet } from '../../primitives';\n\nexport default StyleSheet.create({\n  toastContainer: {\n    // display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    // top: height - bottomHeight,\n    // position: Platform.OS === 'web' ? ('fixed' as 'absolute') : 'absolute',\n    // borderWidth: 1,\n    height: 50,\n    borderRadius: 5,\n    // width: formDarkTheme.raw.formContent.width,\n  },\n\n  toastContent: {\n    fontSize: 14,\n    fontWeight: '500',\n  },\n\n  closeButtonBackground: {\n    position: 'absolute',\n    right: -5,\n    top: Platform.OS === 'web' ? -8 : -5,\n\n    zIndex: 100,\n    borderRadius: 30,\n\n    // borderWidth: 1,\n    // borderColor: 'red',\n    // borderRadius: 20,\n\n    height: Platform.OS === 'web' ? 15 : 18,\n    width: Platform.OS === 'web' ? 15 : 18,\n  },\n  closeButtonMargin: {\n    marginLeft: Platform.OS === 'web' ? -5 : -3,\n    marginTop: Platform.OS === 'web' ? -5 : -5,\n  },\n});\n","import React, { useEffect, useRef, useState } from 'react';\nimport {\n  Text,\n  View,\n  Pressable,\n  Platform,\n  useWindowDimensions,\n} from 'react-native';\n\nimport type { ViewStyle, GestureResponderEvent } from 'react-native';\n\nimport { CloseCircle } from '../../primitives/Icons';\n\nimport { Center, mergeStyleSheetMany, StyleSheet } from '../../primitives';\nimport { atom, useSetRecoilState, useRecoilValue } from 'recoil';\n\nimport { CARD_WIDTH } from '../SparklineCard';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport baseTheme from './base-theme';\n// let baseTheme = StyleSheet.create({\n//   toastContainer: {\n//     // display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     // top: height - bottomHeight,\n//     // position: Platform.OS === 'web' ? ('fixed' as 'absolute') : 'absolute',\n//     // borderWidth: 1,\n//     height: 50,\n//     borderRadius: 5,\n//     // width: formDarkTheme.raw.formContent.width,\n//   },\n\n//   toastContent: {\n//     fontSize: 14,\n//     fontWeight: '500',\n//   },\n\n//   closeButtonBackground: {\n//     position: 'absolute',\n//     right: -5,\n//     top: Platform.OS === 'web' ? -8 : -5,\n\n//     zIndex: 100,\n//     borderRadius: 30,\n\n//     // borderWidth: 1,\n//     // borderColor: 'red',\n//     // borderRadius: 20,\n\n//     height: Platform.OS === 'web' ? 15 : 18,\n//     width: Platform.OS === 'web' ? 15 : 18,\n//     backgroundColor: 'black',\n//   },\n//   closeButtonMargin: {\n//     marginLeft: Platform.OS === 'web' ? -5 : -3,\n//     marginTop: Platform.OS === 'web' ? -5 : -5,\n//   },\n// });\n\nimport {\n  black20,\n  black05,\n  gray45,\n  gray90,\n  white30,\n  red65,\n  red35,\n  yellow100,\n  red50,\n  red20,\n  yellow25,\n  green45,\n  black12,\n  yellow95,\n  yellow65,\n} from '../theme';\n\nexport let errorTheme = mergeStyleSheetMany(\n  baseTheme,\n  StyleSheet.create({\n    closeButtonBackground: { backgroundColor: black12, color: red65 },\n    toastContainer: {\n      backgroundColor: red20,\n      borderColor: red65,\n      borderWidth: 1,\n\n      // width: formDarkTheme.raw.formContent.width,\n    },\n\n    toastContent: {\n      color: gray90,\n    },\n  })\n);\n\nexport let successTheme = mergeStyleSheetMany(\n  baseTheme,\n  StyleSheet.create({\n    closeButtonBackground: {\n      backgroundColor: yellow100,\n      color: yellow25,\n    },\n    toastContainer: {\n      backgroundColor: black12,\n      // backgroundColor: red20,\n      borderColor: yellow25,\n      borderWidth: 1,\n      // width: formDarkTheme.raw.formContent.width,\n    },\n\n    toastContent: {\n      color: gray90,\n    },\n  })\n);\n\nexport let warningTheme = mergeStyleSheetMany(\n  baseTheme,\n  StyleSheet.create({\n    closeButtonBackground: { backgroundColor: 'black', color: black20 },\n    toastContainer: {\n      backgroundColor: 'rgba(139, 57, 66, 1)',\n      // width: formDarkTheme.raw.formContent.width,\n    },\n\n    toastContent: {\n      color: '#d4d4d4',\n    },\n  })\n);\n\nexport let notificationTheme = mergeStyleSheetMany(\n  baseTheme,\n  StyleSheet.create({\n    closeButtonBackground: { backgroundColor: 'black', color: black20 },\n    toastContainer: {\n      backgroundColor: 'rgba(139, 57, 66, 1)',\n\n      // width: formDarkTheme.raw.formContent.width,\n    },\n\n    toastContent: {\n      color: '#d4d4d4',\n    },\n  })\n);\n","import React, { useEffect, useRef, useState } from 'react';\nimport {\n  Text,\n  View,\n  Pressable,\n  Platform,\n  useWindowDimensions,\n} from 'react-native';\n\nimport type { ViewStyle, GestureResponderEvent } from 'react-native';\n\nimport { CloseCircle } from '../../primitives/Icons';\n\nimport { Center, mergeStyleSheetMany, StyleSheet } from '../../primitives';\nimport { atom, useSetRecoilState, useRecoilValue } from 'recoil';\n\nimport { CARD_WIDTH } from '../SparklineCard';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport baseTheme from './base-theme';\n// let baseTheme = StyleSheet.create({\n//   toastContainer: {\n//     // display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     // top: height - bottomHeight,\n//     // position: Platform.OS === 'web' ? ('fixed' as 'absolute') : 'absolute',\n//     // borderWidth: 1,\n//     height: 50,\n//     borderRadius: 5,\n//     // width: formDarkTheme.raw.formContent.width,\n//   },\n\n//   toastContent: {\n//     fontSize: 14,\n//     fontWeight: '500',\n//   },\n\n//   closeButtonBackground: {\n//     position: 'absolute',\n//     right: -5,\n//     top: Platform.OS === 'web' ? -8 : -5,\n\n//     zIndex: 100,\n//     borderRadius: 30,\n\n//     // borderWidth: 1,\n//     // borderColor: 'red',\n//     // borderRadius: 20,\n\n//     height: Platform.OS === 'web' ? 15 : 18,\n//     width: Platform.OS === 'web' ? 15 : 18,\n//     backgroundColor: 'black',\n//   },\n//   closeButtonMargin: {\n//     marginLeft: Platform.OS === 'web' ? -5 : -3,\n//     marginTop: Platform.OS === 'web' ? -5 : -5,\n//   },\n// });\n\nimport {\n  black20,\n  black05,\n  red65,\n  red20,\n  red50,\n  red35,\n  yellow100,\n  red75,\n  gray10,\n  yellow65,\n  orange95,\n  black12,\n} from '../theme';\n\nexport let errorTheme = mergeStyleSheetMany(\n  baseTheme,\n  StyleSheet.create({\n    closeButtonBackground: { backgroundColor: yellow100, color: red35 },\n\n    toastContainer: {\n      backgroundColor: red75,\n      borderColor: red20,\n      borderWidth: 1,\n\n      // width: formDarkTheme.raw.formContent.width,\n    },\n\n    toastContent: {\n      color: gray10,\n    },\n  })\n);\n\nexport let successTheme = mergeStyleSheetMany(\n  baseTheme,\n  StyleSheet.create({\n    closeButtonBackground: { backgroundColor: black12, color: yellow65 },\n    toastContainer: {\n      backgroundColor: orange95,\n      borderColor: yellow65,\n      borderWidth: 1,\n      // width: formDarkTheme.raw.formContent.width,\n    },\n\n    toastContent: {\n      color: gray10,\n    },\n  })\n);\n\nexport let warningTheme = mergeStyleSheetMany(\n  baseTheme,\n  StyleSheet.create({\n    closeButtonBackground: { backgroundColor: 'black', color: black20 },\n    toastContainer: {\n      backgroundColor: 'rgba(139, 57, 66, 1)',\n      // width: formDarkTheme.raw.formContent.width,\n    },\n\n    toastContent: {\n      color: '#d4d4d4',\n    },\n  })\n);\n\nexport let notificationTheme = mergeStyleSheetMany(\n  baseTheme,\n  StyleSheet.create({\n    closeButtonBackground: { backgroundColor: 'black', color: black20 },\n    toastContainer: {\n      backgroundColor: 'rgba(139, 57, 66, 1)',\n\n      // width: formDarkTheme.raw.formContent.width,\n    },\n\n    toastContent: {\n      color: '#d4d4d4',\n    },\n  })\n);\n","import React, { useEffect, useRef, useState } from 'react';\nimport {\n  Text,\n  View,\n  Pressable,\n  Platform,\n  useWindowDimensions,\n  useColorScheme,\n} from 'react-native';\n\nimport type { ViewStyle, GestureResponderEvent } from 'react-native';\n\nimport { CloseCircle } from '../../primitives/Icons';\n\nimport { Center, mergeStyleSheetMany, StyleSheet } from '../../primitives';\nimport { atom, useSetRecoilState, useRecoilValue } from 'recoil';\n\nimport { CARD_WIDTH } from '../SparklineCard';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\ntype ToastAtom = {\n  display: boolean;\n  message: string;\n  type: 'error' | 'success' | 'warning' | 'notification';\n  timer?: number;\n  containerStyle?: ViewStyle | ViewStyle[];\n  onPress?: ((event: GestureResponderEvent) => void) | null | undefined;\n  onClose?: ((event: GestureResponderEvent) => void) | null | undefined;\n};\n\nexport const toastAtom = atom<ToastAtom>({\n  key: 'toast',\n  default: {\n    display: false,\n    message: '',\n    type: 'success',\n  },\n});\n\nimport {\n  errorTheme as errorDarkTheme,\n  successTheme as successDarkTheme,\n  warningTheme as warningDarkTheme,\n  notificationTheme as notificationDarkTheme,\n} from './dark-theme';\n\nimport {\n  errorTheme as errorLightTheme,\n  successTheme as successLightTheme,\n  warningTheme as warningLightTheme,\n  notificationTheme as notificationLightTheme,\n} from './light-theme';\n\n// type ToastProps = {\n//   message: string;\n//   type: 'error' | 'success' | 'warning' | 'notification';\n//   containerStyle?: ViewStyle | ViewStyle[];\n//   onPress?: ((event: GestureResponderEvent) => void) | null | undefined;\n//   onClose?: ((event: GestureResponderEvent) => void) | null | undefined;\n// };\n\nimport { baseTheme as appBarBaseTheme } from '../AppBar/theme';\n\nexport default function Toast(): JSX.Element {\n  // let { containerStyle, message, onPress, onClose, type } = props;\n  let OSTheme = useColorScheme();\n  let inserts = useSafeAreaInsets();\n  let { height, width } = useWindowDimensions();\n\n  let errorTheme = OSTheme === 'dark' ? errorDarkTheme : errorLightTheme;\n  let successTheme = OSTheme === 'dark' ? successDarkTheme : successLightTheme;\n  let warningTheme = OSTheme === 'dark' ? warningDarkTheme : warningLightTheme;\n  let notificationTheme =\n    OSTheme === 'dark' ? notificationDarkTheme : notificationLightTheme;\n\n  let toastState = useRecoilValue(toastAtom);\n  let setToaststate = useSetRecoilState(toastAtom);\n\n  let toastWidth = CARD_WIDTH * 0.9;\n\n  // toastWidth =\n  //   toastWidth < CARD_WIDTH * 2 * 0.9 ? toastWidth : CARD_WIDTH * 2 * 0.9;\n\n  let topPosition =\n    Platform.OS === 'web'\n      ? appBarBaseTheme.raw.content.height + 12\n      : Platform.OS === 'ios'\n      ? inserts.top + 17\n      : inserts.top + 46;\n\n  let [toastPositionFix, setToastPositionFix] = useState<ViewStyle>({\n    // display: 'flex',\n    // position: 'static',\n    // position: 'absolute',\n    top: topPosition,\n    position: Platform.OS === 'web' ? ('fixed' as 'absolute') : 'absolute',\n    // top: height - 200,\n    left: (width - toastWidth) / 2,\n    // top: 50,\n    width: toastWidth,\n    // zIndex: 100,\n    // borderWidth: 0,\n  });\n\n  let timeoutId = useRef<null | ReturnType<typeof setTimeout>>();\n  useEffect(() => {\n    if (toastState.timer) {\n      clearTimeout(timeoutId.current as unknown as number);\n      timeoutId.current = setTimeout(() => {\n        // if (toastState.onClose)\n\n        timeoutId.current = null;\n        setToaststate({\n          display: false,\n          type: 'success',\n          message: '',\n        });\n      }, toastState.timer);\n    }\n    return () => {\n      clearTimeout(timeoutId.current as unknown as number);\n    };\n  }, [setToaststate, toastState.timer]);\n\n  useEffect(() => {\n    let toastWidth2 = CARD_WIDTH * 0.9;\n    // toastWidth2 =\n    //   toastWidth2 < CARD_WIDTH * 2 * 0.9 ? toastWidth2 : CARD_WIDTH * 2 * 0.9;\n\n    setToastPositionFix({\n      // display: 'flex',\n      // position: 'relative',\n      position: Platform.OS === 'web' ? ('fixed' as 'absolute') : 'absolute',\n      // position: Platform.OS === 'web' ? 'absolute' : 'absolute',\n      // top: height * 0.9,\n      // top: 10,\n      // marginTop: 20,\n      top: topPosition,\n      left: (width - toastWidth2) / 2,\n      // position: 'static',\n      width: toastWidth2,\n      // zIndex: 100,\n\n      // borderWidth: 0,\n    });\n  }, [height, topPosition, width]);\n\n  // console.log(toastState);\n\n  if (toastState.display === false) {\n    return <></>;\n  }\n\n  // if (timeoutId.current) {\n  //   clearTimeout(timeoutId.current as unknown as number);\n  // }\n\n  let theme =\n    toastState.type === 'error'\n      ? errorTheme\n      : toastState.type === 'success'\n      ? successTheme\n      : toastState.type === 'warning'\n      ? warningTheme\n      : notificationTheme;\n\n  // console.log(theme.raw);\n  return (\n    <Center>\n      <Pressable onPress={toastState.onPress}>\n        <View style={[theme.toastContainer, toastPositionFix]}>\n          <Text style={theme.toastContent}>{toastState.message}</Text>\n          <View style={theme.closeButtonBackground}>\n            <Pressable onPress={toastState.onClose}>\n              <View style={theme.closeButtonMargin}>\n                <CloseCircle\n                  height=\"25px\"\n                  width=\"25px\"\n                  color={theme.raw.closeButtonBackground.color}\n                />\n              </View>\n            </Pressable>\n          </View>\n        </View>\n      </Pressable>\n    </Center>\n  );\n}\n","import React, { useEffect, useRef, useState } from 'react';\n\nimport {\n  // Heart,\n  HeartOutline,\n  StatsChart,\n} from '../../primitives/Icons';\n// import Messagecontainer from './MessageContainer';\n// import CanvasChart, { getScrollPosition } from './components/Chart';\n\n// import { CoinMetadata } from '../../types';\nimport { CardProps } from './types';\n\nimport { Text, View, useColorScheme, Platform, Pressable } from 'react-native';\n\nimport { getLast, useReactNavigation } from '../../utils';\n\nimport {\n  Center,\n  DividerHorizontal,\n  DividerVerticle,\n  HStack,\n  VStack,\n} from '../../primitives';\n\nimport {\n  computeAvailableSupply,\n  fixNumber,\n  getNumberColor,\n  sanatizeProps,\n} from './utils';\n\nimport cardDarkTheme from './theme/dark';\nimport cardLightTheme from './theme/light';\n\nimport { default as BaseCard } from '../Card';\n\nimport { inboundEvt, outboundEvt } from '../../events';\nimport { useSetRecoilState } from 'recoil';\nimport { toastAtom } from '../Toast';\nimport { Routes } from '../../routes';\n\nexport function BlankCard(): JSX.Element {\n  let OSTheme = useColorScheme();\n\n  let cardTheme = OSTheme === 'dark' ? cardDarkTheme : cardLightTheme;\n\n  return (\n    <BaseCard\n      containerStyle={cardTheme.cardContainer}\n      contentStyle={cardTheme.cardContent}\n    />\n  );\n}\n\n// export default React.memo(Card);\n\nexport default function Card(props: CardProps): JSX.Element {\n  let OSTheme_ = useColorScheme();\n\n  let [OSTheme, setOSTheme] = useState(OSTheme_);\n\n  let cardTheme = OSTheme === 'dark' ? cardDarkTheme : cardLightTheme;\n\n  let { renderEmptyCard, renderedCanvas, isMounted } = useCardEffect();\n  let setToastAttom = useSetRecoilState(toastAtom);\n  // let add = useSimulatedPriceChange(isMounted);\n  let nav = useReactNavigation<Routes>();\n  // useEffect(() => {\n  //   if (Platform.OS !== 'web') {\n  //     return;\n  //   }\n\n  //   let themeHandler = (event: MediaQueryListEvent) => {\n  //     if (event.matches) {\n  //       setOSTheme('dark');\n  //     } else {\n  //       setOSTheme('light');\n  //     }\n  //   };\n\n  //   window\n  //     ?.matchMedia('(prefers-color-scheme: dark)')\n  //     ?.addEventListener('change', themeHandler);\n\n  //   return () => {\n  //     window\n  //       ?.matchMedia('(prefers-color-scheme: dark)')\n  //       ?.removeEventListener('change', themeHandler);\n  //   };\n  // }, []);\n\n  let {\n    symbol,\n    name,\n    market_cap,\n    market_cap_rank,\n    price_change_percentage_1h_in_currency,\n    price_change_percentage_24h_in_currency,\n    price_change_percentage_7d_in_currency,\n    circulating_supply,\n    max_supply,\n    sparkline_in_7d,\n    // height,\n  } = sanatizeProps(props);\n\n  let [currentPrice, setCurrentPrice] = useState(\n    sparkline_in_7d == null ? '-' : getLast(sparkline_in_7d || [])\n  );\n\n  useEffect(() => {\n    setCurrentPrice(getLast(sparkline_in_7d || []));\n  }, [sparkline_in_7d]);\n\n  useEffect(() => {\n    //\n    outboundEvt.emit('currentPrice', props.item.id);\n\n    let id: ReturnType<typeof setTimeout>;\n    let rm = inboundEvt.on('currentPrice', ([coinId, newPrice]) => {\n      if (coinId !== props.item.id) {\n        return;\n      }\n\n      console.log(new Date(), coinId, newPrice);\n      setCurrentPrice(newPrice);\n\n      id = setTimeout(() => {\n        outboundEvt.emit('currentPrice', props.item.id);\n\n        // 1 min sleep\n      }, 1000 * 60);\n    });\n\n    return () => {\n      rm();\n      clearTimeout(id);\n    };\n  }, [props.item.id]);\n\n  let secondLastPrice = sparkline_in_7d[sparkline_in_7d.length - 2];\n\n  let currentPriceColor =\n    secondLastPrice === currentPrice\n      ? cardTheme.coinCurrentPriceEven\n      : secondLastPrice > currentPrice\n      ? cardTheme.coinCurrentPriceLoss\n      : cardTheme.coinCurrentPriceGain;\n\n  currentPrice = fixNumber(Number(currentPrice));\n\n  if (renderEmptyCard) {\n    return <BlankCard />;\n  }\n\n  //  let price_change_percentage_1h_in_currency\n\n  let avlSupplay = computeAvailableSupply(props);\n\n  return (\n    <BaseCard\n      containerStyle={cardTheme.cardContainer}\n      contentStyle={cardTheme.cardContent}>\n      <HStack>\n        <VStack style={cardTheme.leftContent}>\n          <HStack>\n            <Text style={[cardTheme.coinCodeText]}>{symbol}</Text>\n            <Text style={currentPriceColor}>{currentPrice}</Text>\n          </HStack>\n\n          <DisplayCoinStats title={'rank:  '} value={market_cap_rank} />\n          <DisplayCoinStats title={'name:  '} value={name} />\n\n          <DisplayCoinStats\n            title={'market cap:  '}\n            value={fixNumber(market_cap)}\n          />\n\n          <Center>\n            <DividerHorizontal style={cardTheme.dividerHorizontal} />\n          </Center>\n\n          <DisplayCoinStats\n            title={'supplay:  '}\n            value={fixNumber(circulating_supply)}\n          />\n\n          <DisplayCoinStats\n            title={'max supplay  '}\n            value={fixNumber(max_supply)}\n          />\n\n          <DisplayCoinStats\n            title={'future supplay  '}\n            value={`${avlSupplay}`}\n          />\n\n          <Center style={cardTheme.buttonsContainer}>\n            <View style={cardTheme.buttonsContent}>\n              <HStack>\n                {/* <Heart style={iconStyle} color={theme.colors.trueGray[200]} /> */}\n                <Pressable\n                  onPress={() => {\n                    console.log('add to favorite');\n                    setToastAttom({\n                      display: true,\n                      type: 'success',\n                      message: 'Add to Favorities under construction',\n                      timer: 1000 * 5, // 5 sec\n                      // containerStyle: toatsTop,\n                      onPress: () => {\n                        // setUserSignUpError(null);\n                        console.log('pressed toast');\n                      },\n                      onClose: () => {\n                        setToastAttom({\n                          display: false,\n                          type: 'success',\n                          message: '',\n                        });\n                      },\n                    });\n                  }}>\n                  <HeartOutline\n                    style={cardTheme.raw.heartButtom}\n                    color={cardTheme.raw.heartButtom.color}\n                  />\n                </Pressable>\n\n                <Center>\n                  <DividerVerticle style={cardTheme.dividerVertical} />\n                </Center>\n\n                <Pressable\n                  onPress={() => {\n                    console.log('go to chart');\n                    nav.navigate('Chart', {\n                      coinId: props.item.id,\n                    });\n                  }}>\n                  <StatsChart\n                    style={cardTheme.raw.statsButtom}\n                    color={cardTheme.raw.statsButtom.color}\n                  />\n                </Pressable>\n              </HStack>\n            </View>\n          </Center>\n        </VStack>\n\n        <VStack>\n          <Center>\n            <HStack style={cardTheme.coinGainContainer}>\n              <DisplayCoinGain\n                title={'1h: '}\n                value={price_change_percentage_1h_in_currency}\n                color={getNumberColor(\n                  price_change_percentage_1h_in_currency,\n                  OSTheme\n                )}\n              />\n\n              <DisplayCoinGain\n                title={'1d: '}\n                value={price_change_percentage_24h_in_currency}\n                color={getNumberColor(\n                  price_change_percentage_24h_in_currency,\n                  OSTheme\n                )}\n              />\n\n              <DisplayCoinGain\n                title={'7d: '}\n                value={price_change_percentage_7d_in_currency}\n                color={getNumberColor(\n                  price_change_percentage_7d_in_currency,\n                  OSTheme\n                )}\n              />\n            </HStack>\n          </Center>\n\n          <View style={cardTheme.canvas}>\n            {renderedCanvas ? props.children : null}\n          </View>\n        </VStack>\n      </HStack>\n    </BaseCard>\n  );\n}\n\ntype DisplayCoinData = {\n  title: string;\n  value: string | number;\n  color?: string;\n};\n\nlet DisplayCoinStats = React.memo(function (props: DisplayCoinData) {\n  let value = props.value;\n\n  let OSTheme = useColorScheme();\n\n  let cardTheme = OSTheme === 'dark' ? cardDarkTheme : cardLightTheme;\n\n  if (props.title === 'name:  ') {\n    let str = props.value.toString();\n    if (str.length > 15) {\n      value = str.slice(0, 13) + '...';\n    }\n  }\n  return (\n    <Text style={cardTheme.coinStatsTitle}>\n      {props.title}\n      <Text style={[cardTheme.coinStatsValue]}>{value}</Text>\n    </Text>\n  );\n});\n\nlet DisplayCoinGain = React.memo(function (\n  props: React.HTMLAttributes<unknown> & DisplayCoinData\n) {\n  let color = props.color == null ? 'trueGray.300' : props.color;\n\n  let OSTheme = useColorScheme();\n  let cardTheme = OSTheme === 'dark' ? cardDarkTheme : cardLightTheme;\n\n  let value =\n    typeof props.value === 'number' ? `${props.value.toFixed(2)}%` : '-';\n\n  return (\n    <VStack>\n      <Text style={[cardTheme.coinGainTitle, { color }]}>\n        {props.title}\n        <Text style={[cardTheme.coinGainValue, { color }]}>{value}</Text>\n      </Text>\n    </VStack>\n  );\n});\n\n// ------- HOOKS ------- //\n\nfunction useCardEffect() {\n  let idEmptyCard = useRef(-1);\n  let idRenderedCanvas = useRef(-1);\n  let isMounted = useRef(false);\n\n  let [renderEmptyCard, setRenderEmptyCard] = useState(true);\n  let [renderedCanvas, setRenderedCanvas] = useState(false);\n\n  useEffect(() => {\n    isMounted.current = true;\n\n    return () => {\n      isMounted.current = false;\n    };\n  }, [isMounted]);\n\n  useEffect(() => {\n    let timeoutId = setTimeout(() => {\n      idEmptyCard.current = requestAnimationFrame(() => {\n        if (isMounted.current === false) {\n          return;\n        }\n        setRenderEmptyCard(false);\n      });\n    }, Math.floor(Math.random() * 16));\n\n    return () => {\n      clearTimeout(timeoutId);\n      cancelAnimationFrame(idEmptyCard.current);\n    };\n  }, [idEmptyCard, isMounted, setRenderEmptyCard]);\n\n  useEffect(() => {\n    if (renderEmptyCard) {\n      return;\n    }\n\n    if (renderedCanvas) {\n      return;\n    }\n\n    // delaying canvas drawing longer\n    let timeoutId = setTimeout(() => {\n      idRenderedCanvas.current = requestAnimationFrame(() => {\n        if (isMounted.current === false) {\n          return;\n        }\n\n        if (renderedCanvas) {\n          return;\n        }\n\n        setRenderedCanvas(true);\n      });\n    }, Math.floor(Math.random() * 16 + 16));\n\n    return () => {\n      clearTimeout(timeoutId);\n      cancelAnimationFrame(idRenderedCanvas.current);\n    };\n  }, [renderedCanvas, renderEmptyCard, idRenderedCanvas, isMounted]);\n\n  return { renderEmptyCard, renderedCanvas, isMounted };\n}\n","import React from 'react';\n\nimport { Canvas } from '../../primitives';\nimport { rescale } from '../../utils';\nimport { Platform } from 'react-native';\n\ntype Props = React.HTMLAttributes<JSX.Element> & {\n  points: number[];\n  color: string;\n};\n\nexport default function Sparline(props: Props): JSX.Element {\n  let points = props.points;\n  props = Platform.OS === 'web' ? { ...props, points: [] } : props;\n\n  return (\n    <Canvas\n      {...props}\n      ref={drawCanvas(points, props.color)}\n      // style={{ height: 150, width: 300 }}\n    />\n  );\n}\n\nconst drawCanvas =\n  (points: number[], color: string) => (canvas: HTMLCanvasElement) => {\n    if (canvas == null) {\n      return;\n    }\n\n    const ctx = canvas.getContext('2d');\n    if (ctx == null) {\n      return;\n    }\n\n    let { height, width } = ctx.canvas;\n\n    ctx.clearRect(0, 0, width, height);\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.0)';\n    ctx.fillRect(0, 0, width, height);\n\n    ctx.save();\n\n    ctx.lineWidth = Platform.OS === 'web' ? 1.5 : 1;\n    ctx.lineJoin = 'round';\n\n    ctx.strokeStyle = color;\n\n    const normalizedHeight = height * 0.9;\n\n    let canvasVerticalPadding = (height - normalizedHeight) / 2;\n\n    let max = -Infinity;\n    let min = Infinity;\n\n    for (let y of points) {\n      if (y > max) {\n        max = y;\n      }\n\n      if (y < min) {\n        min = y;\n      }\n    }\n\n    const remap = rescale(normalizedHeight, 0)(min, max);\n    const dx = 1 / points.length;\n\n    ctx.beginPath();\n\n    let widthNativeFix = Platform.OS === 'web' ? 0.95 : 0.655;\n    let heighNativetFix = Platform.OS === 'web' ? 0.9 : 1;\n\n    for (let idx = 0; idx < points.length; idx++) {\n      ctx.lineTo(\n        idx * dx * width * widthNativeFix,\n        (remap(points[idx]) + canvasVerticalPadding) * heighNativetFix\n      );\n    }\n\n    ctx.stroke();\n  };\n","import React, { useState, useEffect } from 'react';\nimport { CoinMetadata } from '../../types';\n\nimport { useColorScheme } from 'react-native';\n\nimport Card from './Card';\n\nimport { getNumberColor } from './utils';\n\nimport { CARD_HEIGHT, CARD_PADDING, CARD_WIDTH } from './constants';\n\nimport Sparkline from './Sparkline';\n\nimport { inboundEvt, outboundEvt } from '../../events';\n\ntype Props = React.HTMLAttributes<JSX.Element> & {\n  item: CoinMetadata;\n  width: number;\n  height: number;\n};\n\nexport { CARD_HEIGHT, CARD_PADDING, CARD_WIDTH };\n\nlet MemoSparkline = React.memo(Sparkline);\n\nexport default function SparklineCard(props: Props): JSX.Element {\n  let OSTheme = useColorScheme();\n\n  // let [points, setPoints] = useState([] as number[]);\n\n  let [item, setItem] = useState(props.item);\n\n  let color = getNumberColor(\n    item.price_change_percentage_7d_in_currency,\n    OSTheme\n  );\n\n  useEffect(() => {\n    outboundEvt.emit('sparkline', props.item.id);\n\n    let rm1 = inboundEvt.on('sparkline', p => {\n      let [coinId, newPoints] = p;\n\n      if (coinId !== props.item.id) {\n        return;\n      }\n\n      if (newPoints == null) {\n        return;\n      }\n\n      item.price_change_percentage_1h_in_currency =\n        100 *\n        (newPoints[newPoints.length - 1] / newPoints[newPoints.length - 2] - 1);\n\n      item.price_change_percentage_24h_in_currency =\n        100 *\n        (newPoints[newPoints.length - 1] / newPoints[newPoints.length - 7] - 1);\n\n      item.price_change_percentage_7d_in_currency =\n        100 * (newPoints[newPoints.length - 1] / newPoints[0] - 1);\n\n      // item.sparkline_in_7d = item.sparkline_in_7d || {};\n      // item.sparkline_in_7d.price = newPoints;\n\n      // if (\n      //   item.price_change_percentage_1h_in_currency &&\n      //   item.price_change_percentage_24h_in_currency &&\n      //   item.price_change_percentage_7d_in_currency\n      // ) {\n      setItem({\n        ...item,\n        sparkline_in_7d: newPoints,\n      });\n      // }\n    });\n    return () => {\n      rm1();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.item.id]);\n\n  // item.sparkline_in_7d = item.sparkline_in_7d || {};\n  item.sparkline_in_7d = item.sparkline_in_7d || [];\n\n  // console.log('---', props.item.id);\n  return (\n    <Card item={item}>\n      <MemoSparkline\n        color={color}\n        style={{ height: props.height }}\n        points={item.sparkline_in_7d}\n      />\n    </Card>\n  );\n}\n","// type Props: {\n//   children: React.Func\n// }\n\nimport React from 'react';\n\nimport { StatusBar, useColorScheme, SafeAreaView } from 'react-native';\n\nimport Bg from './Background';\n// import AppBar from './AppBar-old';\nimport Toast from './Toast';\n\nimport AppBar, { darkTheme, lightTheme } from './AppBar';\n\nexport default function Screen({\n  children,\n}: React.HTMLAttributes<unknown>): JSX.Element {\n  let OSTheme = useColorScheme();\n\n  let theme = OSTheme === 'dark' ? darkTheme : lightTheme;\n\n  return (\n    <>\n      <Bg />\n      <SafeAreaView style={theme.content}>\n        <StatusBar\n          barStyle={OSTheme === 'dark' ? 'light-content' : 'dark-content'}\n        />\n        <AppBar />\n        <Toast />\n      </SafeAreaView>\n\n      {children}\n    </>\n  );\n}\n","import React, { useEffect, useRef, useState } from 'react';\n\nimport { View, useWindowDimensions } from 'react-native';\n\n// import type { StyleProp, ViewStyle } from 'react-native';\nimport { Lifo } from '../../utils';\n\n// import {\n//   //  Emitter, debounce1,\n//   getLast,\n// } from '../../utils';\n\n// import queue from '../../queue';\n\nimport type { RenderItemsPros } from './types';\n// window.addEventListener('scroll', e => {\n//   console.log(window.scrollY);\n\nexport default function RenderItems<T>(props: RenderItemsPros<T>): JSX.Element {\n  let {\n    data,\n    winSize,\n    event,\n    renderItem,\n    maxNumColumn,\n    itemHeight,\n    itemWidth,\n    onEndReachedThreshold,\n    onEndReached,\n  } = props;\n\n  const { width, height } = useWindowDimensions();\n\n  let horizontalNumElem = Math.floor(width / itemWidth) || 1;\n  maxNumColumn = maxNumColumn || 3;\n\n  horizontalNumElem =\n    horizontalNumElem > maxNumColumn ? maxNumColumn : horizontalNumElem;\n\n  let itemsInTheView = Math.ceil(height / itemHeight) * horizontalNumElem;\n\n  winSize = winSize || 3;\n\n  let maxItemToRender = itemsInTheView * winSize;\n\n  let viewPortItemsCount = Math.ceil((maxItemToRender * 2) / 3);\n  let topOffset = Math.ceil(viewPortItemsCount / (2 * horizontalNumElem));\n\n  let queue = useRef(new Lifo());\n  let isMounted = useRef(false);\n  let inProgress = useRef(false);\n  let isFirstRender = useRef(true);\n\n  let _renderedItems: JSX.Element[] = [];\n  let _cachedRenderedItems: JSX.Element[] = [];\n\n  let [renderedItems, setRenderedItems] = useState(_renderedItems);\n  let [cachedRenderedItems, setCachedRenderedItems] =\n    useState(_cachedRenderedItems);\n\n  let queueHandler = () => {\n    // only run the last render job\n    queue.current.run(1);\n\n    if (isMounted.current) {\n      requestAnimationFrame(queueHandler);\n    }\n  };\n\n  // console.log('*******');\n\n  useEffect(() => {\n    isMounted.current = true;\n    requestAnimationFrame(queueHandler);\n\n    return () => {\n      isMounted.current = false;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    inProgress.current = false;\n  }, [renderedItems]);\n\n  useEffect(() => {\n    let rmListFromRenderQueue: () => void = () => null;\n\n    let rmScrollListener = event.on('scroll', pos => {\n      if (inProgress.current) {\n        rmListFromRenderQueue();\n      }\n\n      rmListFromRenderQueue = queue.current.add(() => {\n        let aboveOffset = pos - topOffset;\n\n        aboveOffset = aboveOffset < 0 ? 0 : aboveOffset;\n\n        // estimating belowOffset\n        let belowOffset =\n          (data.length - viewPortItemsCount + pos * horizontalNumElem) /\n            horizontalNumElem -\n          aboveOffset;\n\n        let nextItems: JSX.Element[] = [];\n\n        for (\n          let idx = aboveOffset * horizontalNumElem;\n          idx < viewPortItemsCount + pos * horizontalNumElem;\n          idx++\n        ) {\n          let item = cachedRenderedItems[idx];\n\n          // console.log('--->>>', data.length - idx);\n          if (data.length - idx <= (onEndReachedThreshold || 0)) {\n            onEndReached && onEndReached(data.length - idx);\n          }\n\n          if (item != null && item.key === idx + '') {\n            nextItems.push(item);\n\n            continue;\n          }\n\n          if (idx >= data.length) {\n            belowOffset = 0;\n            break;\n          }\n\n          if (cachedRenderedItems[idx] == null) {\n            cachedRenderedItems[idx] = (\n              <View key={idx + ''}>{renderItem(data[idx], idx)}</View>\n            );\n          }\n\n          nextItems.push(cachedRenderedItems[idx]);\n          // counter++;\n        }\n\n        nextItems.unshift(\n          <View\n            key={'above'}\n            // eslint-disable-next-line react-native/no-inline-styles\n            style={{\n              width: '100%',\n              height: aboveOffset * itemHeight,\n            }}\n          />\n        );\n\n        // computing the actual belowOffset\n        belowOffset = Math.ceil(\n          (data.length - nextItems.length) / horizontalNumElem - aboveOffset\n        );\n\n        belowOffset = belowOffset < 0 ? 0 : belowOffset;\n\n        nextItems.push(\n          <View\n            key={'below'}\n            // eslint-disable-next-line react-native/no-inline-styles\n            style={{\n              width: '100%',\n\n              height: belowOffset * itemHeight,\n            }}\n          />\n        );\n\n        inProgress.current = true;\n        setRenderedItems(nextItems);\n      });\n    });\n\n    return () => {\n      rmListFromRenderQueue();\n      rmScrollListener();\n    };\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [event, horizontalNumElem]);\n\n  useEffect(() => {\n    if (data.length > 0 && isFirstRender.current) {\n      // let counter = 0;\n      _renderedItems.push(\n        <View\n          key={'above'}\n          // eslint-disable-next-line react-native/no-inline-styles\n          style={{ width: '100%', height: 0 }}\n        />\n      );\n\n      isFirstRender.current = false;\n\n      for (let idx = 0; idx < viewPortItemsCount; idx++) {\n        _cachedRenderedItems[idx] = (\n          <View key={idx + ''}>{renderItem(data[idx], idx)}</View>\n        );\n        _renderedItems.push(_cachedRenderedItems[idx]);\n      }\n\n      _renderedItems.push(\n        <View\n          key={'below'}\n          // eslint-disable-next-line react-native/no-inline-styles\n          style={{\n            width: '100%',\n            height: (data.length - viewPortItemsCount) * itemHeight,\n          }}\n        />\n      );\n\n      setRenderedItems(_renderedItems);\n      setCachedRenderedItems(_cachedRenderedItems);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data]);\n\n  return <>{renderedItems}</>;\n}\n","import React, {\n  useEffect,\n  useRef,\n  //  useRef, useState\n} from 'react';\n\nimport {\n  View,\n  // useWindowDimensions\n} from 'react-native';\n\nimport type {\n  ScrollViewProps as ScrollViewPropsRN,\n  // StyleProp,\n  // ViewStyle,\n} from 'react-native';\n\nimport {\n  Emitter,\n  throttle1,\n  //  getLast\n} from '../../utils';\n\n// import queue from '../../queue';\n\nimport type { Evt, SimpleFlatlistProps } from './types';\n\nimport RenderItems from './RenderItems';\n// window.addEventListener('scroll', e => {\n//   console.log(window.scrollY);\n// });\nimport { useReactNavigation } from '../../utils';\nimport { Routes } from '../../routes';\n\ntype ScrollViewProps = ScrollViewPropsRN & React.HTMLAttributes<unknown>;\n\nfunction ScrollView(props: ScrollViewProps) {\n  let { contentContainerStyle } = props;\n\n  return (\n    <View style={contentContainerStyle == null ? {} : contentContainerStyle}>\n      {props.children}\n    </View>\n  );\n}\n\nlet ViewWrapStyle = { flex: 1 };\n\nexport default function SimpleFlatlist<T>(\n  props: SimpleFlatlistProps<T>\n): JSX.Element {\n  let {\n    contentContainerStyle,\n    itemHeight,\n    itemWidth,\n    maxNumColumn,\n    scrollEventThrottle,\n    data,\n    onScroll,\n    renderItem,\n    onEndReachedThreshold,\n    onEndReached,\n  } = props;\n\n  // maxNumColumn = maxNumColumn || 3;\n\n  contentContainerStyle = {\n    // maxWidth: itemWidth * maxNumColumn * 1.01,\n    // @ts-ignore\n    ...contentContainerStyle,\n  };\n\n  let nav = useReactNavigation<Routes>();\n  // console.log('FFFFFFF');\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  let event = new Emitter<Evt>();\n\n  let shouldScroll = useRef(true);\n\n  let lastScrollPosition = useRef<ScrollToOptions>({\n    top: 0,\n    left: 0,\n    behavior: 'auto',\n  });\n\n  useEffect(() => {\n    let timeoutId = setTimeout(() => null);\n\n    let subFocus = nav.addListener('focus', () => {\n      timeoutId = setTimeout(() => {\n        window.scrollTo(lastScrollPosition.current);\n        shouldScroll.current = true;\n      }, 10);\n    });\n\n    let subBlur = nav.addListener('blur', () => {\n      shouldScroll.current = false;\n    });\n\n    return () => {\n      clearTimeout(timeoutId);\n      subFocus();\n      subBlur;\n      // @ts-ignore\n      event.emitters = {};\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // console.log('iiii', nav.isFocused());\n\n  useEffect(() => {\n    let prevPos = 0;\n\n    let handler = throttle1(\n      () => {\n        if (shouldScroll.current === false) {\n          return;\n        }\n\n        lastScrollPosition.current.top = window.scrollY;\n        lastScrollPosition.current.left = window.scrollX;\n\n        onScroll &&\n          onScroll({\n            // TODO: improve on this\n            // @ts-ignore\n            nativeEvent: {\n              contentOffset: { y: window.scrollY, x: window.scrollX },\n            },\n          });\n\n        let position = Math.ceil(window.scrollY / itemHeight);\n\n        if (prevPos === position) {\n          return;\n        }\n\n        prevPos = position;\n        event.emit('scroll', position);\n      },\n      scrollEventThrottle == null ? 16 : scrollEventThrottle\n    );\n\n    window.addEventListener('scroll', handler);\n\n    return () => {\n      window.removeEventListener('scroll', handler);\n    };\n  }, [event, itemHeight, scrollEventThrottle, onScroll, nav]);\n\n  return (\n    <View style={ViewWrapStyle}>\n      <ScrollView\n        contentContainerStyle={\n          contentContainerStyle == null ? {} : contentContainerStyle\n        }>\n        <RenderItems\n          // style={{ flexBasis: '100%' }}\n          itemHeight={itemHeight}\n          itemWidth={itemWidth}\n          event={event}\n          onEndReachedThreshold={onEndReachedThreshold}\n          onEndReached={onEndReached}\n          // maxItemToRender={42}\n          maxNumColumn={maxNumColumn}\n          // @ts-ignore\n          renderItem={renderItem}\n          data={data}\n        />\n      </ScrollView>\n    </View>\n  );\n}\n","/* eslint-disable react-native/no-inline-styles */\nimport React, { useEffect, useLayoutEffect, useRef, useState } from 'react';\n\nimport {\n  Platform,\n  useColorScheme,\n  useWindowDimensions,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { handleAppBarDisplay } from '../components/AppBar';\n\nimport SparcklineCard, {\n  CARD_HEIGHT,\n  CARD_PADDING,\n  CARD_WIDTH,\n} from '../components/SparklineCard';\n\nimport { Center } from '../primitives';\n\nimport Screen from '../components/Screen';\n\nimport { Emitter } from '../utils';\n\nimport { CoinMetadata } from '../types';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport SimpleFlatlist from '../components/SimpleFlatlist';\n// import { RecoilRoot, useRecoilState } from 'recoil';\n// import { useRecoilState } from 'recoil';\n// import { signInEmail } from './atoms';\n// import { updateReturn } from 'typescript';\n\nimport { WSS_URL } from '../constants';\n\nimport { signIn as signInAtom } from '../atoms';\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\n\nimport { toastAtom } from '../components/Toast';\n\nimport { wssIsOpen } from '../events';\n\nimport { inboundEvt, outboundEvt, wss } from '../events';\n\n// wssIsOpen().then(() => {\n\n// })\n\ntype Evt = {\n  points: number[];\n  mounted: boolean;\n  market: CoinMetadata[];\n  scroll: number;\n};\n\nlet MemoSparcklineCard = React.memo(SparcklineCard);\n\nlet renderItem = (item: CoinMetadata | null, _idx: number): JSX.Element => {\n  if (item == null) {\n    return <></>;\n  }\n\n  return (\n    <MemoSparcklineCard\n      // key={idx + 'rendered'}\n      height={CARD_HEIGHT}\n      width={CARD_WIDTH}\n      item={item}\n    />\n  );\n};\n\n// let queueHandler = () => {\n//   // only run the last render job\n//   queue.run(1);\n\n//   requestAnimationFrame(queueHandler);\n// };\n\n// import {\n//   CARD_WIDTH,\n//   CARD_PADDING,\n//   CARD_HEIGHT,\n// } from '../components/SparklineCard/constants';\n\nfunction computeNumCardsToFetch(\n  max: number,\n  width: number,\n  height: number\n): number {\n  let numCol = Math.floor(width / (CARD_WIDTH + 2 * CARD_PADDING));\n\n  numCol = numCol < 1 ? 1 : numCol > max ? max : numCol;\n\n  let numRow = Math.ceil(height / (CARD_HEIGHT + 2 * CARD_PADDING));\n\n  let numVisibleCards = numCol * numRow;\n\n  let totalCardsToFecth = numVisibleCards * 2;\n\n  return totalCardsToFecth;\n}\n\nlet METADATA_PAGE_SIZE = 250;\n\nexport default React.memo(\n  function HomeScreen(): JSX.Element {\n    let inserts = useSafeAreaInsets();\n\n    let viewWrapStyle = { ...inserts, paddingTop: 0 };\n\n    let [market, setMarket] = useState([] as CoinMetadata[]);\n\n    let { height, width } = useWindowDimensions();\n    let maxNumCol = 3;\n\n    let numCards = useRef<null | number>(null);\n\n    let isFirstMetadata = useRef(true);\n\n    let metadataPending = useRef(false);\n\n    let _market = useRef([] as CoinMetadata[]);\n\n    // let [numCards, setNumCards] = useState(\n    //   computeNumCardsToFetch(maxNumCol, width, height)\n    // );\n\n    // useLayoutEffect(() => {\n    //   // let rm = evt.on('points', p => setPoints(p));\n    //   let rm = evt.on('market', m => setMarket(m));\n    //   return () => rm();\n    // }, []);\n\n    let metadataHasEnded = useRef(false);\n\n    useEffect(() => {\n      let rm1 = inboundEvt.on('metadata', metadata => {\n        _market.current = [..._market.current, ...metadata];\n        // if (isFirstMetadata.current) {}\n        // console.log('AAAAA', metadata);\n        setMarket(_market.current);\n      });\n\n      let rm2 = inboundEvt.on('metadataEnd', () => {\n        metadataHasEnded.current = true;\n      });\n\n      return () => {\n        rm1();\n        rm2();\n      };\n    }, []);\n\n    useEffect(() => {\n      metadataPending.current = false;\n    }, [market]);\n\n    useEffect(() => {\n      let computedNumCards = computeNumCardsToFetch(maxNumCol, width, height);\n      if (isFirstMetadata.current && market.length > 0) {\n        isFirstMetadata.current = false;\n        metadataPending.current = true;\n        outboundEvt.emit('metadata', [\n          computedNumCards,\n          computedNumCards + METADATA_PAGE_SIZE,\n        ]);\n      }\n    }, [height, market, maxNumCol, width]);\n\n    useEffect(() => {\n      let computedNumCards = computeNumCardsToFetch(maxNumCol, width, height);\n      if (numCards.current !== computedNumCards) {\n        let extraCardsToFetch = computedNumCards - (numCards.current || 0);\n\n        if (extraCardsToFetch > 0) {\n          outboundEvt.emit('metadata', [\n            computedNumCards - extraCardsToFetch,\n            computedNumCards,\n          ]);\n        }\n\n        numCards.current = computedNumCards;\n      }\n      // setNumCards();\n\n      console.log('mounted');\n\n      // evt.emit('mounted', true);\n    }, [height, maxNumCol, width]);\n\n    // let OSTheme = useColorScheme();\n\n    return (\n      <Screen>\n        <Center>\n          <View\n            style={{\n              flex: 1,\n              maxWidth: maxNumCol * (CARD_WIDTH + 2 * CARD_PADDING),\n              marginTop:\n                Platform.OS === 'web' ? -8 : Platform.OS === 'ios' ? -12 : 0,\n            }}>\n            <SimpleFlatlist\n              itemHeight={CARD_HEIGHT + CARD_PADDING * 2}\n              itemWidth={CARD_WIDTH + CARD_PADDING * 2}\n              data={market}\n              // @ts-ignore\n              renderItem={renderItem}\n              // renderBlankItem={renderBlankItem}\n              showsVerticalScrollIndicator={false}\n              showsHorizontalScrollIndicator={false}\n              scrollEventThrottle={12}\n              maxNumColumn={maxNumCol}\n              onScroll={handleAppBarDisplay}\n              onEndReachedThreshold={100}\n              onEndReached={_pos => {\n                // console.log('pos', pos);\n                if (metadataHasEnded.current || metadataPending.current) {\n                  return;\n                }\n\n                metadataPending.current = true;\n\n                outboundEvt.emit('metadata', [\n                  market.length,\n                  market.length + METADATA_PAGE_SIZE,\n                ]);\n              }}\n              contentContainerStyle={{\n                justifyContent: 'center',\n                alignContent: 'center',\n                flexDirection: 'row',\n                flexWrap: 'wrap',\n                overflow: 'hidden',\n                ...viewWrapStyle,\n                // maxWidth: (CARD_WIDTH + CARD_PADDING * 2) * 3 * 1.01,\n              }}\n            />\n          </View>\n        </Center>\n      </Screen>\n    );\n  },\n  () => true\n);\n\n// let evt = new Emitter<Evt>();\n\n// wss.addEventListener('message', async msg => {\n//   let market: CoinMetadata[] = JSON.parse(msg.data);\n//   // console.log(market[1]);\n//   // let points: number[] = market[0].sparkline_in_7d.price;\n//   // console.log('recived msg:', points);\n//   // evt.emit('points', points);\n//   // console.log('mkt', market);\n\n//   evt.emit('market', market);\n// });\n\n// wss.addEventListener('error', e => {\n//   console.log('EEEE', e);\n// });\n\n// evt.on('mounted', () => {\n//   if (wss.readyState === wss.OPEN) {\n//     // console.log('****&&&&&');\n//     // for some reason on native websocket takes longer to establish connection\n//     // hack create a recusrve loop trying to send a market order.\n//     // set a timeout to avoid maximun callback stack error\n//     try {\n//       wss.send('market');\n//     } catch (e) {\n//       console.log(Platform.OS, e);\n//       setTimeout(() => {\n//         evt.emit('mounted', true);\n//       }, 10);\n//     }\n//   } else {\n//     setTimeout(() => {\n//       evt.emit('mounted', true);\n//     }, 10);\n//   }\n// });\n\n// let CARD_WIDTH = 360;\n// let CARD_HEIGHT = 175;\n// let CARD_PADDING = 8;\n// let MAX_RENDER_ITEMS = 10;\n// let MIN_RENDER_ITEMS = 5;\n\n// <View style={{ flex: 1 }}>\n// <ScrollView\n//   showsVerticalScrollIndicator={false}\n//   showsHorizontalScrollIndicator={false}\n//   scrollEventThrottle={16 * 4}\n//   onScroll={e => {\n//     let { y } = e.nativeEvent.contentOffset;\n\n//     event.emit('scroll', Math.floor(y));\n//     // console.log('e', );\n//     // setPos(Math.floor(y / (CARD_HEIGHT + CARD_PADDING * 2)));\n//   }}\n//   contentContainerStyle={{\n//     justifyContent: 'center',\n//     alignContent: 'center',\n//     // flexDirection: 'row',\n//     flexWrap: 'wrap',\n//   }}>\n//   {market.map((v, idx) => (\n//     <RenderItem\n//       event={event}\n//       key={idx + ''}\n//       renderItem={renderIterms}\n//       item={v}\n//       index={idx}\n//     />\n//   ))}\n// </ScrollView>\n// </View>\n// <Center style={{ flex: 1, height: '100%' }}>\n// <FlatList\n//   // extraData={counter}\n//   showsVerticalScrollIndicator={false}\n//   showsHorizontalScrollIndicator={false}\n//   // @ts-ignore\n//   contentContainerStyle={contentStyle}\n//   key={numColumns}\n//   // paddingTop={Platform.select({\n//   //   android: 20,\n//   //   ios: headerHeight + 4,\n//   //   default: headerHeight - 10,\n//   // })}\n//   numColumns={Platform.OS === 'web' ? numColumns - 1 : numColumns}\n//   scrollEventThrottle={16 * 4}\n//   onScroll={e => {\n//     console.log('EEEE', e);\n//   }}\n//   // onScroll={handleAppBarDisplay}\n//   // data={market.map(v => ({ ...v }))}\n//   data={market}\n//   keyExtractor={(item, index) => item.market_cap_rank + '-' + index}\n//   renderItem={renderIterms}\n//   keyboardDismissMode=\"on-drag\"\n//   keyboardShouldPersistTaps=\"never\"\n//   // initialNumToRender={20}\n//   maxToRenderPerBatch={40}\n//   windowSize={41}\n//   removeClippedSubviews={true}\n//   // getItemLayout={getItemLayout}\n// />\n// </Center>\n\n// const ImageCard = ({ uri }: { uri: string }) => {\n//   return (\n//     <Image\n//       // resizeMode=\"cover\"\n//       // eslint-disable-next-line react-native/no-inline-styles\n//       style={{ width: '100%', height: '100%' }}\n//       source={{\n//         uri: uri,\n//       }}\n//       alt=\"image\"\n//     />\n//   );\n// };\n\n// {/* <ScrollView\n// // contentContainerStyle={{ flexGrow: 1 }}\n// // scrollEnabled={parentScrollEnabled}\n// scrollEventThrottle={16 * 4}\n// onScroll={handleAppBarDisplay}>\n// <Box zIndex={100} paddingLeft={6} paddingRight={6}>\n// <Flex\n//   padding={4}\n//   paddingTop={Platform.select({\n//     android: 20,\n//     ios: headerHeight + 4,\n//     default: headerHeight - 10,\n//   })}\n//   direction=\"row\"\n//   wrap=\"wrap\"\n//   justify=\"center\">\n//     <Card>\n//       <Sparkline points={points} />\n//     </Card>\n\n//     {/* <Card>\n//       <ImageCard uri={uri} />\n//     </Card>\n//     <Card>\n//       <ImageCard uri={uri} />\n//     </Card>\n//     <Card>\n//       <ImageCard uri={uri} />\n//     </Card>\n//     <Card>\n//       <ImageCard uri={uri} />\n//     </Card>\n//     <Card>\n//       <ImageCard uri={uri} />\n//     </Card>\n//     <Card>\n//       <ImageCard uri={uri} />\n//     </Card>\n//     <Card>\n//       <ImageCard uri={uri} />\n//     </Card>\n//     <Card>\n//       <ImageCard uri={uri} />\n//     </Card>\n//     <Card>\n//       <ImageCard uri={uri} />\n//     </Card>\n//     <Card>\n//       <ImageCard uri={uri} />\n//     </Card>\n//     <Card>\n//       <ImageCard uri={uri} />\n//     </Card>\n//     <Card>\n//       <ImageCard uri={uri} />\n//     </Card>\n//     <Card>\n//       <ImageCard uri={uri} />\n//     </Card> */}\n//   </Flex>\n// </Box>\n// </ScrollView> */}\n\n// {/* <Card>\n//     <ScrollBox\n//       width={'100%'}\n//       height={'100%'}\n//       // ref={scrollBoxRef}\n//       getScrollPosition={getScrollPosition}>\n//       {Chart2}\n//     </ScrollBox>\n//   </Card> */}\n//   {/* <Card>\n//     <CanvasChart />\n//   </Card> */}\n//   {/* <Box style={{ width: '100%' }}>\n//     <ScrollView\n//       // contentContainerStyle={{ flex: 1 }}\n//       // scrollEnabled={true}\n//       nestedScrollEnabled={true}\n//       horizontal={true}\n//       // hack\n//       // onTouchStart={() => {\n//       //   setParentScrollEnabled(false);\n//       // }}\n//       // onScrollEndDrag={() => {\n//       //   setParentScrollEnabled(true);\n//       // }}\n//       // onMomentumScrollEnd={() => {\n//       //   setParentScrollEnabled(true);\n//       // }}\n//     >\n//       <Card>\n//         <ImageCard uri={uri} />\n//       </Card>\n//       <Card>\n//         <ImageCard uri={uri} />\n//       </Card>\n//       <Card>\n//         <ImageCard uri={uri} />\n//       </Card>\n//       <Card>\n//         <ImageCard uri={uri} />\n//       </Card>\n//       <Card>\n//         <ImageCard uri={uri} />\n//       </Card>\n//       <Card>\n//         <ImageCard uri={uri} />\n//       </Card>\n//       <Card>\n//         <ImageCard uri={uri} />\n//       </Card>\n//       <Card>\n//         <ImageCard uri={uri} />\n//       </Card>\n//     </ScrollView>\n//   </Box> */}\n\n// import // StyleSheet,\n// SafeAreaView,\n// // ScrollView,\n// // StatusBar,\n// // StyleSheet,\n// // Text,\n// // useColorScheme,\n// // View,\n// from 'react-native';\n\n// // import AsyncStorage from '@react-native-async-storage/async-storage';\n\n// // const App = () => {\n// //   return (\n// //     <SafeAreaView>\n// //       <View>\n// //         <Text>Hello World !!!!</Text>\n// //       </View>\n// //     </SafeAreaView>\n// //   );\n// // };\n\n// export default App;\n","const scriptRel = 'modulepreload';const seen = {};const base = '/';export const __vitePreload = function preload(baseModule, deps) {\n    // @ts-ignore\n    if (!__VITE_IS_MODERN__ || !deps || deps.length === 0) {\n        return baseModule();\n    }\n    return Promise.all(deps.map((dep) => {\n        // @ts-ignore\n        dep = `${base}${dep}`;\n        // @ts-ignore\n        if (dep in seen)\n            return;\n        // @ts-ignore\n        seen[dep] = true;\n        const isCss = dep.endsWith('.css');\n        const cssSelector = isCss ? '[rel=\"stylesheet\"]' : '';\n        // @ts-ignore check if the file is already preloaded by SSR markup\n        if (document.querySelector(`link[href=\"${dep}\"]${cssSelector}`)) {\n            return;\n        }\n        // @ts-ignore\n        const link = document.createElement('link');\n        // @ts-ignore\n        link.rel = isCss ? 'stylesheet' : scriptRel;\n        if (!isCss) {\n            link.as = 'script';\n            link.crossOrigin = '';\n        }\n        link.href = dep;\n        // @ts-ignore\n        document.head.appendChild(link);\n        if (isCss) {\n            return new Promise((res, rej) => {\n                link.addEventListener('load', res);\n                link.addEventListener('error', rej);\n            });\n        }\n    })).then(() => baseModule());\n}","import React, { Suspense } from 'react';\n\nimport Bg from './components/Background';\nimport { delay } from './utils';\n\n// import HomeScreen from './Home';\n// import MenuScreen from './Menu';\n// import FormScreen from './Form';\n// import SearchScreen from './Search';\n// import FeedbackScreen from './Feedback';\n\nlazyLoad()\nasync function lazyLoad() {\n  await delay(1000)\n  await Promise.all([\n    import('./screens/SignIn'),\n    import('./screens/SignUp'),\n    import('./screens/Account'),\n  ]);\n}\n\nexport function LazySignIn(): JSX.Element {\n  const Lazy = React.lazy(() => import('./screens/SignIn'));\n\n  return (\n    <Suspense fallback={<Bg />}>\n      <Lazy />\n    </Suspense>\n  );\n}\n\nexport function LazySignUp(): JSX.Element {\n  const Lazy = React.lazy(() => import('./screens/SignUp'));\n\n  return (\n    <Suspense fallback={<Bg />}>\n      <Lazy />\n    </Suspense>\n  );\n}\n\nexport function LazyAccount(): JSX.Element {\n  const Lazy = React.lazy(() => import('./screens/Account'));\n\n  return (\n    <Suspense fallback={<Bg />}>\n      <Lazy />\n    </Suspense>\n  );\n}\n","import appBaseTheme from '../themes/base';\nimport { mergeStyleSheetMany, StyleSheet } from '../primitives';\n\nimport { Platform } from 'react-native';\n\nimport { yellow65 } from '../components/theme';\n\nexport let computeFormHeight = ({\n  height,\n  padding,\n}: {\n  height: number;\n  padding: number;\n}): number => {\n  return height + 2 * padding;\n};\n\nexport let baseInput = StyleSheet.create({\n  title: {\n    paddingLeft: 6,\n    fontSize: 16,\n    marginBottom: 8,\n    fontWeight: '400',\n  },\n  content: {\n    fontWeight: '400',\n    // lineHeight: 24,\n    fontSize: 15,\n    paddingTop: 8,\n    paddingBottom: 8,\n    paddingLeft: 16,\n    paddingRight: 16,\n    ...appBaseTheme.raw.buttonsContent,\n    borderRadius: 5,\n  },\n});\n\nexport let base = StyleSheet.create({\n  formContainer: {\n    position: Platform.OS === 'web' ? ('fixed' as 'absolute') : 'absolute',\n  },\n  formContent: {\n    // ...appBaseTheme.raw.cardContent,\n    height: Platform.OS === 'android' ? 520 : 470,\n    padding: 30,\n    width: 360,\n  },\n  formTitle: {\n    fontWeight: '600',\n    fontSize: 24,\n  },\n  formSubTitle: {\n    fontSize: 14,\n    marginTop: 4,\n    fontWeight: '500',\n  },\n  inputsContainer: { marginTop: 20 },\n  inputTitle: baseInput.raw.title,\n  inputContent: baseInput.raw.content,\n  passwordInput: { ...baseInput.raw.title, paddingTop: 12 },\n  forgotPassword: {\n    fontSize: 12,\n    alignSelf: 'flex-end',\n    margin: 4,\n    fontWeight: '700',\n  },\n  submitButtonContainer: {\n    // marginTop: 48,\n    paddingLeft: 16,\n    paddingRight: 16,\n    paddingTop: 12,\n    paddingBottom: 12,\n    borderRadius: 6,\n  },\n  submitButtonContent: {\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  signUpContainer: {\n    justifyContent: 'center',\n    marginTop: 24,\n  },\n  signUpSubText: {},\n  signUpMainText: {\n    marginTop: -2,\n  },\n  inputErrorMsg: {\n    height: 20,\n    fontSize: 12,\n    paddingTop: 4,\n    paddingLeft: 10,\n  },\n});\n\nimport {\n  gray90,\n  yellow100,\n  white30,\n  blue85,\n  gray10,\n  green45,\n  black12,\n  blue45,\n  gray45,\n  red50,\n  red35,\n  orange95,\n} from '../components/theme';\n\nexport let dark = mergeStyleSheetMany(\n  // appBaseTheme,\n  base,\n  // appDarkTheme,\n  StyleSheet.create({\n    formContainer: {},\n    formContent: {\n      // ...appDarkTheme.raw.cardContent,\n    },\n    formTitle: {\n      color: gray90,\n    },\n    formSubTitle: {\n      color: gray90,\n    },\n    inputsContainer: {},\n    inputTitle: {\n      color: gray90,\n    },\n    inputContent: {\n      // ...appDarkTheme.raw.buttonsContent,\n      borderColor: white30,\n      // backgroundColor: 'rgba(41, 42, 58, 0.5)',\n      backgroundColor: black12,\n      color: gray90,\n    },\n    passwordInput: {\n      color: gray90,\n    },\n    forgotPassword: {\n      color: blue85,\n    },\n    submitButtonContainer: {\n      // backgroundColor: '#524495',\n      backgroundColor: blue45,\n    },\n    submitButtonContent: {\n      color: gray90,\n    },\n    signUpSubText: { color: gray90 },\n    // inputFocus: {\n    //   borderColor: gray45,\n    //   color: gray90,\n    // },\n    inputFocusError: {\n      borderColor: red50,\n      color: gray90,\n    },\n    inputErrorMsg: {\n      color: red50,\n    },\n  })\n);\n\n// let gray10 = '#262626';\n\nexport let light = mergeStyleSheetMany(\n  // appBaseTheme,\n  // appLightTheme,\n  base,\n  StyleSheet.create({\n    formContainer: {},\n    formContent: {},\n    formTitle: {\n      color: gray10,\n    },\n    formSubTitle: {\n      color: gray10,\n    },\n    inputsContainer: {},\n    inputTitle: {\n      color: gray10,\n    },\n    inputContent: {\n      // ...appLightTheme.raw.buttonsContent,\n      borderColor: yellow65,\n\n      backgroundColor: orange95,\n      color: gray10,\n    },\n    passwordInput: {\n      color: gray10,\n    },\n    forgotPassword: {\n      color: green45,\n    },\n    submitButtonContainer: {\n      backgroundColor: green45,\n    },\n    submitButtonContent: {\n      color: yellow100,\n    },\n    signUpSubText: { color: gray10 },\n    inputFocusError: {\n      borderColor: red50,\n      color: gray10,\n    },\n    inputErrorMsg: {\n      color: red50,\n    },\n  })\n);\n","import React from 'react';\n\nimport {\n  Text,\n  useColorScheme,\n  useWindowDimensions,\n  Pressable,\n  View,\n} from 'react-native';\n\nimport Screen from '../components/Screen';\nimport Card from '../components/Card';\n\nimport { Center, StyleSheet } from '../primitives';\n\nimport { singOut } from '../api';\n\nimport { dark, light } from './forms-theme';\nimport { computeFormHeight } from './forms-theme';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil';\nimport { session as sessionAtom } from './atoms';\nimport { useReactNavigation, getLast } from '../utils';\nimport { Routes } from '../routes';\nimport { routeStateAtom } from '../components/AppBar/atoms';\n\nlet signOutBaseTheme = StyleSheet.create({\n  paddingElement: {\n    height: 200,\n    width: 1,\n  },\n  container: {\n    height: '100%',\n    // width: '100px',\n    padding: 0,\n    margin: 0,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  content: {\n    width: '100%',\n  },\n});\n\nexport default function UnderConstruction(): JSX.Element {\n  let inserts = useSafeAreaInsets();\n  let OSTheme = useColorScheme();\n  let formTheme = OSTheme === 'dark' ? dark : light;\n\n  // let session = useRecoilValue(sessionAtom);\n  // let setSession = useSetRecoilState(sessionAtom);\n  let routeName = useRecoilValue(routeStateAtom);\n\n  let nav = useReactNavigation<Routes>();\n  let routeState = nav.getState();\n  let coinId = getLast(routeState.routes)?.params?.coinId;\n  // dd.routeNames = ['Search']\n  console.log('====', coinId);\n  return (\n    <Screen>\n      <Center style={[inserts, formTheme.formContainer]}>\n        <Card containerStyle={{}} contentStyle={formTheme.formContent}>\n          <View style={signOutBaseTheme.container}>\n            <View style={signOutBaseTheme.content}>\n              <Text style={formTheme.formTitle}>Under Construction</Text>\n              <Text style={formTheme.formSubTitle}>\n                {routeName} {coinId}\n              </Text>\n            </View>\n          </View>\n        </Card>\n      </Center>\n    </Screen>\n  );\n}\n","import React from 'react';\n\nimport {\n  Text,\n  useColorScheme,\n  useWindowDimensions,\n  Pressable,\n  View,\n} from 'react-native';\n\nimport Screen from '../components/Screen';\nimport Card from '../components/Card';\n\nimport { Center, StyleSheet } from '../primitives';\n\nimport { singOut } from '../api';\n\nimport { dark, light } from './forms-theme';\nimport { computeFormHeight } from './forms-theme';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil';\nimport { session as sessionAtom } from './atoms';\nimport { useReactNavigation, getLast } from '../utils';\nimport { Routes } from '../routes';\nimport { routeStateAtom } from '../components/AppBar/atoms';\n\nlet signOutBaseTheme = StyleSheet.create({\n  paddingElement: {\n    height: 200,\n    width: 1,\n  },\n  container: {\n    height: '100%',\n    // width: '100px',\n    padding: 0,\n    margin: 0,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default function UnderConstruction(): JSX.Element {\n  let inserts = useSafeAreaInsets();\n  let OSTheme = useColorScheme();\n  let formTheme = OSTheme === 'dark' ? dark : light;\n\n  // let session = useRecoilValue(sessionAtom);\n  // let setSession = useSetRecoilState(sessionAtom);\n  let routeName = useRecoilValue(routeStateAtom);\n\n  let nav = useReactNavigation<Routes>();\n  let routeState = nav.getState();\n  let coinId = getLast(routeState.routes)?.params?.coinId;\n  // dd.routeNames = ['Search']\n  console.log('====', coinId);\n  return (\n    <Screen>\n      <Center style={[inserts, formTheme.formContainer]}>\n        <Card containerStyle={{}} contentStyle={formTheme.formContent}>\n          <View style={signOutBaseTheme.container}>\n            <Text style={formTheme.formTitle}>404</Text>\n          </View>\n        </Card>\n      </Center>\n    </Screen>\n  );\n}\n","import React from 'react'; // useEffect\n\nimport { RecoilRoot } from 'recoil';\n// import { StatusBar } from 'react-native';\n\nimport Bg from './components/Background';\n// import {SafeAreaView, Appearance, Text, View, Platform} from 'react-native';\n// @ts-ignore\n// import font from './font.css';\n\n// let colorScheme = Appearance.getColorScheme();\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport LinearGradient from 'react-native-linear-gradient';\n\nimport { DefaultTheme, NavigationContainer } from '@react-navigation/native';\n// import { RectButton, BorderlessButton } from 'react-native-gesture-handler';\n\n// import SearchLayout from './vendors/react-navigation-addon-search-layout';\n// import {Ionicons} from '@expo/vector-icons';\n// import Ionicons from 'react-native-vector-icons/Ionicons';\n\nimport DashboardScreen from './screens/Dashboard';\n// import AccountScreen from './screens/Account';\n// import MenuScreen from './Menu';\n// import SearchScreen from './Search';\n// import Form from './Form';\n\n// import AppBar from './components/AppBar';\n\nimport { LazySignUp, LazySignIn, LazyAccount } from './Lazy';\n\n// import { apiURL } from './constants';\n\n// import { SafeAreaView } from 'react-native-safe-area-context';\nimport {\n  Platform,\n  StatusBar,\n  // View, useColorScheme\n} from 'react-native';\n\nconst Stack = createNativeStackNavigator();\n\nlet AppTheme = {\n  ...DefaultTheme,\n  colors: {\n    ...DefaultTheme.colors,\n    background:\n      Platform.OS === 'web'\n        ? 'rgba(0, 0, 0, 0)'\n        : DefaultTheme.colors.background,\n    primary: 'rgb(0, 45, 85)',\n  },\n  dark: true,\n};\n// console.log(Stack);\n\n// const config = {\n//   dependencies: {\n//     'linear-gradient': LinearGradient,\n//   },\n// };\n\nimport UnderConstruction from './screens/UnderConstruction';\nimport NoMatch from './screens/NoMatch';\n// fetch(apiURL)\n//   .then(async r => {\n//     try {\n//       console.log(Platform.OS, Date(), await r.json());\n//     } catch (e) {\n//       console.log(Platform.OS, Date(), 'API response not json', e);\n//     }\n//   })\n//   .catch(e => {\n//     console.log(Platform.OS, Date(), 'ERR: no API::', e);\n//   });\n\nexport default function App(): JSX.Element {\n  // let scheme = useColorScheme();\n\n  // let AppTheme = scheme === 'dark' ? DarkTheme : DefaultTheme;\n\n  // let nativeBaseTheme = extendTheme({\n  //   config: 'dark',\n  // });\n\n  // let headerRight = useMemo(HeaderRight, []);\n  // StatusBar.setBarStyle('light-content');\n  return (\n    <RecoilRoot>\n      <NavigationContainer\n        theme={AppTheme}\n        documentTitle={{ enabled: false }}\n        // ref={navigationRef}\n        linking={{\n          prefixes: ['http:localhost:3000'],\n          enabled: true,\n          config: {\n            screens: {\n              Account: '/account',\n              Dashboard: '/dashboard',\n              SignIn: '/sign-in',\n              SignUp: '/sign-up',\n              Favorites: '/favorities',\n              Search: '/search',\n              Chart: {\n                path: '/chart/:coinId',\n              },\n              NoMatch: '*',\n            },\n          },\n        }}>\n        <StatusBar\n          barStyle=\"light-content\"\n          backgroundColor=\"transparent\"\n          translucent={true}\n        />\n        <Bg />\n        <Stack.Navigator\n          initialRouteName=\"Dashboard\"\n          screenOptions={{\n            headerShown: false,\n          }}>\n          <Stack.Group>\n            <Stack.Screen name=\"Account\" component={LazyAccount} />\n            <Stack.Screen name=\"Dashboard\" component={DashboardScreen} />\n            <Stack.Screen name=\"SignIn\" component={LazySignIn} />\n            <Stack.Screen name=\"SignUp\" component={LazySignUp} />\n            <Stack.Screen name=\"Favorites\" component={UnderConstruction} />\n            <Stack.Screen name=\"Search\" component={UnderConstruction} />\n            <Stack.Screen name=\"Chart\" component={UnderConstruction} />\n            <Stack.Screen name=\"NoMatch\" component={NoMatch} />\n          </Stack.Group>\n\n          {/* <Stack.Group screenOptions={{ presentation: 'modal' }} /> */}\n        </Stack.Navigator>\n      </NavigationContainer>\n      {/* </NativeBaseProvider> */}\n    </RecoilRoot>\n  );\n}\n\n// import // StyleSheet,\n// SafeAreaView,\n// // ScrollView,\n// // StatusBar,\n// // StyleSheet,\n// // Text,\n// // useColorScheme,\n// // View,\n// from 'react-native';\n\n// // import AsyncStorage from '@react-native-async-storage/async-storage';\n\n// // const App = () => {\n// //   return (\n// //     <SafeAreaView>\n// //       <View>\n// //         <Text>Hello World !!!!</Text>\n// //       </View>\n// //     </SafeAreaView>\n// //   );\n// // };\n\n// export default App;\n\n// import {\n//   Immutable,\n//   // Update,\n//   isProd,\n//   lens,\n//   // stateMachine,\n//   // useStateMachine,\n//   // StateRef,\n// } from '../utils';\n// // const sine = (n: number): number[] => {\n// //   const ret: number[] = []\n// //   for (let idx = 0; idx <= n; idx++) {\n// //     ret.push(Math.sin((idx / n) * 2 * Math.PI))\n// //   }\n\n// //   return ret\n// // }\n\n// // const chartPoints = sine(2e3)\n\n// type Price = {\n//   date: string;\n//   open: number;\n//   high: number;\n//   low: number;\n//   close: number;\n//   volume: number;\n// };\n\n// type PriceSeries = Price[];\n\n// const Log = 0;\n// const FirstRender = 1;\n// const ScrollPosition = 2;\n// const WindowResize = 3;\n// const ScrollArea = 4;\n// const MouseOut = 5;\n// const FetchData = 6;\n\n// type Log = [typeof Log, string];\n// type FirstRender = [typeof FirstRender, boolean];\n// type ScrollPosition = [typeof ScrollPosition, [number, number]];\n// type WindowResize = [typeof WindowResize, [number, number]];\n// type ScrollArea = [typeof ScrollArea, [number, number]];\n// type MouseOut = [typeof MouseOut, boolean];\n// type FetchData = [typeof FetchData, string];\n\n// type Msg =\n//   | Log\n//   | FirstRender\n//   | ScrollPosition\n//   | WindowResize\n//   | ScrollArea\n//   | MouseOut\n//   | FetchData;\n\n// type Transition<S> = {\n//   [Log]: (s: S, p: string) => [S, null];\n//   [FirstRender]: (s: S, p: boolean) => [S, null];\n//   [ScrollPosition]: (s: S, p: [number, number]) => [S, null];\n//   [WindowResize]: (s: S, p: [number, number]) => [S, null];\n//   [ScrollArea]: (s: S, p: [number, number]) => [S, null];\n//   [MouseOut]: (s: S, p: boolean) => [S, null];\n//   [FetchData]: (s: S, p: string) => [S, Promise<Log>];\n// };\n\n// type State = Immutable<{\n//   [FirstRender]: boolean;\n//   [ScrollPosition]: [number, number];\n//   [WindowResize]: [number, number];\n//   [ScrollArea]: [number, number];\n//   [MouseOut]: boolean;\n//   [FetchData]: PriceSeries | null;\n// }>;\n\n// const lenses = lens<State>();\n\n// const stateLens = {\n//   [FirstRender]: lenses(FirstRender),\n//   [ScrollPosition]: lenses(ScrollPosition),\n//   [WindowResize]: lenses(WindowResize),\n//   [ScrollArea]: lenses(ScrollArea),\n//   [MouseOut]: lenses(MouseOut),\n// };\n\n// const transition: Transition<State> = {\n//   [Log]: (s, p) => {\n//     if (!isProd()) {\n//       console.log(p, s);\n//     }\n\n//     return [s, null];\n//   },\n\n//   [FirstRender]: (s, p) => {\n//     const s1 = stateLens[FirstRender].set(p)(s);\n//     return [s1, null];\n//   },\n\n//   [ScrollPosition]: (s, p) => {\n//     const s1 = stateLens[ScrollPosition].set(p)(s);\n//     return [s1, null];\n//   },\n\n//   [WindowResize]: (s, p) => {\n//     const s1 = stateLens[WindowResize].set(p)(s);\n\n//     return [s1, null];\n//   },\n\n//   [ScrollArea]: (s, p) => {\n//     const s1 = stateLens[ScrollArea].set(p)(s);\n//     return [s1, null];\n//   },\n\n//   [MouseOut]: (s, p) => {\n//     const s1 = stateLens[MouseOut].set(p)(s);\n//     return [s1, null];\n//   },\n\n//   [FetchData]: (s, _p) => {\n//     return [\n//       s,\n//       new Promise(resolve => {\n//         fetch('http://localhost:3000/api', {\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//         })\n//           .then(data => data.json() as unknown as { prices: PriceSeries })\n//           .then(data => {\n//             console.log('AAAA', data);\n//             resolve([Log, JSON.stringify([data.prices[0]])]);\n//           });\n//       }),\n//     ];\n//   },\n// };\n\n// // const init = (): State => {\n// //   return {\n// //     [FirstRender]: true,\n// //     [ScrollPosition]: [0, 0],\n// //     [WindowResize]: [window.innerWidth, window.innerHeight],\n// //     [ScrollArea]: [0, 0],\n// //     [MouseOut]: true,\n// //     [FetchData]: null,\n// //   };\n// // };\n\n// // const update: Update<State, Msg> = (s, m) => {\n// //   switch (m[0]) {\n// //     case Log:\n// //       return transition[m[0]](s, m[1]);\n\n// //     case FirstRender:\n// //       return transition[m[0]](s, m[1]);\n\n// //     case ScrollPosition:\n// //       return transition[m[0]](s, m[1]);\n\n// //     case WindowResize:\n// //       return transition[m[0]](s, m[1]);\n\n// //     case ScrollArea:\n// //       return transition[m[0]](s, m[1]);\n\n// //     case MouseOut:\n// //       return transition[m[0]](s, m[1]);\n\n// //     case FetchData:\n// //       return transition[m[0]](s, m[1]);\n// //   }\n// // };\n\n// // let initState = init();\n// // let cached = () => initState;\n// // DispatcherTest();\n// // function DispatcherTest() {\n// //   // delay(2000);\n// //   // let initCB = useCallback(init, [init]);\n// //   // console.log('utils files', stateMachine);\n// //   // let [state, setState] = useState(-1);\n// //   let [state, dispatch] = useStateMachine(update, cached);\n\n// //   //\n// //   useEffect(() => {\n// //     // dispatch([FirstRender, false]);\n// //     dispatch([Log, 'log dipatcher']);\n// //     dispatch([FirstRender, false]);\n// //     dispatch([Log, 'log dipatcher 2']);\n// //   }, [dispatch]);\n\n// //   // console.log(state);\n\n// //   return <div> AAA </div>;\n// // }\n","import { AppRegistry, LogBox, Platform } from 'react-native';\nimport App from './src/App';\nimport appConfig from './app.json';\n\nAppRegistry.registerComponent(appConfig.name, () => App);\n\nif (process.env.NODE_ENV === 'production') {\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  window.console.log = () => {};\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  window.console.warn = () => {};\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  window.console.info = () => {};\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  window.console.error = () => {};\n}\n\nif (Platform.OS === 'web') {\n  if (process.env.NODE_ENV === 'production') {\n    // TODO: disable yellow box better\n    LogBox.ignoreAllLogs(true);\n    console.disableYellowBox = true;\n  }\n\n  AppRegistry.runApplication(appConfig.name, {\n    rootTag: document.getElementById('root'),\n  });\n}\n"],"names":["Platform","atom","forwardRef","StyleSheetRN","baseTheme","darkTheme","lightTheme","useState","BaseCard","darkAppTheme","lightAppTheme","useMemo","baseAppTheme","session","useRecoilValue","sessionAtom","CommonActions","useRecoilState","base","errorTheme","successTheme","warningTheme","notificationTheme","errorDarkTheme","errorLightTheme","successDarkTheme","successLightTheme","warningDarkTheme","warningLightTheme","notificationDarkTheme","notificationLightTheme","useSetRecoilState","appBarBaseTheme","useRef","Sparkline","AppBar","SparcklineCard","Suspense","signOutBaseTheme","Card","createNativeStackNavigator","DefaultTheme","RecoilRoot","NavigationContainer","UnderConstruction","NoMatch"],"mappings":"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"}