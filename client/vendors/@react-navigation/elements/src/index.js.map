{
  "version": 3,
  "sources": ["../../../tmp/@react-navigation/elements/src/Background.tsx", "../../../tmp/@react-navigation/elements/src/Header/getDefaultHeaderHeight.tsx", "../../../tmp/@react-navigation/elements/src/Header/getHeaderTitle.tsx", "../../../tmp/@react-navigation/elements/src/Header/Header.tsx", "../../../tmp/@react-navigation/elements/src/Header/HeaderBackground.tsx", "../../../tmp/@react-navigation/elements/src/getNamedContext.tsx", "../../../tmp/@react-navigation/elements/src/Header/HeaderShownContext.tsx", "../../../tmp/@react-navigation/elements/src/Header/HeaderTitle.tsx", "../../../tmp/@react-navigation/elements/src/Header/HeaderBackButton.tsx", "../../../tmp/@react-navigation/elements/src/MaskedView.tsx", "../../../tmp/@react-navigation/elements/src/PlatformPressable.tsx", "../../../tmp/@react-navigation/elements/src/Header/HeaderBackContext.tsx", "../../../tmp/@react-navigation/elements/src/Header/HeaderHeightContext.tsx", "../../../tmp/@react-navigation/elements/src/Header/useHeaderHeight.tsx", "../../../tmp/@react-navigation/elements/src/MissingIcon.tsx", "../../../tmp/@react-navigation/elements/src/ResourceSavingView.tsx", "../../../tmp/@react-navigation/elements/src/SafeAreaProviderCompat.tsx", "../../../tmp/@react-navigation/elements/src/Screen.tsx", "../../../tmp/@react-navigation/elements/src/index.tsx"],
  "sourcesContent": ["import { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport { View } from 'react-native';\nexport default function Background({ style, ...rest }) {\n    const { colors } = useTheme();\n    return (<View {...rest} style={[{ flex: 1, backgroundColor: colors.background }, style]}/>);\n}\n", "import { Platform } from 'react-native';\nexport default function getDefaultHeaderHeight(layout, modalPresentation, statusBarHeight) {\n    let headerHeight;\n    const isLandscape = layout.width > layout.height;\n    if (Platform.OS === 'ios') {\n        if (Platform.isPad) {\n            if (modalPresentation) {\n                headerHeight = 56;\n            }\n            else {\n                headerHeight = 50;\n            }\n        }\n        else {\n            if (isLandscape) {\n                headerHeight = 32;\n            }\n            else {\n                if (modalPresentation) {\n                    headerHeight = 56;\n                }\n                else {\n                    headerHeight = 44;\n                }\n            }\n        }\n    }\n    else if (Platform.OS === 'android') {\n        headerHeight = 56;\n    }\n    else {\n        headerHeight = 64;\n    }\n    return headerHeight + statusBarHeight;\n}\n", "export default function getHeaderTitle(options, fallback) {\n    return typeof options.headerTitle === 'string'\n        ? options.headerTitle\n        : options.title !== undefined\n            ? options.title\n            : fallback;\n}\n", "import * as React from 'react';\nimport { Animated, Platform, StyleSheet, View } from 'react-native';\nimport { useSafeAreaFrame, useSafeAreaInsets, } from 'react-native-safe-area-context';\nimport getDefaultHeaderHeight from './getDefaultHeaderHeight';\nimport HeaderBackground from './HeaderBackground';\nimport HeaderShownContext from './HeaderShownContext';\nimport HeaderTitle from './HeaderTitle';\nconst warnIfHeaderStylesDefined = (styles) => {\n    Object.keys(styles).forEach((styleProp) => {\n        const value = styles[styleProp];\n        if (styleProp === 'position' && value === 'absolute') {\n            console.warn(\"position: 'absolute' is not supported on headerStyle. If you would like to render content under the header, use the 'headerTransparent' option.\");\n        }\n        else if (value !== undefined) {\n            console.warn(`${styleProp} was given a value of ${value}, this has no effect on headerStyle.`);\n        }\n    });\n};\nexport default function Header(props) {\n    const insets = useSafeAreaInsets();\n    const frame = useSafeAreaFrame();\n    const isParentHeaderShown = React.useContext(HeaderShownContext);\n    const { layout = frame, modal = false, title, headerTitle: customTitle, headerTitleAlign = Platform.select({\n        ios: 'center',\n        default: 'left',\n    }), headerLeft, headerLeftLabelVisible, headerTransparent, headerTintColor, headerBackground, headerRight, headerTitleAllowFontScaling: titleAllowFontScaling, headerTitleStyle: titleStyle, headerLeftContainerStyle: leftContainerStyle, headerRightContainerStyle: rightContainerStyle, headerTitleContainerStyle: titleContainerStyle, headerBackgroundContainerStyle: backgroundContainerStyle, headerStyle: customHeaderStyle, headerShadowVisible, headerPressColor, headerPressOpacity, headerStatusBarHeight = isParentHeaderShown ? 0 : insets.top, } = props;\n    const defaultHeight = getDefaultHeaderHeight(layout, modal, headerStatusBarHeight);\n    const { height = defaultHeight, minHeight, maxHeight, backgroundColor, borderBottomColor, borderBottomEndRadius, borderBottomLeftRadius, borderBottomRightRadius, borderBottomStartRadius, borderBottomWidth, borderColor, borderEndColor, borderEndWidth, borderLeftColor, borderLeftWidth, borderRadius, borderRightColor, borderRightWidth, borderStartColor, borderStartWidth, borderStyle, borderTopColor, borderTopEndRadius, borderTopLeftRadius, borderTopRightRadius, borderTopStartRadius, borderTopWidth, borderWidth, \n    // @ts-expect-error: web support for shadow\n    boxShadow, elevation, shadowColor, shadowOffset, shadowOpacity, shadowRadius, opacity, transform, ...unsafeStyles } = StyleSheet.flatten(customHeaderStyle || {});\n    if (process.env.NODE_ENV !== 'production') {\n        warnIfHeaderStylesDefined(unsafeStyles);\n    }\n    const safeStyles = {\n        backgroundColor,\n        borderBottomColor,\n        borderBottomEndRadius,\n        borderBottomLeftRadius,\n        borderBottomRightRadius,\n        borderBottomStartRadius,\n        borderBottomWidth,\n        borderColor,\n        borderEndColor,\n        borderEndWidth,\n        borderLeftColor,\n        borderLeftWidth,\n        borderRadius,\n        borderRightColor,\n        borderRightWidth,\n        borderStartColor,\n        borderStartWidth,\n        borderStyle,\n        borderTopColor,\n        borderTopEndRadius,\n        borderTopLeftRadius,\n        borderTopRightRadius,\n        borderTopStartRadius,\n        borderTopWidth,\n        borderWidth,\n        // @ts-expect-error: boxShadow is only for Web\n        boxShadow,\n        elevation,\n        shadowColor,\n        shadowOffset,\n        shadowOpacity,\n        shadowRadius,\n        opacity,\n        transform,\n    };\n    // Setting a property to undefined triggers default style\n    // So we need to filter them out\n    // Users can use `null` instead\n    for (const styleProp in safeStyles) {\n        // @ts-expect-error: typescript wrongly complains that styleProp cannot be used to index safeStyles\n        if (safeStyles[styleProp] === undefined) {\n            // @ts-expect-error\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete safeStyles[styleProp];\n        }\n    }\n    const backgroundStyle = [\n        safeStyles,\n        headerShadowVisible === false && {\n            elevation: 0,\n            shadowOpacity: 0,\n            borderBottomWidth: 0,\n        },\n    ];\n    const leftButton = headerLeft\n        ? headerLeft({\n            tintColor: headerTintColor,\n            pressColor: headerPressColor,\n            pressOpacity: headerPressOpacity,\n            labelVisible: headerLeftLabelVisible,\n        })\n        : null;\n    const rightButton = headerRight\n        ? headerRight({\n            tintColor: headerTintColor,\n            pressColor: headerPressColor,\n            pressOpacity: headerPressOpacity,\n        })\n        : null;\n    const headerTitle = typeof customTitle !== 'function'\n        ? (props) => (<HeaderTitle {...props}/>)\n        : customTitle;\n    return (<React.Fragment>\n      <Animated.View pointerEvents=\"box-none\" style={[\n            StyleSheet.absoluteFill,\n            { zIndex: 0 },\n            backgroundContainerStyle,\n        ]}>\n        {headerBackground ? (headerBackground({ style: backgroundStyle })) : headerTransparent ? null : (<HeaderBackground style={backgroundStyle}/>)}\n      </Animated.View>\n      <Animated.View pointerEvents=\"box-none\" style={[{ height, minHeight, maxHeight, opacity, transform }]}>\n        <View pointerEvents=\"none\" style={{ height: headerStatusBarHeight }}/>\n        <View pointerEvents=\"box-none\" style={styles.content}>\n          <Animated.View pointerEvents=\"box-none\" style={[\n            styles.left,\n            headerTitleAlign === 'center' && styles.expand,\n            { marginStart: insets.left },\n            leftContainerStyle,\n        ]}>\n            {leftButton}\n          </Animated.View>\n          <Animated.View pointerEvents=\"box-none\" style={[\n            styles.title,\n            {\n                // Avoid the title from going offscreen or overlapping buttons\n                maxWidth: headerTitleAlign === 'center'\n                    ? layout.width -\n                        ((leftButton\n                            ? headerLeftLabelVisible !== false\n                                ? 80\n                                : 32\n                            : 16) +\n                            Math.max(insets.left, insets.right)) *\n                            2\n                    : layout.width -\n                        ((leftButton ? 72 : 16) +\n                            (rightButton ? 72 : 16) +\n                            insets.left -\n                            insets.right),\n            },\n            titleContainerStyle,\n        ]}>\n            {headerTitle({\n            children: title,\n            allowFontScaling: titleAllowFontScaling,\n            tintColor: headerTintColor,\n            style: titleStyle,\n        })}\n          </Animated.View>\n          <Animated.View pointerEvents=\"box-none\" style={[\n            styles.right,\n            styles.expand,\n            { marginEnd: insets.right },\n            rightContainerStyle,\n        ]}>\n            {rightButton}\n          </Animated.View>\n        </View>\n      </Animated.View>\n    </React.Fragment>);\n}\nconst styles = StyleSheet.create({\n    content: {\n        flex: 1,\n        flexDirection: 'row',\n        alignItems: 'stretch',\n    },\n    title: {\n        marginHorizontal: 16,\n        justifyContent: 'center',\n    },\n    left: {\n        justifyContent: 'center',\n        alignItems: 'flex-start',\n    },\n    right: {\n        justifyContent: 'center',\n        alignItems: 'flex-end',\n    },\n    expand: {\n        flexGrow: 1,\n        flexBasis: 0,\n    },\n});\n", "import { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport { Animated, Platform, StyleSheet, } from 'react-native';\nexport default function HeaderBackground({ style, ...rest }) {\n    const { colors } = useTheme();\n    return (<Animated.View style={[\n            styles.container,\n            {\n                backgroundColor: colors.card,\n                borderBottomColor: colors.border,\n                shadowColor: colors.border,\n            },\n            style,\n        ]} {...rest}/>);\n}\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        ...Platform.select({\n            android: {\n                elevation: 4,\n            },\n            ios: {\n                shadowOpacity: 0.85,\n                shadowRadius: 0,\n                shadowOffset: {\n                    width: 0,\n                    height: StyleSheet.hairlineWidth,\n                },\n            },\n            default: {\n                borderBottomWidth: StyleSheet.hairlineWidth,\n            },\n        }),\n    },\n});\n", "import * as React from 'react';\nconst contexts = '__react_navigation__elements_contexts';\n// We use a global variable to keep our contexts so that we can reuse same contexts across packages\nglobal[contexts] = global[contexts] ?? new Map();\nexport default function getNamedContext(name, initialValue) {\n    let context = global[contexts].get(name);\n    if (context) {\n        return context;\n    }\n    context = React.createContext(initialValue);\n    context.displayName = name;\n    global[contexts].set(name, context);\n    return context;\n}\n", "import getNamedContext from '../getNamedContext';\nconst HeaderShownContext = getNamedContext('HeaderShownContext', false);\nexport default HeaderShownContext;\n", "import { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport { Animated, Platform, StyleSheet, } from 'react-native';\nexport default function HeaderTitle({ tintColor, style, ...rest }) {\n    const { colors } = useTheme();\n    return (<Animated.Text accessibilityRole=\"header\" aria-level=\"1\" numberOfLines={1} {...rest} style={[\n            styles.title,\n            { color: tintColor === undefined ? colors.text : tintColor },\n            style,\n        ]}/>);\n}\nconst styles = StyleSheet.create({\n    title: Platform.select({\n        ios: {\n            fontSize: 17,\n            fontWeight: '600',\n        },\n        android: {\n            fontSize: 20,\n            fontFamily: 'sans-serif-medium',\n            fontWeight: 'normal',\n        },\n        default: {\n            fontSize: 18,\n            fontWeight: '500',\n        },\n    }),\n});\n", "import backIcon from \"../assets/back-icon.png\";\nimport backIconMask from \"../assets/back-icon-mask.png\";\nimport { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport { Animated, I18nManager, Image, Platform, StyleSheet, View, } from 'react-native';\nimport MaskedView from '../MaskedView';\nimport PlatformPressable from '../PlatformPressable';\nexport default function HeaderBackButton({ disabled, allowFontScaling, backImage, label, labelStyle, labelVisible, onLabelLayout, onPress, pressColor, pressOpacity, screenLayout, tintColor: customTintColor, titleLayout, truncatedLabel = 'Back', accessibilityLabel = label && label !== 'Back' ? `${label}, back` : 'Go back', testID, style, }) {\n    const { colors } = useTheme();\n    const [initialLabelWidth, setInitialLabelWidth] = React.useState(undefined);\n    const tintColor = customTintColor !== undefined\n        ? customTintColor\n        : Platform.select({\n            ios: colors.primary,\n            default: colors.text,\n        });\n    const handleLabelLayout = (e) => {\n        onLabelLayout?.(e);\n        setInitialLabelWidth(e.nativeEvent.layout.x + e.nativeEvent.layout.width);\n    };\n    const shouldTruncateLabel = () => {\n        return (!label ||\n            (initialLabelWidth &&\n                titleLayout &&\n                screenLayout &&\n                (screenLayout.width - titleLayout.width) / 2 < initialLabelWidth + 26));\n    };\n    const renderBackImage = () => {\n        if (backImage) {\n            return backImage({ tintColor });\n        }\n        else {\n            return (<Image style={[\n                    styles.icon,\n                    Boolean(labelVisible) && styles.iconWithLabel,\n                    Boolean(tintColor) && { tintColor },\n                ]} source={backIcon} fadeDuration={0}/>);\n        }\n    };\n    const renderLabel = () => {\n        const leftLabelText = shouldTruncateLabel() ? truncatedLabel : label;\n        if (!labelVisible || leftLabelText === undefined) {\n            return null;\n        }\n        const labelElement = (<View style={screenLayout\n                ? // We make the button extend till the middle of the screen\n                    // Otherwise it appears to cut off when translating\n                    [styles.labelWrapper, { minWidth: screenLayout.width / 2 - 27 }]\n                : null}>\n        <Animated.Text accessible={false} onLayout={\n            // This measurement is used to determine if we should truncate the label when it doesn't fit\n            // Only measure it when label is not truncated because we want the measurement of full label\n            leftLabelText === label ? handleLabelLayout : undefined} style={[\n                styles.label,\n                tintColor ? { color: tintColor } : null,\n                labelStyle,\n            ]} numberOfLines={1} allowFontScaling={!!allowFontScaling}>\n          {leftLabelText}\n        </Animated.Text>\n      </View>);\n        if (backImage || Platform.OS !== 'ios') {\n            // When a custom backimage is specified, we can't mask the label\n            // Otherwise there might be weird effect due to our mask not being the same as the image\n            return labelElement;\n        }\n        return (<MaskedView maskElement={<View style={styles.iconMaskContainer}>\n            <Image source={backIconMask} style={styles.iconMask}/>\n            <View style={styles.iconMaskFillerRect}/>\n          </View>}>\n        {labelElement}\n      </MaskedView>);\n    };\n    const handlePress = () => onPress && requestAnimationFrame(onPress);\n    return (<PlatformPressable disabled={disabled} accessible accessibilityRole=\"button\" accessibilityLabel={accessibilityLabel} testID={testID} onPress={disabled ? undefined : handlePress} pressColor={pressColor} pressOpacity={pressOpacity} android_ripple={{ borderless: true }} style={[styles.container, disabled && styles.disabled, style]} hitSlop={Platform.select({\n            ios: undefined,\n            default: { top: 16, right: 16, bottom: 16, left: 16 },\n        })}>\n      <React.Fragment>\n        {renderBackImage()}\n        {renderLabel()}\n      </React.Fragment>\n    </PlatformPressable>);\n}\nconst styles = StyleSheet.create({\n    container: {\n        alignItems: 'center',\n        flexDirection: 'row',\n        minWidth: StyleSheet.hairlineWidth,\n        ...Platform.select({\n            ios: null,\n            default: {\n                marginVertical: 3,\n                marginHorizontal: 11,\n            },\n        }),\n    },\n    disabled: {\n        opacity: 0.5,\n    },\n    label: {\n        fontSize: 17,\n        // Title and back label are a bit different width due to title being bold\n        // Adjusting the letterSpacing makes them coincide better\n        letterSpacing: 0.35,\n    },\n    labelWrapper: {\n        // These styles will make sure that the label doesn't fill the available space\n        // Otherwise it messes with the measurement of the label\n        flexDirection: 'row',\n        alignItems: 'flex-start',\n    },\n    icon: Platform.select({\n        ios: {\n            height: 21,\n            width: 13,\n            marginLeft: 8,\n            marginRight: 22,\n            marginVertical: 12,\n            resizeMode: 'contain',\n            transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n        },\n        default: {\n            height: 24,\n            width: 24,\n            margin: 3,\n            resizeMode: 'contain',\n            transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n        },\n    }),\n    iconWithLabel: Platform.OS === 'ios'\n        ? {\n            marginRight: 6,\n        }\n        : {},\n    iconMaskContainer: {\n        flex: 1,\n        flexDirection: 'row',\n        justifyContent: 'center',\n    },\n    iconMaskFillerRect: {\n        flex: 1,\n        backgroundColor: '#000',\n    },\n    iconMask: {\n        height: 21,\n        width: 13,\n        marginLeft: -14.5,\n        marginVertical: 12,\n        alignSelf: 'center',\n        resizeMode: 'contain',\n        transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n    },\n});\n", "export default function MaskedView({ children }) {\n    return children;\n}\n", "import { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport { Animated, Easing, Platform, Pressable, } from 'react-native';\nconst AnimatedPressable = Animated.createAnimatedComponent(Pressable);\nconst ANDROID_VERSION_LOLLIPOP = 21;\nconst ANDROID_SUPPORTS_RIPPLE = Platform.OS === 'android' && Platform.Version >= ANDROID_VERSION_LOLLIPOP;\n/**\n * PlatformPressable provides an abstraction on top of Pressable to handle platform differences.\n */\nexport default function PlatformPressable({ onPressIn, onPressOut, android_ripple, pressColor, pressOpacity = 0.3, style, ...rest }) {\n    const { dark } = useTheme();\n    const [opacity] = React.useState(() => new Animated.Value(1));\n    const animateTo = (toValue, duration) => {\n        if (ANDROID_SUPPORTS_RIPPLE) {\n            return;\n        }\n        Animated.timing(opacity, {\n            toValue,\n            duration,\n            easing: Easing.inOut(Easing.quad),\n            useNativeDriver: true,\n        }).start();\n    };\n    const handlePressIn = (e) => {\n        animateTo(pressOpacity, 0);\n        onPressIn?.(e);\n    };\n    const handlePressOut = (e) => {\n        animateTo(1, 200);\n        onPressOut?.(e);\n    };\n    return (<AnimatedPressable onPressIn={handlePressIn} onPressOut={handlePressOut} android_ripple={ANDROID_SUPPORTS_RIPPLE\n            ? {\n                color: pressColor !== undefined\n                    ? pressColor\n                    : dark\n                        ? 'rgba(255, 255, 255, .32)'\n                        : 'rgba(0, 0, 0, .32)',\n                ...android_ripple,\n            }\n            : undefined} style={[{ opacity: !ANDROID_SUPPORTS_RIPPLE ? opacity : 1 }, style]} {...rest}/>);\n}\n", "import getNamedContext from '../getNamedContext';\nconst HeaderBackContext = getNamedContext('HeaderBackContext', undefined);\nexport default HeaderBackContext;\n", "import getNamedContext from '../getNamedContext';\nconst HeaderHeightContext = getNamedContext('HeaderHeightContext', undefined);\nexport default HeaderHeightContext;\n", "import * as React from 'react';\nimport HeaderHeightContext from './HeaderHeightContext';\nexport default function useHeaderHeight() {\n    const height = React.useContext(HeaderHeightContext);\n    if (height === undefined) {\n        throw new Error(\"Couldn't find the header height. Are you inside a screen in a navigator with a header?\");\n    }\n    return height;\n}\n", "import * as React from 'react';\nimport { StyleSheet, Text } from 'react-native';\nexport default function MissingIcon({ color, size, style }) {\n    return <Text style={[styles.icon, { color, fontSize: size }, style]}>\u23F7</Text>;\n}\nconst styles = StyleSheet.create({\n    icon: {\n        backgroundColor: 'transparent',\n    },\n});\n", "import * as React from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\nconst FAR_FAR_AWAY = 30000; // this should be big enough to move the whole view out of its container\nexport default function ResourceSavingScene({ visible, children, style, ...rest }) {\n    if (Platform.OS === 'web') {\n        return (<View \n        // @ts-expect-error: hidden exists on web, but not in React Native\n        hidden={!visible} style={[\n                { display: visible ? 'flex' : 'none' },\n                styles.container,\n                style,\n            ]} pointerEvents={visible ? 'auto' : 'none'} {...rest}>\n        {children}\n      </View>);\n    }\n    return (<View style={[styles.container, style]} \n    // box-none doesn't seem to work properly on Android\n    pointerEvents={visible ? 'auto' : 'none'}>\n      <View collapsable={false} removeClippedSubviews={\n        // On iOS & macOS, set removeClippedSubviews to true only when not focused\n        // This is an workaround for a bug where the clipped view never re-appears\n        Platform.OS === 'ios' || Platform.OS === 'macos' ? !visible : true} pointerEvents={visible ? 'auto' : 'none'} style={visible ? styles.attached : styles.detached}>\n        {children}\n      </View>\n    </View>);\n}\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        overflow: 'hidden',\n    },\n    attached: {\n        flex: 1,\n    },\n    detached: {\n        flex: 1,\n        top: FAR_FAR_AWAY,\n    },\n});\n", "import * as React from 'react';\nimport { Dimensions, Platform, StyleSheet, View, } from 'react-native';\nimport { initialWindowMetrics, SafeAreaInsetsContext, SafeAreaProvider, } from 'react-native-safe-area-context';\nconst { width = 0, height = 0 } = Dimensions.get('window');\n// To support SSR on web, we need to have empty insets for initial values\n// Otherwise there can be mismatch between SSR and client output\n// We also need to specify empty values to support tests environments\nconst initialMetrics = Platform.OS === 'web' || initialWindowMetrics == null\n    ? {\n        frame: { x: 0, y: 0, width, height },\n        insets: { top: 0, left: 0, right: 0, bottom: 0 },\n    }\n    : initialWindowMetrics;\nexport default function SafeAreaProviderCompat({ children, style }) {\n    return (<SafeAreaInsetsContext.Consumer>\n      {(insets) => {\n            if (insets) {\n                // If we already have insets, don't wrap the stack in another safe area provider\n                // This avoids an issue with updates at the cost of potentially incorrect values\n                // https://github.com/react-navigation/react-navigation/issues/174\n                return <View style={[styles.container, style]}>{children}</View>;\n            }\n            return (<SafeAreaProvider initialMetrics={initialMetrics} style={style}>\n            {children}\n          </SafeAreaProvider>);\n        }}\n    </SafeAreaInsetsContext.Consumer>);\n}\nSafeAreaProviderCompat.initialMetrics = initialMetrics;\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n});\n", "import { NavigationContext, NavigationRouteContext, } from '@react-navigation/native';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { useSafeAreaFrame, useSafeAreaInsets, } from 'react-native-safe-area-context';\nimport Background from './Background';\nimport getDefaultHeaderHeight from './Header/getDefaultHeaderHeight';\nimport HeaderHeightContext from './Header/HeaderHeightContext';\nimport HeaderShownContext from './Header/HeaderShownContext';\nexport default function Screen(props) {\n    const dimensions = useSafeAreaFrame();\n    const insets = useSafeAreaInsets();\n    const isParentHeaderShown = React.useContext(HeaderShownContext);\n    const parentHeaderHeight = React.useContext(HeaderHeightContext);\n    const { focused, modal = false, header, headerShown = true, headerTransparent, headerStatusBarHeight = isParentHeaderShown ? 0 : insets.top, navigation, route, children, style, } = props;\n    const [headerHeight, setHeaderHeight] = React.useState(() => getDefaultHeaderHeight(dimensions, modal, headerStatusBarHeight));\n    return (<Background accessibilityElementsHidden={!focused} importantForAccessibility={focused ? 'auto' : 'no-hide-descendants'} style={[styles.container, style]}>\n      <View style={styles.content}>\n        <HeaderShownContext.Provider value={isParentHeaderShown || headerShown !== false}>\n          <HeaderHeightContext.Provider value={headerShown ? headerHeight : parentHeaderHeight ?? 0}>\n            {children}\n          </HeaderHeightContext.Provider>\n        </HeaderShownContext.Provider>\n      </View>\n      {headerShown ? (<NavigationContext.Provider value={navigation}>\n          <NavigationRouteContext.Provider value={route}>\n            <View onLayout={(e) => {\n                const { height } = e.nativeEvent.layout;\n                setHeaderHeight(height);\n            }} style={headerTransparent ? styles.absolute : null}>\n              {header}\n            </View>\n          </NavigationRouteContext.Provider>\n        </NavigationContext.Provider>) : null}\n    </Background>);\n}\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        flexDirection: 'column-reverse',\n    },\n    // This is necessary to avoid applying 'column-reverse' to screen content\n    content: {\n        flex: 1,\n    },\n    absolute: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n    },\n});\n", "import backIcon from \"./assets/back-icon.png\";\nimport backIconMask from \"./assets/back-icon-mask.png\";\nexport const Assets = [\n    backIcon,\n    backIconMask,\n];\nexport { default as Background } from './Background';\nexport { default as getDefaultHeaderHeight } from './Header/getDefaultHeaderHeight';\nexport { default as getHeaderTitle } from './Header/getHeaderTitle';\nexport { default as Header } from './Header/Header';\nexport { default as HeaderBackButton } from './Header/HeaderBackButton';\nexport { default as HeaderBackContext } from './Header/HeaderBackContext';\nexport { default as HeaderBackground } from './Header/HeaderBackground';\nexport { default as HeaderHeightContext } from './Header/HeaderHeightContext';\nexport { default as HeaderShownContext } from './Header/HeaderShownContext';\nexport { default as HeaderTitle } from './Header/HeaderTitle';\nexport { default as useHeaderHeight } from './Header/useHeaderHeight';\nexport { default as MissingIcon } from './MissingIcon';\nexport { default as PlatformPressable } from './PlatformPressable';\nexport { default as ResourceSavingView } from './ResourceSavingView';\nexport { default as SafeAreaProviderCompat } from './SafeAreaProviderCompat';\nexport { default as Screen } from './Screen';\nexport * from './types';\n"],
  "mappings": "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",
  "names": []
}
