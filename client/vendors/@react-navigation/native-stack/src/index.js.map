{
  "version": 3,
  "sources": ["../../../tmp/@react-navigation/native-stack/src/navigators/createNativeStackNavigator.tsx", "../../../tmp/@react-navigation/native-stack/src/views/NativeStackView.tsx"],
  "sourcesContent": ["import { createNavigatorFactory, StackActions, StackRouter, useNavigationBuilder, } from '@react-navigation/native';\nimport * as React from 'react';\nimport NativeStackView from '../views/NativeStackView';\nfunction NativeStackNavigator({ initialRouteName, children, screenListeners, screenOptions, ...rest }) {\n    const { state, descriptors, navigation } = useNavigationBuilder(StackRouter, {\n        initialRouteName,\n        children,\n        screenListeners,\n        screenOptions,\n    });\n    React.useEffect(() => navigation?.addListener?.('tabPress', (e) => {\n        const isFocused = navigation.isFocused();\n        // Run the operation in the next frame so we're sure all listeners have been run\n        // This is necessary to know if preventDefault() has been called\n        requestAnimationFrame(() => {\n            if (state.index > 0 &&\n                isFocused &&\n                !e.defaultPrevented) {\n                // When user taps on already focused tab and we're inside the tab,\n                // reset the stack to replicate native behaviour\n                navigation.dispatch({\n                    ...StackActions.popToTop(),\n                    target: state.key,\n                });\n            }\n        });\n    }), [navigation, state.index, state.key]);\n    return (<NativeStackView {...rest} state={state} navigation={navigation} descriptors={descriptors}/>);\n}\nexport default createNavigatorFactory(NativeStackNavigator);\n", "import { getHeaderTitle, Header, HeaderBackButton, SafeAreaProviderCompat, Screen, } from '@react-navigation/elements';\nimport * as React from 'react';\nimport { Image, StyleSheet, View } from 'react-native';\nexport default function NativeStackView({ state, descriptors }) {\n    return (<SafeAreaProviderCompat>\n      <View style={styles.container}>\n        {state.routes.map((route, i) => {\n            const isFocused = state.index === i;\n            const canGoBack = i !== 0;\n            const previousKey = state.routes[i - 1]?.key;\n            const previousDescriptor = previousKey\n                ? descriptors[previousKey]\n                : undefined;\n            const { options, navigation, render } = descriptors[route.key];\n            const { header, headerShown, headerTintColor, headerBackImageSource, headerLeft, headerRight, headerTitle, headerTitleAlign, headerTitleStyle, headerStyle, headerShadowVisible, headerTransparent, contentStyle, headerBackTitle, } = options;\n            return (<Screen key={route.key} focused={isFocused} route={route} navigation={navigation} headerShown={headerShown} headerTransparent={headerTransparent} header={header !== undefined ? (header({\n                    back: previousDescriptor\n                        ? {\n                            title: getHeaderTitle(previousDescriptor.options, previousDescriptor.route.name),\n                        }\n                        : undefined,\n                    options,\n                    route,\n                    navigation,\n                })) : (<Header title={getHeaderTitle(options, route.name)} headerTintColor={headerTintColor} headerLeft={typeof headerLeft === 'function'\n                        ? ({ tintColor }) => headerLeft({\n                            tintColor,\n                            canGoBack,\n                            label: headerBackTitle,\n                        })\n                        : headerLeft === undefined && canGoBack\n                            ? ({ tintColor }) => (<HeaderBackButton tintColor={tintColor} backImage={headerBackImageSource !== undefined\n                                    ? () => (<Image source={headerBackImageSource} style={[\n                                            styles.backImage,\n                                            { tintColor },\n                                        ]}/>)\n                                    : undefined} onPress={navigation.goBack} canGoBack={canGoBack}/>)\n                            : headerLeft} headerRight={typeof headerRight === 'function'\n                        ? ({ tintColor }) => headerRight({ tintColor })\n                        : headerRight} headerTitle={typeof headerTitle === 'function'\n                        ? ({ children, tintColor }) => headerTitle({ children, tintColor })\n                        : headerTitle} headerTitleAlign={headerTitleAlign} headerTitleStyle={headerTitleStyle} headerStyle={[\n                        headerTransparent\n                            ? {\n                                position: 'absolute',\n                                backgroundColor: 'transparent',\n                            }\n                            : null,\n                        headerStyle,\n                        headerShadowVisible === false\n                            ? { shadowOpacity: 0, borderBottomWidth: 0 }\n                            : null,\n                    ]}/>)} style={[\n                    StyleSheet.absoluteFill,\n                    { display: isFocused ? 'flex' : 'none' },\n                ]}>\n              <View style={[styles.contentContainer, contentStyle]}>\n                {render()}\n              </View>\n            </Screen>);\n        })}\n      </View>\n    </SafeAreaProviderCompat>);\n}\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    contentContainer: {\n        flex: 1,\n    },\n    backImage: {\n        height: 24,\n        width: 24,\n        margin: 3,\n        resizeMode: 'contain',\n    },\n});\n"],
  "mappings": "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",
  "names": []
}
